<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>浅梦の博客</title>
  
  
  <link href="http://1804040636.github.io/atom.xml" rel="self"/>
  
  <link href="http://1804040636.github.io/"/>
  <updated>2023-10-18T02:37:32.111Z</updated>
  <id>http://1804040636.github.io/</id>
  
  <author>
    <name>溶金落梧桐</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>蓝桥杯双周赛第一场代码</title>
    <link href="http://1804040636.github.io/2023/10/17/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%8F%8C%E5%91%A8%E8%B5%9B%E7%AC%AC%E4%B8%80%E5%9C%BA/"/>
    <id>http://1804040636.github.io/2023/10/17/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%8F%8C%E5%91%A8%E8%B5%9B%E7%AC%AC%E4%B8%80%E5%9C%BA/</id>
    <published>2023-10-17T02:32:39.000Z</published>
    <updated>2023-10-18T02:37:32.111Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.lanqiao.cn/oj-contest/challenge-2/">比赛链接</a> 。</p><h3 id="第一题">第一题</h3><h4 id="正常">正常</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> zu;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        zu=in.nextInt();</span><br><span class="line">        <span class="keyword">while</span>(zu--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        String s;</span><br><span class="line">        s=in.next();</span><br><span class="line">        Map&lt;Character,Integer&gt; mp=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">            <span class="type">char</span> c=s.charAt(i);</span><br><span class="line">            mp.put(c,mp.getOrDefault(c,<span class="number">0</span>)+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(mp.size()==<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="type">boolean</span> st[]=<span class="keyword">new</span> <span class="title class_">boolean</span>[<span class="number">10</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">char</span> key:mp.keySet())&#123;</span><br><span class="line">                st[mp.get(key)]=<span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(st[<span class="number">1</span>]&amp;&amp;st[<span class="number">3</span>]) out.println(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> out.println(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            out.println(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>普通的题，无误</p><h3 id="第二题">第二题</h3><h4 id="正常-2">正常</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> zu;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        zu=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(zu--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> n,q;</span><br><span class="line">        n=in.nextInt();</span><br><span class="line">        q=in.nextInt();</span><br><span class="line">        <span class="type">int</span> res=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">            String s=in.next();</span><br><span class="line">            res=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;s.length();j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(s.charAt(j)==<span class="string">&#x27;R&#x27;</span>)&#123;</span><br><span class="line">                  res=res*<span class="number">2</span>;  </span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    res=res*<span class="number">2</span>-<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            out.println(res);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单思维，无误。</p><h3 id="第三题">第三题</h3><h4 id="正常-3">正常</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> zu;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        zu=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(zu--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">check</span><span class="params">(<span class="type">int</span> a[],<span class="type">int</span> k,<span class="type">int</span> mid)</span>&#123;</span><br><span class="line">        <span class="type">int</span> start=a[<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> g=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]-start&gt;mid)&#123;</span><br><span class="line">                g++;</span><br><span class="line">                start=a[i];</span><br><span class="line">                <span class="keyword">if</span>(g&gt;k) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        n=in.nextInt();</span><br><span class="line">        <span class="type">int</span> k=in.nextInt();</span><br><span class="line">        <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[n+<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) a[i]=in.nextInt();</span><br><span class="line">        Arrays.sort(a,<span class="number">1</span>,n+<span class="number">1</span>);</span><br><span class="line">        <span class="type">int</span> l=<span class="number">0</span>,r= (<span class="type">int</span>) (<span class="number">1e9</span>+<span class="number">7</span>);</span><br><span class="line">        <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">            <span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(check(a,k,mid))&#123;</span><br><span class="line">                r=mid;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                l=mid+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        out.println(l);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二分一下即可</p><h3 id="第四题">第四题</h3><h4 id="正常-4">正常</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> zu;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        zu=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(zu--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n,q;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> N=<span class="number">200010</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> v[]=<span class="keyword">new</span> <span class="title class_">int</span>[N],w[]=<span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">long</span> <span class="title function_">calc</span><span class="params">(<span class="type">int</span> m)</span>&#123;</span><br><span class="line">        <span class="type">long</span> dp[]=<span class="keyword">new</span> <span class="title class_">long</span>[m+<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=v[i];j&lt;=m;j++)&#123;</span><br><span class="line">                dp[j]=Math.max(dp[j],dp[j-v[i]]+w[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[m];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        n=in.nextInt();</span><br><span class="line">        <span class="type">int</span> m=in.nextInt();</span><br><span class="line">        q=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=q;i++) a[i]=in.nextInt();</span><br><span class="line">        Arrays.sort(a,<span class="number">1</span>,q+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">            <span class="type">int</span> t=in.nextInt();</span><br><span class="line">            v[i]=<span class="number">1</span>&lt;&lt;t;</span><br><span class="line">            w[i]=in.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        a[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="type">long</span> res=<span class="number">0</span>;</span><br><span class="line">        a[q+<span class="number">1</span>]=n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=q+<span class="number">1</span>;i++)&#123;</span><br><span class="line">            res=res+calc(a[i]-a[i-<span class="number">1</span>]-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拆开来做完全背包，但是第一行输入是nmq，后面输入顺序是qm，建议改下，有点搞人了。</p><h3 id="第五题">第五题</h3><h4 id="正常-5">正常</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> zu;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        zu=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(zu--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        String s=in.next();</span><br><span class="line">        String t=in.next();</span><br><span class="line">        <span class="type">char</span> st[]=<span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">3</span>*n+<span class="number">10</span>];</span><br><span class="line">        <span class="type">int</span> next[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>*n+<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="type">char</span> c=s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span>(c&lt;=<span class="string">&#x27;z&#x27;</span>&amp;&amp;c&gt;=<span class="string">&#x27;a&#x27;</span>) c=Character.toUpperCase(c);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(c&lt;=<span class="string">&#x27;Z&#x27;</span>&amp;&amp;c&gt;=<span class="string">&#x27;A&#x27;</span>)c=Character.toLowerCase(c);</span><br><span class="line">            st[i]=c;</span><br><span class="line">        &#125;</span><br><span class="line">        st[n]=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=n+<span class="number">1</span>,j=<span class="number">0</span>;i&lt;=<span class="number">2</span>*n;j++,i++)&#123;</span><br><span class="line">            st[i]=t.charAt(j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>*n+<span class="number">1</span>,j=<span class="number">0</span>;i&lt;=<span class="number">3</span>*n;i++,j++)&#123;</span><br><span class="line">            st[i]=t.charAt(j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">        <span class="comment">//bca abc</span></span><br><span class="line">        <span class="comment">//bca#abcabc</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">3</span>*n;i++)&#123;</span><br><span class="line">            <span class="type">int</span> len=next[i-<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">while</span> (len&gt;<span class="number">0</span>&amp;&amp;st[i]!=st[len]) len=next[len-<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(st[i]==st[len]) len++;</span><br><span class="line">            next[i]=len;</span><br><span class="line">            <span class="keyword">if</span>(next[i]==n)&#123;</span><br><span class="line">                ans=Math.min(ans,i-<span class="number">2</span>*n);</span><br><span class="line">                ans=Math.min(ans,<span class="number">3</span>*n-i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans==<span class="number">0x3f3f3f3f</span>)&#123;</span><br><span class="line">            out.println(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            out.println(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">            out.println(ans);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>kmp一下就行</p><h3 id="第六题">第六题</h3><h4 id="正常-6">正常</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line">const <span class="type">int</span> <span class="variable">maxn</span> <span class="operator">=</span> <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line">pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; p1[maxn];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">struct tx &#123;</span><br><span class="line">    <span class="type">int</span> a, b, i, ans;</span><br><span class="line"></span><br><span class="line">&#125; p2[maxn];</span><br><span class="line">vector&lt;tx&gt; p4, p3;</span><br><span class="line"></span><br><span class="line">bool <span class="title function_">cmp</span><span class="params">(pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; a, pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; b)</span> &#123;</span><br><span class="line"><span class="comment">//    if (a.second == b.second) &#123;</span></span><br><span class="line">        <span class="keyword">return</span> a.first &gt; b.first;</span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//    return a.second &gt; b.second;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool <span class="title function_">cmp2</span><span class="params">(pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; a, pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; b)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (a.second == b.second) &#123;</span><br><span class="line">        <span class="keyword">return</span> a.first &gt; b.first;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a.second &lt; b.second;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool <span class="title function_">cmp3</span><span class="params">(tx tt, tx yy)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (yy.b == tt.b) &#123;</span><br><span class="line">        <span class="keyword">return</span> yy.i &gt; tt.i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> yy.b &gt; tt.b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bool <span class="title function_">cmp4</span><span class="params">(tx tt, tx yy)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (yy.b == tt.b) &#123;</span><br><span class="line">        <span class="keyword">return</span> yy.i &gt; tt.i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> yy.b &lt; tt.b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">template&lt;<span class="keyword">class</span> <span class="title class_">Info</span>, <span class="keyword">class</span> <span class="title class_">Tag</span>&gt;</span><br><span class="line">struct Segtree &#123;</span><br><span class="line">#define lson k &lt;&lt; <span class="number">1</span>, l, mid</span><br><span class="line">#define rson k &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    vector&lt;Info&gt; info;</span><br><span class="line">    vector&lt;Tag&gt; tag;</span><br><span class="line"></span><br><span class="line">    Segtree(<span class="type">int</span> _n) : n(_n), info((_n + <span class="number">5</span>) &lt;&lt; <span class="number">2</span>), tag((_n + <span class="number">5</span>) &lt;&lt; <span class="number">2</span>) &#123;&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">pushdown</span><span class="params">(<span class="type">int</span> k, <span class="type">int</span> l, <span class="type">int</span> r)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> l + r &gt;&gt; <span class="number">1</span>, lt = k &lt;&lt; <span class="number">1</span>, rt = k &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line">        info[lt].down(tag[k], mid - l + <span class="number">1</span>);</span><br><span class="line">        info[rt].down(tag[k], r - mid);</span><br><span class="line">        tag[lt].down(tag[k]);</span><br><span class="line">        tag[rt].down(tag[k]);</span><br><span class="line">        tag[k] = Tag();<span class="comment">//初始化tag</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">pushup</span><span class="params">(<span class="type">int</span> k)</span> &#123;</span><br><span class="line">        info[k] = merge(info[k &lt;&lt; <span class="number">1</span>], info[k &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">sigupd</span><span class="params">(<span class="type">int</span> k, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> x, <span class="type">int</span> y, Info &amp;z)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (l &gt; y || r &lt; x) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (l == r) <span class="keyword">return</span> <span class="keyword">void</span>(info[k] = z);</span><br><span class="line">        <span class="keyword">if</span> (tag[k].change()) pushdown(k, l, r);</span><br><span class="line">        <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        sigupd(lson, x, y, z), sigupd(rson, x, y, z);</span><br><span class="line">        pushup(k);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">upd</span><span class="params">(<span class="type">int</span> k, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> x, <span class="type">int</span> y, Tag &amp;z)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (l &gt; y || r &lt; x) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (l &gt;= x &amp;&amp; r &lt;= y) &#123;</span><br><span class="line">            info[k].down(z, r - l + <span class="number">1</span>);</span><br><span class="line">            tag[k].down(z);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (tag[k].change()) pushdown(k, l, r);</span><br><span class="line">        <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        upd(lson, x, y, z), upd(rson, x, y, z);</span><br><span class="line">        pushup(k);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Info <span class="title function_">qry</span><span class="params">(<span class="type">int</span> k, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (l &gt; y || r &lt; x) <span class="keyword">return</span> Info();</span><br><span class="line">        <span class="keyword">if</span> (l &gt;= x &amp;&amp; r &lt;= y) <span class="keyword">return</span> info[k];</span><br><span class="line">        <span class="keyword">if</span> (tag[k].change()) pushdown(k, l, r);</span><br><span class="line">        <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> merge(qry(lson, x, y), qry(rson, x, y));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">sigupd</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, Info &amp;z)</span> &#123;</span><br><span class="line">        sigupd(<span class="number">1</span>, <span class="number">1</span>, n, x, y, z);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">upd</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r, Tag &amp;z)</span> &#123;</span><br><span class="line">        upd(<span class="number">1</span>, <span class="number">1</span>, n, l, r, z);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Info <span class="title function_">qry</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> qry(<span class="number">1</span>, <span class="number">1</span>, n, l, r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">struct Tag &#123;</span><br><span class="line">    <span class="type">int</span> val;</span><br><span class="line"></span><br><span class="line">    bool <span class="title function_">change</span><span class="params">()</span> &#123; <span class="keyword">return</span> val != <span class="number">0</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">down</span><span class="params">(const Tag &amp;t)</span> &#123;</span><br><span class="line">        <span class="comment">//标记下放</span></span><br><span class="line">        val += t.val;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">struct Info &#123;</span><br><span class="line">    <span class="type">int</span> sum;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">down</span><span class="params">(const Tag &amp;t, <span class="type">int</span> len)</span> &#123;</span><br><span class="line">        <span class="comment">//标记下放</span></span><br><span class="line">        sum += t.val * len;</span><br><span class="line">    &#125;</span><br><span class="line">    friend Info <span class="title function_">merge</span><span class="params">(const Info &amp;a, const Info &amp;b)</span> &#123;</span><br><span class="line">        Info res;</span><br><span class="line">        res.sum = a.sum + b.sum;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; p1[i].first &gt;&gt; p1[i].second;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        cin &gt;&gt; p2[i].a &gt;&gt; p2[i].b;</span><br><span class="line">        p2[i].i = i;</span><br><span class="line">        p2[i].ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (p2[i].a &gt; p2[i].b) &#123;</span><br><span class="line">            p4.emplace_back(p2[i]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            p3.emplace_back(p2[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(p1 + <span class="number">1</span>, p1 + <span class="number">1</span> + n, cmp2);</span><br><span class="line">    sort(p3.begin(), p3.end(), cmp3);</span><br><span class="line">    sort(p4.begin(), p4.end(), cmp4);</span><br><span class="line">    Tag  t;</span><br><span class="line">    t.val = <span class="number">1</span>;</span><br><span class="line">    Segtree&lt;Info, Tag&gt; <span class="title function_">segtree1</span><span class="params">(maxn)</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = <span class="number">1</span>; i &lt; p3.size(); i++) &#123;</span><br><span class="line">        <span class="keyword">while</span> (j &lt;= n &amp;&amp; p3[i].b - <span class="number">1</span> &gt;= p1[j].second) &#123;</span><br><span class="line">            segtree1.upd(p1[j].first, p1[j].second, t);</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        p3[i].ans = segtree1.qry(p3[i].a, p3[i].a).sum;</span><br><span class="line">        p2[p3[i].i].ans = p3[i].ans;</span><br><span class="line">    &#125;</span><br><span class="line">    Segtree&lt;Info, Tag&gt; <span class="title function_">segtree2</span><span class="params">(maxn)</span>;</span><br><span class="line">    sort(p1 + <span class="number">1</span>, p1 + <span class="number">1</span> + n, cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span> ,j = <span class="number">1</span>; i &lt; p4.size() ; i++)&#123;</span><br><span class="line">        <span class="keyword">while</span> (j &lt;= n &amp;&amp; p4[i].b + <span class="number">1</span> &lt;= p1[j].first) &#123;</span><br><span class="line">            segtree2.upd(p1[j].first, p1[j].second, t);</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        p4[i].ans = segtree2.qry(p4[i].a, p4[i].a).sum;</span><br><span class="line">        p2[p4[i].i].ans = p4[i].ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span> ; i &lt;= m ; i ++)&#123;</span><br><span class="line">        cout&lt;&lt;p2[i].ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>离线处理+扫描线</p>]]></content>
    
    
    <summary type="html">蓝桥杯双周赛第一场代码</summary>
    
    
    
    <category term="ACM" scheme="http://1804040636.github.io/categories/ACM/"/>
    
    <category term="蓝桥杯" scheme="http://1804040636.github.io/categories/ACM/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
    <category term="Java" scheme="http://1804040636.github.io/tags/Java/"/>
    
    <category term="ACM" scheme="http://1804040636.github.io/tags/ACM/"/>
    
    <category term="蓝桥杯" scheme="http://1804040636.github.io/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>十三届蓝桥杯javaB组7,8代码</title>
    <link href="http://1804040636.github.io/2023/03/20/%E5%8D%81%E4%B8%89%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AFjavaB%E7%BB%847,8%E4%BB%A3%E7%A0%81/"/>
    <id>http://1804040636.github.io/2023/03/20/%E5%8D%81%E4%B8%89%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AFjavaB%E7%BB%847,8%E4%BB%A3%E7%A0%81/</id>
    <published>2023-03-20T02:32:39.000Z</published>
    <updated>2023-04-01T11:04:45.021Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数组切分">数组切分</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 数组切分 &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> zu;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> t=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(zu=<span class="number">1</span>;zu&lt;=t;zu++) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>) (<span class="number">1e4</span>+<span class="number">10</span>)];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> f[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>) (<span class="number">1e4</span>+<span class="number">10</span>)];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> mod= (<span class="type">int</span>) (<span class="number">1e9</span>+<span class="number">7</span>);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) a[i]=in.nextInt();</span><br><span class="line">        <span class="type">int</span> ma=<span class="number">0</span>,mi=<span class="number">0</span>;</span><br><span class="line">        f[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            ma=a[i];mi=a[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i;j&gt;=<span class="number">1</span>;j--)&#123;</span><br><span class="line">                ma=Math.max(a[j],ma);</span><br><span class="line">                mi=Math.min(a[j],mi);</span><br><span class="line">                <span class="keyword">if</span>(ma-mi+<span class="number">1</span>==i-j+<span class="number">1</span>)&#123;</span><br><span class="line">                    f[i]=(f[i]+f[j-<span class="number">1</span>])%mod;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        out.print(f[n]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="回忆迷宫">回忆迷宫</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayDeque;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> zu;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> t=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(zu=<span class="number">1</span>;zu&lt;=t;zu++) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">char</span> g[][]=<span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">250</span>][<span class="number">250</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> dx[]=&#123;<span class="number">1</span>,<span class="number">0</span>,-<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> dy[]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,-<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">char</span> v[]:g) Arrays.fill(v,<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        String s=in.next();</span><br><span class="line">        <span class="type">int</span> u=<span class="number">110</span>,r=<span class="number">110</span>,d=<span class="number">110</span>,l=<span class="number">110</span>;</span><br><span class="line">        <span class="type">int</span> x=<span class="number">110</span>,y=<span class="number">110</span>;</span><br><span class="line">        g[x][y]=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        g[x+<span class="number">1</span>][y]=<span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">        g[x-<span class="number">1</span>][y]=<span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">        g[x][y+<span class="number">1</span>]=<span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">        g[x][y-<span class="number">1</span>]=<span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="type">char</span> c=s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span>(c==<span class="string">&#x27;U&#x27;</span>)&#123;</span><br><span class="line">                x--;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">&#x27;D&#x27;</span>)&#123;</span><br><span class="line">                x++;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">&#x27;L&#x27;</span>)&#123;</span><br><span class="line">                y--;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                y++;</span><br><span class="line">            &#125;</span><br><span class="line">            g[x][y]=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;<span class="number">4</span>;k++)&#123;</span><br><span class="line">                <span class="type">int</span> a=dx[k]+x;</span><br><span class="line">                <span class="type">int</span> b=dy[k]+y;</span><br><span class="line">                <span class="keyword">if</span>(g[a][b]==<span class="string">&#x27;1&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">                g[a][b]=<span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            u=Math.min(u,x);</span><br><span class="line">            d=Math.max(d,x);</span><br><span class="line">            l=Math.min(l,y);</span><br><span class="line">            r=Math.max(r,y);</span><br><span class="line">        &#125;</span><br><span class="line">        bfs(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        u--;</span><br><span class="line">        r++;</span><br><span class="line">        l--;</span><br><span class="line">        d++;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=u;i&lt;=d;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=l;j&lt;=r;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(g[i][j]==<span class="string">&#x27;1&#x27;</span>) out.print(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(g[i][j]==<span class="string">&#x27;2&#x27;</span>) out.print(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">                <span class="keyword">else</span> out.print(<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">            &#125;out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">bfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span>&#123;</span><br><span class="line">        g[x][y]=<span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">        Queue&lt;<span class="type">int</span>[]&gt; q=<span class="keyword">new</span> <span class="title class_">ArrayDeque</span>&lt;&gt;();</span><br><span class="line">        q.offer(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;x,y&#125;);</span><br><span class="line">        <span class="keyword">while</span>(!q.isEmpty())&#123;</span><br><span class="line">            <span class="type">int</span> []t=q.poll();</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;<span class="number">4</span>;k++)&#123;</span><br><span class="line">                <span class="type">int</span> a=t[<span class="number">0</span>]+dx[k];</span><br><span class="line">                <span class="type">int</span> b=t[<span class="number">1</span>]+dy[k];</span><br><span class="line">                <span class="keyword">if</span>(a&lt;<span class="number">0</span>||a&gt;=g.length||b&lt;<span class="number">0</span>||b&gt;=g[<span class="number">0</span>].length) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(g[a][b]==<span class="string">&#x27;*&#x27;</span>||g[a][b]==<span class="string">&#x27;2&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">                q.offer(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;a,b&#125;);</span><br><span class="line">                g[a][b]=<span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">十三届蓝桥杯javaB组7,8代码</summary>
    
    
    
    <category term="ACM" scheme="http://1804040636.github.io/categories/ACM/"/>
    
    <category term="蓝桥杯" scheme="http://1804040636.github.io/categories/ACM/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
    <category term="Java" scheme="http://1804040636.github.io/tags/Java/"/>
    
    <category term="ACM" scheme="http://1804040636.github.io/tags/ACM/"/>
    
    <category term="蓝桥杯" scheme="http://1804040636.github.io/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>备战考研每日记录</title>
    <link href="http://1804040636.github.io/2023/03/20/%E5%A4%87%E6%88%98%E8%80%83%E7%A0%94%E6%AF%8F%E6%97%A5%E8%AE%B0%E5%BD%95/"/>
    <id>http://1804040636.github.io/2023/03/20/%E5%A4%87%E6%88%98%E8%80%83%E7%A0%94%E6%AF%8F%E6%97%A5%E8%AE%B0%E5%BD%95/</id>
    <published>2023-03-20T02:32:39.000Z</published>
    <updated>2023-03-29T11:46:01.062Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码不对哦" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="28cfe23e1d5944ac9231ea7658e16e7eba58a7f97153fa73cd211f8e9eb5d0e1">dbe6953537a3313b13a947627fcfd0ff204e336126d71e1b7e4cd8736b9d5e067f966834b3b1a881597095eb9446c8cb4e4702cb2471e0bb4c97b298e190d6e88c6a72381cad1170ead72dfa31e243ba1fcdfbfad0df2d04285edf2daee0e1324e63eb4df9d18263f2197810f5acdda376770976a69dcfaf434a82781733fdd64015fd90f8e8b3dde83ae3f9b39d713742e9b61112f4d68eda3b2591da53d48b550614888e31f9378272a70335c19dde72c59c75f87569d9e5de10157dabb257745b9904764b419d12545cbe05da8199a98cdabc04568ab447bc2cac210d09fdcf9b82425ab764acd87a08e3569f452d3ff805893915a51b3370dbec2edaa9917c19d5ab4073c1670377699d53799e7a8f099e36c0f21b9ea8ff4476d2d93491ee3b4ef69db488cfb1ac39b438355c113dca6933e7cb9ea916682699b054cbf6aeb5dc6afbc4c5ec0feeb70c19c797499e45eb1a14a337ecf01ff8cb57586680973dba501e56746385fc03e64eb5e120e437a83ba94695bbeb88cc1b0b2511e10a62dad695f578d82c9a6524689232267e1c0d2bea7798b3190697b924d1aaf2f491579b733a195bb78db037be187e4ade41810283d417eb4559d4f65e5a23898d4d0323180317225b7af3da66aaca996d66243ba1611c557eccfb06b7eaa9f39bdafce299f1d4a9ea9d020fe1355aa2ae1d3a257c3481fc51defa5fd558ce6e22b45406b7739ece84dda471ba251262de658c5b4f95213db89a919f706872a7fde3a31e286527833e0335185845a063f60509ef753386f1800a5bad3a2e8eb391cfa297aa840842ca8f77ec9ffc3374b11cfb8567f2ab689e5eb3bb34ef7c5c1ce8eb5f242a4d599ab362bdc7b7eacc41047a20eb171728d339a56693c6c4c815a9bc00395bcbb2d632832774daad588c284145d2a86b9aff8614ed081228668dd145e435c386d3facdd8c2508e59cbdb9b53d8d7c42d92b0c9ef896a3dedf130ff92dff26ef5aad7c75e251a322824d1f097541aeede51fdda05dedd3a48519ac1620be798f33da8d99e182fd99d474ab46fa9faa8ae1956e03ff06704bbdaa5bd03d3af52788280cc13236a1e318b306ba10e4d764c0ed281d2c242c257814317dfabecb756054d7ce338148056a7849536f6b16faa7c3d71a080397d71683b99e7738840914277cbdc9bb134946f03ef4802ba272cb65a34f0c9da82acdb7cc5f03f849119f5c5dc710f6225c30ee46b6b0b73a3a916375ea275151170ef20d77562b0950b895600aa7265cd4f880f2f7a029dcac502f25e55f502e7cbefb12d06c3a72695934192780454fb2e500ebf49b419aa33c5c8cf8e3ab508128b91db05dbee5e36b1a99139478559729cd159f6e4cab93339d4af5b3829eea60e3ffcefecbaa59e729c70f1ad1d8f04ff937deabc9b55f9824519811e9b0a8928545c7530efaaaaf33d73059669857860e0a2240ed0007db6f6f885cf74ee69cbf589b9c5dbe6ba78e95147902a0a0c43d45c6625b58c1c8a6cf7b092b2300c3e3fbca166d851e0939a63ecdc7794978337a646dd51607cc98f1e4a8685fa4f0209140dbb31a065e27374710c98c31cbd6dc096f7f31e442e2d6dd46db491ba0163b60d08e10bd4441cde6925e32bffbe115383600a90674c0628cb7e6d8a5a6effa71b6181ce875ff0717a27db9584beb7a2ca0fefda5befd4a830db381126503c091453ea4a676778b792aa45bcdfa502666f30da83542b87b887d58871aad70c4cc316a469ceedc9fbbf15e78fe9f516131cdd27de98a15705b05c98fb944ef8464050d842df55bfdf0bf9e975f6f13dabc1dfe7760642e46599a42ad906eb0464a1a97c260b5c17c1ce4f0766e4106f19b2fe1d51b5b685a6bb9b5b2e5e31329ec767b10856e184e020e235521563b47b76fef8fc2578277a6d03a027490d7514c9572b3b3f5008d35677d43f11b0498947cca11d78a37c26f038b4bf3c2f938f2ed5dbb43614b9632f1c89275ff6d674ca4ddee005bd83419c45e43e65325fa6a955a17134a199583e49b12c5c21dac5f7a85e5dce95ba7cf10d4f6485abc3e03ebc85a57006917960b34d4b37ac29d6192add333609d60a03230f7461d5828b9b5644dcf295650b634550fbcbbeea59966c0fcc4a3b80c89ac21972d80a0d60a70b09217adc1753af75047f600eb05c29c75dd540fbd269eb5c05adc6e258bb0629ed5a05cc5b866dfa59cc13df4245e41f9bc610cf04832a6356f85de5694cadf8064355b9f5f612c46ff08a13a5e8c3c50886af33c50d818f6e6693fe02b3a581f30b5b1f7b337e42d584c31dc6abc8ef1ff0e74ecdff812a4b1eb66152ba0137e4cce7857ced149625f0440866949d68cb6b642df0a916c8722211583d6daf298e1b2071bb1e291443f40cd2f77bfd4bd9c0f00df5e2e70823d220586ff19175ee12eb2ea1126219c2326dccf6f81fe7158bbcdad7d85d19f799ecf16c4be7458cb0e9c82645fc983141ff72bc45539ed70a512b5f724d6108100b60f1c585bb6879c72f59c4bf3fb40e25c95fcedbc0d105adcd1df1499927e2e579e16a9349ca31f23c76723728aec3c61a88dd78ee320cd8041614f0c7b2260f7e2661d5bef9597a3a4bfa18974ba0f81e8fb577f15a23fd15c3fd3804a9b0c53c84b1bf0c037e53c4b4a9228cdbdd60358ef533b1db59421b3d235ecdfbd576a46b5c18410e1c74b17c8ec6b6cbd835e34a64c76da879651e0d0dfb44029eb15c9cd8066db9fbc1af0d88fb87bbc1f63becddfc22fe90f26cb752e163d9a5a834fef7978581fd2407095fb35f65163a515dfea68dd03a12d599fce262a21e5f20d21ab7eba723bc6d37a78e0439f5089c</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">在这里输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">记录每日做的事情</summary>
    
    
    
    <category term="考研" scheme="http://1804040636.github.io/categories/%E8%80%83%E7%A0%94/"/>
    
    <category term="每日记录" scheme="http://1804040636.github.io/categories/%E8%80%83%E7%A0%94/%E6%AF%8F%E6%97%A5%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="考研" scheme="http://1804040636.github.io/tags/%E8%80%83%E7%A0%94/"/>
    
    <category term="每日记录" scheme="http://1804040636.github.io/tags/%E6%AF%8F%E6%97%A5%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>KMP算法</title>
    <link href="http://1804040636.github.io/2023/03/17/KMP%E7%AE%97%E6%B3%95/"/>
    <id>http://1804040636.github.io/2023/03/17/KMP%E7%AE%97%E6%B3%95/</id>
    <published>2023-03-17T02:04:52.000Z</published>
    <updated>2023-03-18T05:39:18.448Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前缀函数">前缀函数</h2><p><code>前缀</code>:对于一个字符串，从开始到字符某一个位置的子串。<br><code>后缀</code>:对于一个字符串，从字符串某一个位置到结尾的子串。<br><code>真前缀</code>:对于一个字符串，从开始到字符某一个位置的子串，不包括字符串本身。<br><code>真后缀</code>:对于一个字符串，从字符串某一个位置到结尾的子串，不包括字符串本身。<br><strong>前缀函数</strong>:<br>给定一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的字符串 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span>，其 <strong>前缀函数</strong> 被定义为一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi></mrow><annotation encoding="application/x-tex">\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span>。<br>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\pi[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span> 的定义是：</p><ol><li>如果子串 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo stretchy="false">[</mo><mn>0</mn><mo>…</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">s[0\dots i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord">0</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span> 有一对相等的真前缀与真后缀：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo stretchy="false">[</mo><mn>0</mn><mo>…</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">s[0\dots k-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord">0</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>…</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">s[i - (k - 1) \dots i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span>，那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\pi[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span> 就是这个相等的真前缀（或者真后缀，因为它们相等：)）的长度，也就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">\pi[i]=k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>；</li><li>如果不止有一对相等的，那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\pi[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span> 就是其中最长的那一对的长度；</li><li>如果没有相等的，那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\pi[i]=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>。</li></ol><p>简单来说 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\pi[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span> 就是，子串 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo stretchy="false">[</mo><mn>0</mn><mo>…</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">s[0\dots i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord">0</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span> 最长的相等的真前缀与真后缀的长度。</p><p><strong>暴力求法：</strong><br>思路：</p><ol><li>枚举字符串的结束位置。</li><li>内层循环枚举该子串的最长真前缀与真后缀的长度，然后<code>equals()</code>函数暴力匹配，复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">n^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">pre_function1</span><span class="params">(String s)</span>&#123;</span><br><span class="line">    next[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;s.length();i++)&#123;<span class="comment">//枚举字符串结束位置</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> len=i;len&gt;=<span class="number">1</span>;len--)&#123;<span class="comment">//枚举真前缀真后缀长度</span></span><br><span class="line">            <span class="keyword">if</span>(s.substring(<span class="number">0</span>,len).equals(s.substring(i-len+<span class="number">1</span>,i+<span class="number">1</span>)))&#123;</span><br><span class="line">                next[i]=len;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>优化1</strong><br>思路:</p><ol><li>相邻的前缀函数值至多增加 1。</li><li>如果s[i]=s[next[i-1]] (s[next[i-1]]表示前缀已经相同的情况下,第一个还没有比较的字符的位置)</li><li>新的位置的值，要不然+1，要不然不变，要不然减少：ababa=&gt;ababab aadbaa=&gt;aadbaaa adadada=&gt;adadadaa</li><li>所以这里枚举直接从最大长度位置枚举</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">pre_function2</span><span class="params">(String s)</span>&#123;<span class="comment">//</span></span><br><span class="line">    next[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;s.length();i++)&#123;<span class="comment">//枚举字符串结束位置</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> len=next[i-<span class="number">1</span>]+<span class="number">1</span>;len&gt;=<span class="number">1</span>;len--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s.substring(<span class="number">0</span>,len).equals(s.substring(i-len+<span class="number">1</span>,i+<span class="number">1</span>)))&#123;</span><br><span class="line">                next[i]=len;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>优化2</strong><br>思路:</p><ol><li>当我新增加一个字符进入，有3种可能，第一种可能，长度是next[i-1]+1，恰好这个新字符加进来后，与s[next[i-1]]这个位置相同（这个是之前计算前缀时，没有被验证成功的位置）。</li><li>如果二个位置不相同，那么我希望新的最好的匹配位置，找一个依旧是s[i-1]结尾的后缀，但是长度要稍微短一点。</li><li>后缀与前面部分的前缀是相同的，我可以直接去前面前缀的那个位置去找，前面前缀的位置是s[next[i-1]-1]。</li><li>那么我在这个位置，我是不是可以找到以该串结尾，长度最大的前缀，但是一定比我这个小一点。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">pre_function3</span><span class="params">(String s)</span>&#123;</span><br><span class="line">    next[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;s.length();i++)&#123;</span><br><span class="line">        <span class="type">int</span> len=next[i-<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">while</span>(len&gt;<span class="number">0</span>&amp;&amp;s.charAt(i)!=s.charAt(len)) len=next[len-<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(s.charAt(i)==s.charAt(len)) len++;</span><br><span class="line">        next[i]=len;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="KMP">KMP</h2><p>在t串中找出s串出现的位置。<br>时间复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi><mo stretchy="false">(</mo><mi>m</mi><mo>+</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">o(m+n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">o</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，空间复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi><mo stretchy="false">(</mo><mi>m</mi><mo>+</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">o(m+n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">o</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。<br>很简单，有了前缀数组以后，直接构造新字符串s+<code>#</code>+t，对该串s1进行前缀数组构造，然后从s[len(a)]的位置开始遍历到末尾，如果前缀数组的值是len(s)，那么便符合。</p><p>时间复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi><mo stretchy="false">(</mo><mi>m</mi><mo>+</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">o(m+n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">o</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，空间复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">o(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">o</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>。<br>构造第一个字符串的前缀函数，然后从第二个串开始依次比较<br>i是第一个字符串的指针<br>如果第二个串与第一个串在该位置比较相等，那么就i++<br>如果第二个串与第一个串该位置不相等，那么我们就回溯第一个串，找到前缀的位置，表明后面的比较作废，从该位置再进行比较，如果比较完成，我们再回溯<br>这里的回溯是指回溯到该位置所对应next[i]值的位置，因为首尾有相同的部分<br>比如s:abab t:ababab，此时我们第一次比较完成，那么我们s回溯只要回溯到其前缀部分即可，<br>也就是ab这部分，因为该串已经全部比较完成了，紧接着我们比较后半部分就行。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">KMP</span>字符串 &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> zu;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        zu=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(zu--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        String s1=in.next();</span><br><span class="line">        <span class="type">int</span> m=in.nextInt();</span><br><span class="line">        String s2=in.next();</span><br><span class="line"><span class="comment">//        getNext(s1,s2);</span></span><br><span class="line"><span class="comment">//        for(int i=n;i&lt;=n+m;i++)&#123;</span></span><br><span class="line"><span class="comment">//            if(next[i]==n)&#123;</span></span><br><span class="line"><span class="comment">//                out.print(i-2*n+1+&quot; &quot;);</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        getNext2(s1);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">           <span class="keyword">while</span> (i&gt;<span class="number">0</span>&amp;&amp; s1.charAt(i)!=s2.charAt(j)) &#123;</span><br><span class="line">               i=next[i-<span class="number">1</span>];</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span>(s1.charAt(i)==s2.charAt(j)) i++;</span><br><span class="line">           <span class="keyword">if</span>(i==n)&#123;</span><br><span class="line">               out.print(j-n+<span class="number">1</span>+<span class="string">&quot; &quot;</span>);</span><br><span class="line">               i=next[i-<span class="number">1</span>];</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">getNext</span><span class="params">(String s1,String s2)</span>&#123;</span><br><span class="line">        String s3=s1+<span class="string">&quot;#&quot;</span>+s2;</span><br><span class="line">        next[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;s3.length();i++)&#123;</span><br><span class="line">            <span class="type">int</span> len=next[i-<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">while</span>(len&gt;<span class="number">0</span>&amp;&amp;s3.charAt(i)!=s3.charAt(len)) len=next[len-<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(s3.charAt(i)==s3.charAt(len)) len++;</span><br><span class="line">            next[i]=len;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">getNext2</span><span class="params">(String s1)</span>&#123;</span><br><span class="line">        next[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;s1.length();i++)&#123;</span><br><span class="line">            <span class="type">int</span> len=next[i-<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">while</span>(len&gt;<span class="number">0</span>&amp;&amp;s1.charAt(i)!=s1.charAt(len)) len=next[len-<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(s1.charAt(i)==s1.charAt(len)) len++;</span><br><span class="line">            next[i]=len;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> next[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>) (<span class="number">1e6</span>+<span class="number">1e5</span>+<span class="number">10</span>)];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">KMP算法</summary>
    
    
    
    <category term="ACM" scheme="http://1804040636.github.io/categories/ACM/"/>
    
    <category term="字符串" scheme="http://1804040636.github.io/categories/ACM/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
    
    <category term="Java" scheme="http://1804040636.github.io/tags/Java/"/>
    
    <category term="ACM" scheme="http://1804040636.github.io/tags/ACM/"/>
    
    <category term="字符串" scheme="http://1804040636.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>Java快读模板</title>
    <link href="http://1804040636.github.io/2023/03/15/java%E5%BF%AB%E8%AF%BB%E6%A8%A1%E6%9D%BF/"/>
    <id>http://1804040636.github.io/2023/03/15/java%E5%BF%AB%E8%AF%BB%E6%A8%A1%E6%9D%BF/</id>
    <published>2023-03-15T15:47:24.000Z</published>
    <updated>2023-03-16T04:43:12.345Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 快读 &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> zu;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        zu=in.nextInt();</span><br><span class="line">        <span class="keyword">while</span>(zu--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Java快读模板</summary>
    
    
    
    <category term="ACM" scheme="http://1804040636.github.io/categories/ACM/"/>
    
    <category term="Java" scheme="http://1804040636.github.io/categories/ACM/Java/"/>
    
    
    <category term="Java" scheme="http://1804040636.github.io/tags/Java/"/>
    
    <category term="ACM" scheme="http://1804040636.github.io/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>从十进制理解字符串哈希</title>
    <link href="http://1804040636.github.io/2023/03/04/%E4%BB%8E%E5%8D%81%E8%BF%9B%E5%88%B6%E7%90%86%E8%A7%A3%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C/"/>
    <id>http://1804040636.github.io/2023/03/04/%E4%BB%8E%E5%8D%81%E8%BF%9B%E5%88%B6%E7%90%86%E8%A7%A3%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C/</id>
    <published>2023-03-03T19:38:32.000Z</published>
    <updated>2023-03-04T19:04:43.915Z</updated>
    
    <content type="html"><![CDATA[<p>字符串哈希，是将字符串转换成哈希值的一种做法，我更偏向于将其称作字符串转数值进制。</p><p>首先，我们看这样的一道题：</p><p><a href="https://www.acwing.com/problem/content/843/"><strong>字符串哈希</strong></a></p><p>给定一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的字符串，再给定 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 个询问，每个询问包含四个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>r</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>l</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>r</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">l_1, r_1, l_2, r_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，请你判断 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>l</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>r</mi><mn>1</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[l_1, r_1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>l</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>r</mi><mn>2</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[l_2, r_2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span> 这两个区间所包含的字符串子串是否完全相同。</p><p>字符串中只包含大小写英文字母和数字。</p><p><strong>输入格式</strong></p><p>第一行包含整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>，表示字符串长度和询问次数。</p><p>第二行包含一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的字符串，字符串中只包含大小写英文字母和数字。</p><p>接下来 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 行，每行包含四个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>r</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>l</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>r</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">l_1, r_1, l_2, r_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，表示一次询问所涉及的两个区间。<br>注意，字符串的位置从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 开始编号。</p><p><strong>输出格式</strong></p><p>对于每个询问输出一个结果，如果两个字符串子串完全相同则输出 Yes，否则输出 No。<br>每个结果占一行。</p><p><strong>数据范围</strong></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo separator="true">,</mo><mi>m</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 \le n, m \le 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></p><p><strong>输入样例：</strong><br>8 3</p><p>aabbaabb</p><p>1 3 5 7</p><p>1 3 6 8</p><p>1 2 1 2</p><p><strong>输出样例：</strong><br>Yes<br>No<br>Yes</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> N= (<span class="type">int</span>) (<span class="number">1e5</span>+<span class="number">10</span>),P=<span class="number">131</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">long</span> []base=<span class="keyword">new</span> <span class="title class_">long</span>[N],h=<span class="keyword">new</span> <span class="title class_">long</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt(),q=in.nextInt();</span><br><span class="line">        String a=in.next();</span><br><span class="line">        base[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            base[i]=base[i-<span class="number">1</span>]*P;</span><br><span class="line">            h[i]=h[i-<span class="number">1</span>]*P+a.charAt(i-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">            <span class="type">int</span> l1,r1,l2,r2;</span><br><span class="line">            l1=in.nextInt();r1=in.nextInt();l2=in.nextInt();r2=in.nextInt();</span><br><span class="line">            <span class="keyword">if</span>(getHash(l1,r1)==getHash(l2,r2))&#123;</span><br><span class="line">                out.println(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                out.println(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">long</span> <span class="title function_">getHash</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> h[r]-h[l-<span class="number">1</span>]*base[r-l+<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实这便是把字符串转换成了数值形式，不过这个数值是P进制。现在我们来用十进制模拟一下字符串哈希。<br>首先我们假设有一个十进制数<code>123421</code>，我们从左到右定义6个位置的哈希值分别是<code>1</code>、<code>12</code>、<code>123</code>、<code>1234</code>、<code>12342</code>、<code>123421</code>。<br>现在我们想求<code>34</code>的哈希值，过程如下：</p><ol><li>用<code>1234</code>减去<code>12</code>,那么得到<code>1222</code>。</li><li>在上一步我们发现求出不对，所以我们要对<code>12</code>补<code>0</code>。</li><li>补的<code>0</code>的位数便是要求的<code>34</code>的长度，于是便是<code>1234</code>-<code>1200</code>=<code>34</code>。<br>体现在代码里便是</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="type">long</span> <span class="title function_">getHash</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> h[r]-h[l-<span class="number">1</span>]*base[r-l+<span class="number">1</span>];<span class="comment">//补P进制下的r-l+1位</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://codeforces.com/contest/1800/problem/D">Remove Two Letters</a></p><p>给定一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的字符串，可以删除<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>个连续字符，问有多少个不同的字符串</p><p>字符串中只包含小写英文字母。</p><p><strong>输入格式</strong></p><p>第一行包含整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span> ，表示案例数量。</p><p>第二行包含整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> ，表示字符串长度。</p><p>第三行包含一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的字符串，字符串中只包含小写英文字母。</p><p><strong>输出格式</strong></p><p>一个整数，表示删去<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>个连续字符后，不同的字符串的数量。<br>每个结果占一行。</p><p><strong>数据范围</strong></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>2</mn><mo separator="true">⋅</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">3 \le n \le 2·10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">2</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span><br>对于所有的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>之和 ，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>≤</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>≤</mo><mn>2</mn><mo separator="true">⋅</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">3 \le sum(n) \le 2·10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">2</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span><br><strong>输入样例：</strong><br>7<br>6<br>aaabcc<br>10<br>aaaaaaaaaa<br>6<br>abcdef<br>7<br>abacaba<br>6<br>cccfff<br>4<br>abba<br>5<br>ababa</p><p><strong>输出样例：</strong><br>4<br>1<br>5<br>3<br>3<br>3<br>1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> N= (<span class="type">int</span>) (<span class="number">2e5</span>+<span class="number">10</span>),P=<span class="number">13331</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">long</span>[]h=<span class="keyword">new</span> <span class="title class_">long</span>[N],p=<span class="keyword">new</span> <span class="title class_">long</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        String s=in.next();</span><br><span class="line">        p[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            p[i]=((p[i-<span class="number">1</span>]*P));</span><br><span class="line">            h[i]=((h[i-<span class="number">1</span>]*P+s.charAt(i-<span class="number">1</span>)-<span class="string">&#x27;a&#x27;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        Set&lt;Long&gt; set=<span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="type">long</span> k=get(<span class="number">1</span>,i-<span class="number">2</span>)*p[n-i]+get(i+<span class="number">1</span>,n);</span><br><span class="line">            set.add(k);</span><br><span class="line">        &#125;</span><br><span class="line">        out.println(set.size());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">long</span> <span class="title function_">get</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(l&gt;r)  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> (h[r]-h[l-<span class="number">1</span>]*p[r-l+<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>现在，我们想求删除连续若干个字符得到的哈希值，假设我们要求<code>1221</code>，从<code>123421</code>中挖去<code>34</code>。</p><ol><li>我们利用上述的方法得到<code>12</code>，<code>21</code>。</li><li>我们将<code>12</code>，也就是被挖去字符的上一个位置（设其为<code>pos</code>）补<code>0</code>。</li><li>补<code>0</code>的数量是<code>pos</code>位置后不为空的字符数。这里是<code>2</code></li><li><code>12</code>补<code>2</code>个<code>0</code>，为<code>1200</code>，<code>1200</code>+<code>21</code>=<code>1211</code></li></ol><p>体现在代码中便是:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">long</span> k=get(<span class="number">1</span>,i-<span class="number">2</span>)*p[n-i]+get(i+<span class="number">1</span>,n);<span class="comment">//n-i为后缀字符数量</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">字符串哈希</summary>
    
    
    
    <category term="ACM" scheme="http://1804040636.github.io/categories/ACM/"/>
    
    <category term="字符串" scheme="http://1804040636.github.io/categories/ACM/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
    
    <category term="Java" scheme="http://1804040636.github.io/tags/Java/"/>
    
    <category term="ACM" scheme="http://1804040636.github.io/tags/ACM/"/>
    
    <category term="字符串" scheme="http://1804040636.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>数据结构作业</title>
    <link href="http://1804040636.github.io/2023/02/24/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%9C%E4%B8%9A/"/>
    <id>http://1804040636.github.io/2023/02/24/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%9C%E4%B8%9A/</id>
    <published>2023-02-24T02:35:12.000Z</published>
    <updated>2023-03-04T19:15:21.426Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第二章">第二章</h3><h4 id="用线性表创建集合，求交集">用线性表创建集合，求交集</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class 顺序表实现集合交集 &#123;</span><br><span class="line">    <span class="comment">//假定有二个长度为100的顺序表实现集合，求交集</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">100</span>],b[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">100</span>],c[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> size[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];<span class="comment">//存放每个线性表的长度</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">(<span class="type">int</span> arr[],<span class="type">int</span> x,<span class="type">int</span> type)</span>&#123;</span><br><span class="line">        <span class="type">int</span> len=size[type];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(x==arr[i]) <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        arr[len]=x;</span><br><span class="line">        size[type]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span> arr[],<span class="type">int</span> type)</span>&#123;</span><br><span class="line">        <span class="type">int</span> len=size[type];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">            System.out.print(arr[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">intersection</span><span class="params">(<span class="type">int</span> arr1[],<span class="type">int</span> arr2[],<span class="type">int</span> arr3[],<span class="type">int</span> type1,<span class="type">int</span> type2,<span class="type">int</span> type3)</span>&#123;</span><br><span class="line">        <span class="type">int</span> lenA=size[type1];</span><br><span class="line">        <span class="type">int</span> lenB=size[type2];</span><br><span class="line">        <span class="type">int</span> lenC=size[type3];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;lenA;i++)&#123;</span><br><span class="line">            <span class="type">int</span> x=arr1[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;lenB;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(x==arr2[j])&#123;</span><br><span class="line">                    arr3[lenC++]=x;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        size[type3]=lenC;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> testA[]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        <span class="type">int</span> testB[]=&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">6</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;testA.length;i++)&#123;</span><br><span class="line">            insert(a,testA[i],<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;集合A的内容为：&quot;</span>);</span><br><span class="line">        print(a,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;testB.length;i++)&#123;</span><br><span class="line">            insert(b,testB[i],<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;集合B的内容为：&quot;</span>);</span><br><span class="line">        print(b,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        intersection(a,b,c,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;AB交集为&quot;</span>);</span><br><span class="line">        print(c,<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">做的数据结构作业</summary>
    
    
    
    <category term="大学作业" scheme="http://1804040636.github.io/categories/%E5%A4%A7%E5%AD%A6%E4%BD%9C%E4%B8%9A/"/>
    
    
    <category term="Java" scheme="http://1804040636.github.io/tags/Java/"/>
    
    <category term="数据结构" scheme="http://1804040636.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="大学作业" scheme="http://1804040636.github.io/tags/%E5%A4%A7%E5%AD%A6%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>听到的小技巧</title>
    <link href="http://1804040636.github.io/2023/02/23/%E5%90%AC%E5%88%B0%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>http://1804040636.github.io/2023/02/23/%E5%90%AC%E5%88%B0%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/</id>
    <published>2023-02-23T15:57:31.000Z</published>
    <updated>2023-02-23T17:48:54.445Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章是记录看到的奇怪的问题的解决方式</p><details class="toggle" style="border: 1px solid #FF7242"><summary class="toggle-button" style="background-color: #FF7242;color: #FFF">如何识别模拟器+图像识别的游戏脚本</summary><div class="toggle-content"><p>屏幕输入特征+离线机器学习</p></div></details><details class="toggle" style="border: 1px solid #32CD99"><summary class="toggle-button" style="background-color: #32CD99;color: #FFF">使用sql查询数据是否存在的方法</summary><div class="toggle-content"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> tables <span class="keyword">where</span> a<span class="operator">=</span><span class="string">&#x27;a&#x27;</span> <span class="keyword">and</span> b<span class="operator">=</span><span class="string">&#x27;b&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>;</span><br></pre></td></tr></table></figure></div></details>]]></content>
    
    
    <summary type="html">看到的针对一些奇特问题的解决技巧</summary>
    
    
    
    <category term="奇特技巧" scheme="http://1804040636.github.io/categories/%E5%A5%87%E7%89%B9%E6%8A%80%E5%B7%A7/"/>
    
    
    <category term="奇特技巧" scheme="http://1804040636.github.io/tags/%E5%A5%87%E7%89%B9%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>蓝桥杯每日一题(更新中)</title>
    <link href="http://1804040636.github.io/2023/02/15/%E8%93%9D%E6%A1%A5%E6%9D%AF%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    <id>http://1804040636.github.io/2023/02/15/%E8%93%9D%E6%A1%A5%E6%9D%AF%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/</id>
    <published>2023-02-15T15:47:24.000Z</published>
    <updated>2023-06-08T01:38:42.919Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前缀和">前缀和</h2><h3 id="截断数组"><a href="https://www.acwing.com/problem/content/3959/">截断数组</a></h3><p>给定一个长度为n的数组。</p><p>现在，要将该数组从中间截断，得到三个非空子数组</p><p>要求，三个子数组内各元素之和都相等。</p><p>请问，共有多少种不同的截断方法？</p><p>思路：</p><ol><li>三个子数组和相等，说明数组的所有数的和一定是3的倍数</li><li>找到数组中的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mn>3</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>2</mn><mn>3</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{2}{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li></ol><p>做法：首先求数组的前缀和，然后统计出每一个位置及其前面有多少个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mn>3</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>的倍数，也就是第一段。然后从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(n-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>枚举第二段<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>2</mn><mn>3</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{2}{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，对于每个第二段，都可以和前面的所有的第一段构成截断</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 截断数组 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> b[]=<span class="keyword">new</span> <span class="title class_">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> c[]=<span class="keyword">new</span> <span class="title class_">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            a[i]=in.nextInt();</span><br><span class="line">            b[i]=a[i]+b[i-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(b[n]%<span class="number">3</span>!=<span class="number">0</span>||n&lt;<span class="number">3</span>)&#123;</span><br><span class="line">            out.println(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i]==b[n]/<span class="number">3</span>)&#123;</span><br><span class="line">                c[i]++;</span><br><span class="line">            &#125;</span><br><span class="line">            c[i]=c[i-<span class="number">1</span>]+c[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n-<span class="number">1</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i]==b[n]/<span class="number">3</span>*<span class="number">2</span>)&#123;</span><br><span class="line">                cnt=cnt+c[i-<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        out.println(cnt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二维前缀和"><a href="https://www.acwing.com/problem/content/798/">二维前缀和</a></h3><p>输入一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 列的整数矩阵，再输入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span> 个询问，每个询问包含四个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">x_1, y_1, x_2, y_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，表示一个子矩阵的左上角坐标和右下角坐标。</p><p>对于每个询问输出子矩阵中所有数的和。</p><p>思路：</p><p>这题我们有一个动态规划的思想，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>表示为该位置左上角的前缀和，可以通过递推式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mi>a</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>+</mo><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>+</mo><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo>−</mo><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[i][j]=a[i][j]+f[i-1][j]+f[i][j-1]-f[i-1][j-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>求出</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 子矩阵的和 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> a[][]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1050</span>][<span class="number">1050</span>];</span><br><span class="line">        <span class="type">int</span> b[][]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1050</span>][<span class="number">1050</span>];</span><br><span class="line">        <span class="type">int</span> n=in.nextInt(),m=in.nextInt(),q=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                a[i][j]=in.nextInt();</span><br><span class="line">                b[i][j]=a[i][j]+b[i-<span class="number">1</span>][j]+b[i][j-<span class="number">1</span>]-b[i-<span class="number">1</span>][j-<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">            <span class="type">int</span> x1=in.nextInt(),y1=in.nextInt(),x2=in.nextInt(),y2=in.nextInt();</span><br><span class="line">            <span class="type">int</span> res=b[x2][y2]-b[x2][y1-<span class="number">1</span>]-b[x1-<span class="number">1</span>][y2]+b[x1-<span class="number">1</span>][y1-<span class="number">1</span>];</span><br><span class="line">            out.println(res);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="k倍区间"><a href="https://www.acwing.com/problem/content/1232/">k倍区间</a></h3><p>给定一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 的数列，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">A_1, A_2, ... A_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，如果其中一段连续的子序列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>A</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">A_i, A_{i+1},... A_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 之和是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 的倍数，我们就称这个区间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[i, j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 倍区间。</p><p>你能求出数列中总共有多少个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 倍区间吗？</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>N</mi><mo separator="true">,</mo><mi>K</mi><mo>≤</mo><mn>100000</mn></mrow><annotation encoding="application/x-tex">1 \le N, K \le 100000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">100000</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><msub><mi>A</mi><mi>i</mi></msub><mo>≤</mo><mn>100000</mn></mrow><annotation encoding="application/x-tex">1 \le A_i \le 100000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">100000</span></span></span></span></p><p>思路：</p><ol><li>快速求出某一段子序列的和可以使用前缀和相减</li><li>(a-b)%k==0 推出 a%k-b%k == 0</li><li>求出相同的模k数量，然后用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi>n</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{n*(n-1)}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">∗</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>算出来这部分能构成多少</li><li>最后注意原本是k的倍数的前缀和，不需要和别的前缀和进行匹配</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">k</span>倍区间 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>) (<span class="number">1e5</span>+<span class="number">10</span>)];</span><br><span class="line">        <span class="type">long</span> b[]=<span class="keyword">new</span> <span class="title class_">long</span>[(<span class="type">int</span>)(<span class="number">1e5</span>+<span class="number">10</span>)];</span><br><span class="line">        <span class="type">int</span> vis[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>)(<span class="number">1e5</span>+<span class="number">10</span>)];</span><br><span class="line">        <span class="type">int</span> n=in.nextInt(),k=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">            a[i]=in.nextInt();</span><br><span class="line">            b[i]=b[i-<span class="number">1</span>]+a[i];</span><br><span class="line">            vis[(<span class="type">int</span>) (b[i]%k)]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> sum=vis[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            sum=sum+<span class="number">1L</span>*vis[i]*(vis[i]-<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        out.println(sum);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="激光炸弹"><a href="https://www.acwing.com/problem/content/101/">激光炸弹</a></h3><p>地图上有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个目标，用整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">X_{i}, Y_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示目标在地图上的位置，每个目标都有一个价值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">W_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，不同目标可能在同一位置。<br>现在有一种新型的激光炸弹，可以摧毁一个包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>×</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">R \times R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span> 个位置的正方形内的所有目标。</p><p>激光炸弹的投放是通过卫星定位的，但其有一个缺点，就是其爆炸范围，即那个正方形的边必须和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mtext>，</mtext><mi>y</mi></mrow><annotation encoding="application/x-tex">x，y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 轴平行。</p><p>求一颗炸弹最多能炸掉地图上总价值为多少的目标。</p><p>前缀和的应用题：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 激光炸弹 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> a[][]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5050</span>][<span class="number">5050</span>];</span><br><span class="line">        <span class="type">int</span> n=in.nextInt(),r=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="type">int</span> x=in.nextInt()+<span class="number">1</span>,y=in.nextInt()+<span class="number">1</span>,w=in.nextInt();</span><br><span class="line">            a[x][y]+=w;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">5001</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">5001</span>;j++)&#123;</span><br><span class="line">                a[i][j]=a[i][j]+a[i-<span class="number">1</span>][j]+a[i][j-<span class="number">1</span>]-a[i-<span class="number">1</span>][j-<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(r&gt;=<span class="number">5001</span>)&#123;</span><br><span class="line">            out.println(a[<span class="number">5001</span>][<span class="number">5001</span>]);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i+r-<span class="number">1</span>&lt;=<span class="number">5001</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j+r-<span class="number">1</span>&lt;=<span class="number">5001</span>;j++)&#123;</span><br><span class="line">                <span class="type">int</span> x1=i,y1=j,x2=i+r-<span class="number">1</span>,y2=j+r-<span class="number">1</span>;</span><br><span class="line">                sum=Math.max(sum,a[x2][y2]-a[x2][y1-<span class="number">1</span>]-a[x1-<span class="number">1</span>][y2]+a[x1-<span class="number">1</span>][y1-<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="差分">差分</h2><h3 id="改变数组元素"><a href="https://codeforces.com/contest/1501/problem/B">改变数组元素</a></h3><p>给定一个空数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 和一个整数数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_1,a_2,...a_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<br>现在要对数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 进行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 次操作。<br>第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 次操作的具体流程如下：</p><ol><li>从数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 尾部插入整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>。</li><li>将位于数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 末尾的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 个元素都变为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>（已经是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 的不予理会）。</li></ol><p>注意：</p><ol><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 可能为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，即不做任何改变。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 可能大于目前数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 所包含的元素个数，此时视为将数组内所有元素变为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。</li></ol><p>请你输出所有操作完成后的数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span>。</p><p>第一行包含整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>，表示共有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 组测试数据。<br>每组数据第一行包含整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>。<br>第二行包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_1,a_2,...,a_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>每组数据输出一行结果，表示所有操作完成后的数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span>，数组内元素之间用空格隔开。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>T</mi><mo>≤</mo><mn>20000</mn></mrow><annotation encoding="application/x-tex">1 \le T \le 20000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">20000</span></span></span></span>,<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>2</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 \le n \le 2 \times 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>,<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><msub><mi>a</mi><mi>i</mi></msub><mo>≤</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">0 \le a_i \le n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.786em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>,<br>保证一个测试点内所有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的和不超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">2 \times 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>。</p><p>合并区间写法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 改变数组元素 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> List&lt;<span class="type">int</span>[]&gt; points1=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(),points2=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> ans[];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        points1=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        points2=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        ans=<span class="keyword">new</span> <span class="title class_">int</span>[n+<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="type">int</span> x=in.nextInt();</span><br><span class="line">            <span class="keyword">if</span>(x!=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="type">int</span> r=i;</span><br><span class="line">                <span class="type">int</span> l=i-x+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(l&lt;<span class="number">1</span>) l=<span class="number">1</span>;</span><br><span class="line">                points1.add(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;l,r&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Collections.sort(points1,(x,y)-&gt;x[<span class="number">1</span>]-y[<span class="number">1</span>]);</span><br><span class="line">        <span class="type">int</span> templ=<span class="number">0</span>,tempr=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;points1.size();i++)&#123;</span><br><span class="line">            <span class="type">int</span> l=points1.get(i)[<span class="number">0</span>];</span><br><span class="line">            <span class="type">int</span> r=points1.get(i)[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(templ==<span class="number">0</span>&amp;&amp;tempr==<span class="number">0</span>)&#123;</span><br><span class="line">                templ=l;tempr=r;</span><br><span class="line">                <span class="keyword">if</span>(i==points1.size()-<span class="number">1</span>)&#123;</span><br><span class="line">                    points2.add(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;templ,tempr&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(tempr&gt;=l)&#123;</span><br><span class="line">               <span class="keyword">if</span>(templ&gt;=l) templ=l;</span><br><span class="line">               <span class="keyword">if</span>(tempr&lt;=r) tempr=r;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                points2.add(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;templ,tempr&#125;);</span><br><span class="line">                templ=l;</span><br><span class="line">                tempr=r;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(i==points1.size()-<span class="number">1</span>)&#123;</span><br><span class="line">                points2.add(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;templ,tempr&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;points2.size();i++)&#123;</span><br><span class="line">            <span class="type">int</span> l=points2.get(i)[<span class="number">0</span>],r=points2.get(i)[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=l;j&lt;=r;j++)&#123;</span><br><span class="line">                ans[j]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            out.print(ans[j]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从后往前推写法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 改变数组元素 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> a[],b[];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        a=<span class="keyword">new</span> <span class="title class_">int</span>[n+<span class="number">10</span>];</span><br><span class="line">        b=<span class="keyword">new</span> <span class="title class_">int</span>[n+<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) a[i]=in.nextInt();</span><br><span class="line">        <span class="type">int</span> k=-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(k==-<span class="number">1</span>)&#123;</span><br><span class="line">                k=a[i];</span><br><span class="line">            &#125;</span><br><span class="line">            k=Math.max(k-<span class="number">1</span>,a[i]-<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(k&gt;=<span class="number">0</span>) b[i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) out.print(b[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="差分-2"><a href="https://www.acwing.com/problem/content/799/">差分</a></h3><p>输入一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的整数序列。<br>接下来输入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 个操作，每个操作包含三个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mo separator="true">,</mo><mi>r</mi><mo separator="true">,</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">l, r, c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">c</span></span></span></span>，表示将序列中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>l</mi><mo separator="true">,</mo><mi>r</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[l, r]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">]</span></span></span></span> 之间的每个数加上 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span>。<br>请你输出进行完所有操作后的序列。<br><strong>输入格式</strong><br>第一行包含两个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>。<br>第二行包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个整数，表示整数序列。<br>接下来 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 行，每行包含三个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mtext>，</mtext><mi>r</mi><mtext>，</mtext><mi>c</mi></mrow><annotation encoding="application/x-tex">l，r，c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">c</span></span></span></span>，表示一个操作。<br><strong>输出格式</strong><br>共一行，包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个整数，表示最终序列。<br>数据范围<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo separator="true">,</mo><mi>m</mi><mo>≤</mo><mn>100000</mn></mrow><annotation encoding="application/x-tex">1 \le n,m \le 100000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">100000</span></span></span></span>,<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>l</mi><mo>≤</mo><mi>r</mi><mo>≤</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">1 \le l \le r \le n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>,<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1000</mn><mo>≤</mo><mi>c</mi><mo>≤</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">-1000 \le c \le 1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">−</span><span class="mord">1000</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1000</span></span></span></span>,<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1000</mn><mo>≤</mo><mtext>整数序列中元素的值</mtext><mo>≤</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">-1000 \le 整数序列中元素的值 \le 1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">−</span><span class="mord">1000</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord cjk_fallback">整数序列中元素的值</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1000</span></span></span></span></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 差分 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        int n=in.nextInt();</span></span><br><span class="line">        <span class="type">int</span> n=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt(),m=in.nextInt();</span><br><span class="line">        <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[n+<span class="number">10</span>];</span><br><span class="line">        <span class="type">int</span> b[]=<span class="keyword">new</span> <span class="title class_">int</span>[n+<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            a[i]=in.nextInt();</span><br><span class="line">            b[i]=a[i]-a[i-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(m--&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">int</span> l=in.nextInt(),r=in.nextInt(),c=in.nextInt();</span><br><span class="line">            b[l]+=c;</span><br><span class="line">            b[r+<span class="number">1</span>]-=c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) b[i]+=b[i-<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) out.print(b[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对差分数组求前缀和是原数组</p><p>因为差分数组的每一项是当前项与前一项的差值，第一项是原值，那么就可以通过前一项的原值+差值=我现在这一项</p><p>差分和前缀和是逆运算</p><h3 id="二维差分"><a href="https://www.acwing.com/problem/content/800/">二维差分</a></h3><p>差分，和前缀和是一对逆运算定义</p><p>我们可以把原数组当成前缀和数组，这样就可以求出差分数组</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>−</mo><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>−</mo><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">a[i][j]=f[i][j]-f[i-1][j]-f[i][j-1]+f[i-1][j-1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span></p><p>差分矩阵的每次操作都是对右下角所有的位置做一次操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 二维差分 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        int n=in.nextInt();</span></span><br><span class="line">        <span class="type">int</span> n=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt(),m=in.nextInt(),q=in.nextInt();</span><br><span class="line">        <span class="type">int</span> a[][]=<span class="keyword">new</span> <span class="title class_">int</span>[n+<span class="number">10</span>][m+<span class="number">10</span>];</span><br><span class="line">        <span class="type">int</span> b[][]=<span class="keyword">new</span> <span class="title class_">int</span>[n+<span class="number">10</span>][m+<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                a[i][j]=in.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//a[i][j]=b[i][j]-a[i-1][j-1]+a[i-1][j]+a[i][j-1];</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                b[i][j]=a[i][j]+a[i-<span class="number">1</span>][j-<span class="number">1</span>]-a[i-<span class="number">1</span>][j]-a[i][j-<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">            <span class="type">int</span> x1= in.nextInt(),y1=in.nextInt(),x2=in.nextInt(),y2=in.nextInt();</span><br><span class="line">            <span class="type">int</span> c=in.nextInt();</span><br><span class="line">            b[x1][y1]+=c;</span><br><span class="line">            b[x2+<span class="number">1</span>][y1]-=c;</span><br><span class="line">            b[x1][y2+<span class="number">1</span>]-=c;</span><br><span class="line">            b[x2+<span class="number">1</span>][y2+<span class="number">1</span>]+=c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                a[i][j]=a[i-<span class="number">1</span>][j]+a[i][j-<span class="number">1</span>]-a[i-<span class="number">1</span>][j-<span class="number">1</span>]+b[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                out.print(a[i][j]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="增减序列"><a href="https://www.acwing.com/problem/content/102/">增减序列</a></h3><p>​给定一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的数列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">{a_1,a_2,…,a_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>，每次可以选择一个区间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>l</mi><mo separator="true">,</mo><mi>r</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[l,r]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">]</span></span></span></span>，使下标在这个区间内的数都加一或者都减一。<br>​求至少需要多少次操作才能使数列中的所有数都一样，并求出在保证最少次数的前提下，最终得到的数列可能有多少种。<br><strong>输入格式</strong><br>第一行输入正整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>。<br>接下来 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 行，每行输入一个整数，第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 行的整数代表 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<br><strong>输出格式</strong><br>第一行输出最少操作次数。<br>第二行输出最终能得到多少种结果。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>&lt;</mo><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">0 &lt; n \le 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>,<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><msub><mi>a</mi><mi>i</mi></msub><mo>&lt;</mo><mn>2147483648</mn></mrow><annotation encoding="application/x-tex">0 \le a_i &lt;2147483648</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2147483648</span></span></span></span></p><p>思路：</p><ol><li>选择连续区间的数增加或减少可以使用差分数组</li><li>差分数组，除了第一位以外，剩下每一位是0，数组元素便全部相等</li><li>我们可以对差分数组进行以下操作<ol><li>对一个数+1</li><li>对一个数-1</li><li>让前面一个数+1，后面一个数-1</li><li>让前面一个数-1，后面一个数+1</li></ol></li><li>最少操作是除了首位正负最大值，不同值是数量是abs(大)-abs(小)</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 增减序列 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        int n=in.nextInt();</span></span><br><span class="line">        <span class="type">int</span> n=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[n+<span class="number">1</span>],b[]=<span class="keyword">new</span> <span class="title class_">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            a[i]=in.nextInt();</span><br><span class="line">            b[i]=a[i]-a[i-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> f=<span class="number">0</span>,z=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i]&lt;=<span class="number">0</span>) f-=b[i];</span><br><span class="line">            <span class="keyword">else</span> z+=b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> ans1=Math.max(f,z);</span><br><span class="line">        <span class="type">long</span> ans2=ans1-Math.min(f,z)+<span class="number">1</span>;</span><br><span class="line">        out.println(ans1);</span><br><span class="line">        out.println(ans2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二分">二分</h2><h3 id="二分四模板">二分四模板</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 二分四模板 &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getL</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (x &lt;= a[mid]) &#123;</span><br><span class="line">                r = mid;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                l = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a[l] != x) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> l;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getR</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (x &lt; a[mid]) &#123;</span><br><span class="line">                r = mid - <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                l = mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a[l] != x) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> l;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">lower_bound</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (x &gt; a[r]) <span class="keyword">return</span> r + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (x &lt;= a[mid]) &#123;</span><br><span class="line">                r = mid;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                l = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">upper_bound</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (x &gt;= a[r]) <span class="keyword">return</span> r + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (x &lt; a[mid]) &#123;</span><br><span class="line">                r = mid;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                l = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><code>getL()</code> 是有序序列中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">=x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 的最左边的数的位置，若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 不存在则输出-1。</li><li><code>getR() </code>是有序序列中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">=x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 的最右边的数的位置，若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 不存在则输出-1。</li><li><code>lower_bound()</code> 是有序序列中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≥</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\ge x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 的第一个数的位置，如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">x&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span> 序列最后一个数，则返回 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>。</li><li><code>upper_bound()</code> 是有序序列中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&gt;</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">&gt;x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 的第一个数的位置，如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>≥</mo></mrow><annotation encoding="application/x-tex">x\ge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span></span></span></span> 序列最后一个数，则返回 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>。</li></ol><h3 id="我在哪"><a href="https://www.acwing.com/problem/content/1462/">我在哪</a></h3><p>农夫约翰出门沿着马路散步，但是他现在发现自己可能迷路了！<br>沿路有一排共 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个农场。<br>不幸的是农场并没有编号，这使得约翰难以分辨他在这条路上所处的位置。<br>然而，每个农场都沿路设有一个彩色的邮箱，所以约翰希望能够通过查看最近的几个邮箱的颜色来唯一确定他所在的位置。<br>每个邮箱的颜色用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">A..Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord">..</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 之间的一个字母来指定，所以沿着道路的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个邮箱的序列可以用一个长为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 的由字母 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">A..Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord">..</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 组成的字符串来表示。<br>某些邮箱可能会有相同的颜色。<br>约翰想要知道最小的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 的值，使得他查看任意连续 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 个邮箱序列，他都可以唯一确定这一序列在道路上的位置。<br>例如，假设沿路的邮箱序列为 ABCDABC 。<br>约翰不能令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">K=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span>，因为如果他看到了 ABC，则沿路有两个这一连续颜色序列可能所在的位置。<br>最小可行的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 的值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">K=4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">4</span></span></span></span>，因为如果他查看任意连续 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn></mrow><annotation encoding="application/x-tex">4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">4</span></span></span></span> 个邮箱，那么可得到的连续颜色序列可以唯一确定他在道路上的位置。<br><strong>输入格式</strong><br>输入的第一行包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>，第二行包含一个由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个字符组成的字符串，每个字符均在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">A..Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord">..</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 之内。<br><strong>输出格式</strong><br>输出一行，包含一个整数，为可以解决农夫约翰的问题的最小 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 值。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>100</mn></mrow><annotation encoding="application/x-tex">1 \le N \le 100</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">100</span></span></span></span><br><strong>输入样例：</strong><br>7<br>ABCDABC<br><strong>输出样例：</strong><br>4</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 我在哪 &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">check</span><span class="params">(<span class="type">int</span> k,String s)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i+k&lt;=s.length();i++)&#123;</span><br><span class="line">            String p=s.substring(i,i+k);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j+k&lt;=s.length();j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(p.equals(s.substring(j,j+k)))&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        String line=in.next();</span><br><span class="line">        <span class="type">int</span> l=<span class="number">1</span>,r=n;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">            <span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(check(mid,line))&#123;</span><br><span class="line">                r=mid;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                l=mid+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        out.println(l);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="四平方和"><a href="https://www.acwing.com/problem/content/1223/">四平方和</a></h3><p>四平方和定理，又称为拉格朗日定理：<br>每个正整数都可以表示为至多 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn></mrow><annotation encoding="application/x-tex">4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">4</span></span></span></span> 个正整数的平方和。<br>如果把 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 包括进去，就正好可以表示为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn></mrow><annotation encoding="application/x-tex">4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">4</span></span></span></span> 个数的平方和。<br>比如：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>5</mn><mo>=</mo><msup><mn>0</mn><mn>2</mn></msup><mo>+</mo><msup><mn>0</mn><mn>2</mn></msup><mo>+</mo><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">5 = 0^2 + 0^2 + 1^2 + 2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>7</mn><mo>=</mo><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">7 = 1^2 + 1^2 + 1^2 + 2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><br>对于一个给定的正整数，可能存在多种平方和的表示法。<br>要求你对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn></mrow><annotation encoding="application/x-tex">4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">4</span></span></span></span> 个数排序：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>a</mi><mo>≤</mo><mi>b</mi><mo>≤</mo><mi>c</mi><mo>≤</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">0 \le a \le b \le c \le d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span><br>并对所有的可能表示法按 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo separator="true">,</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">a,b,c,d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">d</span></span></span></span> 为联合主键升序排列，最后输出第一个表示法。<br><strong>输入格式</strong><br>输入一个正整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>。<br><strong>输出格式</strong><br>输出4个非负整数，按从小到大排序，中间用空格分开。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>&lt;</mo><mi>N</mi><mo>&lt;</mo><mn>5</mn><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup></mrow><annotation encoding="application/x-tex">0 &lt; N &lt; 5 * 10^6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span><br><strong>输入样例</strong>：<br>5</p><p><strong>输出样例</strong>：<br>0 0 1 2</p><p>思路：</p><ol><li>枚举<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>i</mi><mn>2</mn></msup><mo>+</mo><msup><mi>j</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">i^2+j^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>的和存入表中。</li><li>再次枚举<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>i</mi><mn>2</mn></msup><mo>+</mo><msup><mi>j</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">i^2+j^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，然后利用二分或者Map查找表中最小符合该条件的值。</li></ol><p><strong>二分写法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 四平方和 &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        List&lt;<span class="type">int</span>[]&gt; list=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i*i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i;i*i+j*j&lt;=n;j++)&#123;</span><br><span class="line">                list.add(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;i,j,i*i+j*j&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Collections.sort(list,(x,y)-&gt;&#123;</span><br><span class="line">            <span class="keyword">if</span>(x[<span class="number">2</span>]!=y[<span class="number">2</span>])&#123;</span><br><span class="line">                <span class="keyword">return</span> Integer.compare(x[<span class="number">2</span>],y[<span class="number">2</span>]);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(x[<span class="number">0</span>]!=y[<span class="number">0</span>])&#123;</span><br><span class="line">                <span class="keyword">return</span> Integer.compare(x[<span class="number">0</span>],y[<span class="number">0</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> Integer.compare(x[<span class="number">1</span>],y[<span class="number">1</span>]);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="type">int</span> ans[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i*i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i;i*i+j*j&lt;=n;j++)&#123;</span><br><span class="line">                <span class="type">int</span> x=n-i*i-j*j;</span><br><span class="line">                <span class="type">int</span> l=<span class="number">0</span>,r=list.size()-<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span> (l&lt;r)&#123;</span><br><span class="line">                    <span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">if</span>(x&lt;=list.get(mid)[<span class="number">2</span>]) r=mid;</span><br><span class="line">                    <span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(list.get(l)[<span class="number">2</span>]==x)&#123;</span><br><span class="line">                    ans[<span class="number">0</span>]=i;</span><br><span class="line">                    ans[<span class="number">1</span>]=j;</span><br><span class="line">                    ans[<span class="number">2</span>]=list.get(l)[<span class="number">0</span>];</span><br><span class="line">                    ans[<span class="number">3</span>]=list.get(l)[<span class="number">1</span>];</span><br><span class="line">                    Arrays.sort(ans);</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> v:ans) out.print(v+<span class="string">&quot; &quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>hash写法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 四平方和哈希写法 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> h[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>) (<span class="number">5e6</span>+<span class="number">10</span>)];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        Arrays.fill(h,-<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i*i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i;i*i+j*j&lt;=n;j++)&#123;</span><br><span class="line">                <span class="type">int</span> k=i*i+j*j;</span><br><span class="line">                <span class="keyword">if</span>(h[k]==-<span class="number">1</span>)&#123;</span><br><span class="line">                    h[k]=i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;Integer&gt; list=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(<span class="number">4</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i*i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;i*i+j*j&lt;=n;j++)&#123;</span><br><span class="line">                <span class="type">int</span> x=n-(i*i+j*j);</span><br><span class="line">                <span class="keyword">if</span>(h[x]!=-<span class="number">1</span>)&#123;</span><br><span class="line">                    list.add(i);</span><br><span class="line">                    list.add(j);</span><br><span class="line">                    <span class="type">int</span> i1=h[x];</span><br><span class="line">                    <span class="type">int</span> j1=(<span class="type">int</span>)(Math.sqrt(x-h[x]*h[x]));</span><br><span class="line">                    list.add(i1);</span><br><span class="line">                    list.add(j1);</span><br><span class="line">                    Collections.sort(list);</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> v:list) out.print(v+<span class="string">&quot; &quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="分巧克力"><a href="https://www.acwing.com/problem/content/1229/">分巧克力</a></h3><p>儿童节那天有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 位小朋友到小明家做客。<br>小明拿出了珍藏的巧克力招待小朋友们。<br>小明一共有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 块巧克力，其中第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 块是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>i</mi></msub><mo>×</mo><msub><mi>W</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">H_i \times W_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的方格组成的长方形。<br>为了公平起见，小明需要从这 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 块巧克力中切出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 块巧克力分给小朋友们。<br>切出的巧克力需要满足：</p><p>形状是正方形，边长是整数<br>大小相同</p><p>例如一块 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6</mn><mo>×</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">6 \times 5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">5</span></span></span></span> 的巧克力可以切出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6</mn></mrow><annotation encoding="application/x-tex">6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">6</span></span></span></span> 块 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2 \times 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> 的巧克力或者 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> 块 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3 \times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span> 的巧克力。<br>当然小朋友们都希望得到的巧克力尽可能大，你能帮小明计算出最大的边长是多少么？<br><strong>输入格式</strong><br>第一行包含两个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>。<br>以下 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 行每行包含两个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">H_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">W_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<br>输入保证每位小朋友至少能获得一块 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 \times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 的巧克力。<br><strong>输出格式</strong><br>输出切出的正方形巧克力最大可能的边长。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>N</mi><mo separator="true">,</mo><mi>K</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 \le N,K \le 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>,<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><msub><mi>H</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>W</mi><mi>i</mi></msub><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 \le H_i,W_i \le 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span><br><strong>输入样例：</strong><br>2 10<br>6 5<br>5 6</p><p><strong>输出样例：</strong><br>2</p><p>思路：</p><ol><li>很明显的思路，二分答案，二分巧克力的边长</li><li>然后考虑一块大巧克力能分多少长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>的小巧克力</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 分巧克力 &#123;</span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> w[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>)(<span class="number">1e5</span>+<span class="number">10</span>)];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> h[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>) (<span class="number">1e5</span>+<span class="number">10</span>)];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n,k;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        n=in.nextInt();k=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            h[i]=in.nextInt();w[i]=in.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> l=<span class="number">1</span>,r=(<span class="type">int</span>) (<span class="number">1e5</span>+<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">            <span class="type">int</span> mid=l+r+<span class="number">1</span>&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(check(mid))&#123;</span><br><span class="line">                l=mid;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                r=mid-<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        out.println(l);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">check</span><span class="params">(<span class="type">int</span> x)</span>&#123;</span><br><span class="line">        <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="type">int</span> l1=w[i],l2=h[i];</span><br><span class="line">            res=res+(l1/x)*(l2/x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res&gt;=k;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="特殊排序"><a href="https://www.acwing.com/problem/content/115/">特殊排序</a></h3><p>有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个元素，编号 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo separator="true">,</mo><mn>2..</mn><mi>N</mi></mrow><annotation encoding="application/x-tex">1,2..N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2..</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>，每一对元素之间的大小关系是确定的，关系具有反对称性，但不具有传递性。<br>注意：不存在两个元素大小相等的情况。<br>也就是说，元素的大小关系是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个点与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi>N</mi><mo>×</mo><mo stretchy="false">(</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{N \times (N-1)}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 条有向边构成的任意有向图。<br>然而，这是一道交互式试题，这些关系不能一次性得知，你必须通过不超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>10000</mn></mrow><annotation encoding="application/x-tex">10000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">10000</span></span></span></span> 次提问来获取信息，每次提问只能了解某两个元素之间的关系。<br>现在请你把这 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个元素排成一行，使得每个元素都小于右边与它相邻的元素。<br>你可以通过我们预设的 bool 函数 compare 来获得两个元素之间的大小关系。<br>例如，编号为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 的两个元素，如果元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 小于元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span>，则 compare(a,b) 返回 true，否则返回 false。<br>将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个元素排好序后，把他们的编号以数组的形式输出，如果答案不唯一，则输出任意一个均可。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">1 \le N \le 1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1000</span></span></span></span><br><strong>输入样例</strong><br>[[0, 1, 0], [0, 0, 0], [1, 1, 0]]</p><p><strong>输出样例</strong><br>[3, 1, 2]</p><p>思路：</p><ol><li>使用二分插入排序的思想来做</li><li>数组中的元素保持有序，对于新插入的元素，二分找到其最合适的位置</li><li>用<code>upper_bound()</code>找出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&gt;</mo><mi>i</mi></mrow><annotation encoding="application/x-tex">&gt;i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>的第一个位置，然后把i插入到这个位置</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> <span class="keyword">extends</span> <span class="title class_">Relation</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] specialSort(<span class="type">int</span> N) &#123;</span><br><span class="line">        <span class="type">int</span> a[] = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">        <span class="type">int</span> <span class="variable">len_a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        a[len_a++] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt;= N; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0</span>, r = len_a - <span class="number">1</span>;</span><br><span class="line">            <span class="type">int</span> k=upper_bound(a,i,len_a);</span><br><span class="line">            a[len_a++]=i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=len_a-<span class="number">1</span>;j&gt;k;j--)&#123;</span><br><span class="line">                <span class="type">int</span> t=a[j];</span><br><span class="line">                a[j]=a[j-<span class="number">1</span>];</span><br><span class="line">                a[j-<span class="number">1</span>]=t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">upper_bound</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> i, <span class="type">int</span> len)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0</span>, r = len - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (compare(i, a[mid])) &#123;</span><br><span class="line">                r = mid;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                l = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(l==len-<span class="number">1</span>&amp;&amp;compare(a[l],i)) <span class="keyword">return</span> len;</span><br><span class="line">        <span class="keyword">return</span> l;</span><br><span class="line">    &#125;  </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="双指针">双指针</h2><h3 id="字符串删减"><a href="https://www.acwing.com/problem/content/3771/">字符串删减</a></h3><p>给定一个由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个小写字母构成的字符串。<br>现在，需要删掉其中的一些字母，使得字符串中不存在连续三个或三个以上的 x。<br>请问，最少需要删掉多少个字母？<br>如果字符串本来就不存在连续的三个或三个以上 x，则无需删掉任何字母。<br><strong>输入格式</strong><br>第一行包含整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>。<br>第二行包含一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的由小写字母构成的字符串。<br><strong>输出格式</strong><br>输出最少需要删掉的字母个数。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>100</mn></mrow><annotation encoding="application/x-tex">3 \le n \le 100</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">100</span></span></span></span><br><strong>输入样例</strong>1：<br>6<br>xxxiii</p><p><strong>输出样例</strong>1：<br>1</p><p><strong>输入样例</strong>2：<br>5<br>xxoxx</p><p><strong>输出样例</strong>2：<br>0</p><p><strong>输入样例</strong>3：<br>10<br>xxxxxxxxxx</p><p><strong>输出样例</strong>3：<br>8</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        String s=in.next();</span><br><span class="line">        <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        List&lt;Character&gt; list=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)&#123;</span><br><span class="line">            <span class="type">char</span> c=s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span>(c==<span class="string">&#x27;x&#x27;</span>)&#123;</span><br><span class="line">                cnt++;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                cnt=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(cnt&lt;<span class="number">3</span>) list.add(c);</span><br><span class="line">        &#125;</span><br><span class="line">        out.println(n-list.size());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="最长连续不重复子序列"><a href="https://www.acwing.com/problem/content/801/">最长连续不重复子序列</a></h3><p>给定一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的整数序列，请找出最长的不包含重复的数的连续区间，输出它的长度。<br><strong>输入格式</strong><br>第一行包含整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>。<br>第二行包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个整数（均在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>∼</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">0 \sim 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span> 范围内），表示整数序列。<br><strong>输出格式</strong><br>共一行，包含一个整数，表示最长的不包含重复的数的连续区间的长度。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 \le n \le 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span><br><strong>输入样例</strong>：<br>5<br>1 2 2 3 5</p><p><strong>输出样例</strong>：<br>3</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> h[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>) (<span class="number">1e5</span>+<span class="number">10</span>)];</span><br><span class="line">        <span class="type">int</span> l=<span class="number">1</span>,r=<span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++,r++)&#123;</span><br><span class="line">            a[i]=in.nextInt();</span><br><span class="line">            h[a[i]]++;</span><br><span class="line">            <span class="keyword">while</span>(h[a[i]]&gt;<span class="number">1</span>)&#123;</span><br><span class="line">                h[a[l]]--;</span><br><span class="line">                l++;</span><br><span class="line">            &#125;</span><br><span class="line">            ans=Math.max(r-l+<span class="number">1</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">        out.println(ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数组元素目标和"><a href="https://www.acwing.com/problem/content/802/">数组元素目标和</a></h3><p>给定两个升序排序的有序数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>，以及一个目标值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>。<br>数组下标从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 开始。<br>请你求出满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>+</mo><mi>B</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">A[i] + B[j] = x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 的数对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i, j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>。<br>数据保证有唯一解。<br><strong>输入格式</strong><br>第一行包含三个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo separator="true">,</mo><mi>m</mi><mo separator="true">,</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">n,m,x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span></span></span></span>，分别表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 的长度，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 的长度以及目标值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>。<br>第二行包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个整数，表示数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>。<br>第三行包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 个整数，表示数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>。<br><strong>输出格式</strong><br>共一行，包含两个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>。<br><strong>数据范围</strong><br>数组长度不超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>。<br>同一数组内元素各不相同。<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mtext>数组元素</mtext><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">1 \le 数组元素 \le 10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord cjk_fallback">数组元素</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span><br><strong>输入样例</strong>：<br>4 5 6<br>1 2 4 7<br>3 4 6 8 9</p><p><strong>输出样例</strong>：<br>1 1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt(),m=in.nextInt(),x=in.nextInt();</span><br><span class="line">        <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">        <span class="type">int</span> b[]=<span class="keyword">new</span> <span class="title class_">int</span>[m];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) a[i]=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++) b[j]=in.nextInt();</span><br><span class="line">        <span class="type">int</span> i=<span class="number">0</span>,j=m-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(a[i]+b[j]!=x)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]+b[j]&gt;x) j--;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a[i]+b[j]&lt;x)i++;</span><br><span class="line">        &#125;</span><br><span class="line">        out.print(i+<span class="string">&quot; &quot;</span>+j);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="判断子序列"><a href="https://www.acwing.com/problem/content/2818/">判断子序列</a></h3><p>给定一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的整数序列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_1,a_2,…,a_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 以及一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 的整数序列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>b</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>b</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">b_1,b_2,…,b_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<br>请你判断 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 序列是否为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 序列的子序列。<br>子序列指序列的一部分项按原有次序排列而得的序列，例如序列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>5</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{a_1,a_3,a_5\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span> 是序列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>4</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>5</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{a_1,a_2,a_3,a_4,a_5\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span> 的一个子序列。<br><strong>输入格式</strong><br>第一行包含两个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo separator="true">,</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">n,m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span></span></span></span>。<br>第二行包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个整数，表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_1,a_2,…,a_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<br>第三行包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 个整数，表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>b</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>b</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">b_1,b_2,…,b_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<br><strong>输出格式</strong><br>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 序列是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 序列的子序列，输出一行 Yes。<br>否则，输出 No。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mi>m</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 \le n \le m \le 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>,<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup><mo>≤</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>b</mi><mi>i</mi></msub><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">-10^9 \le a_i,b_i \le 10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9501em;vertical-align:-0.136em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span><br><strong>输入样例</strong>：<br>3 5<br>1 3 5<br>1 2 3 4 5</p><p><strong>输出样例</strong>：<br>Yes</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt(),m=in.nextInt();</span><br><span class="line">        <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">        <span class="type">int</span> b[]=<span class="keyword">new</span> <span class="title class_">int</span>[m];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) a[i]=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++) b[j]=in.nextInt();</span><br><span class="line">        <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m&amp;&amp;i&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(b[j]==a[i]) i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i==n) out.print(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> out.print(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="日志统计"><a href="https://www.acwing.com/problem/content/1240/">日志统计</a></h3><p>小明维护着一个程序员论坛。现在他收集了一份”点赞”日志，日志共有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 行。<br>其中每一行的格式是：<br>$ts $<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span></p><p>表示在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ts</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span></span></span></span> 时刻编号 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span> 的帖子收到一个”赞”。<br>现在小明想统计有哪些帖子曾经是”热帖”。<br>如果一个帖子曾在任意一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span> 的时间段内收到不少于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 个赞，小明就认为这个帖子曾是”热帖”。<br>具体来说，如果存在某个时刻 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 满足该帖在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>T</mi><mo separator="true">,</mo><mi>T</mi><mo>+</mo><mi>D</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">[T, T+D)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span> 这段时间内(注意是左闭右开区间)收到不少于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 个赞，该帖就曾是”热帖”。<br>给定日志，请你帮助小明统计出所有曾是”热帖”的帖子编号。<br><strong>输入格式</strong><br>第一行包含三个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo separator="true">,</mo><mi>D</mi><mo separator="true">,</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">N,D,K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>。<br>以下 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 行每行一条日志，包含两个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ts</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span>。<br><strong>输出格式</strong><br>按从小到大的顺序输出热帖 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span>。<br>每个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span> 占一行。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>K</mi><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 \le K \le N \le 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>,<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>t</mi><mi>s</mi><mo separator="true">,</mo><mi>i</mi><mi>d</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">0 \le ts,id \le 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>,<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>D</mi><mo>≤</mo><mn>10000</mn></mrow><annotation encoding="application/x-tex">1 \le D \le 10000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">10000</span></span></span></span><br><strong>输入样例</strong>：<br>7 10 2<br>0 1<br>0 10<br>10 10<br>10 1<br>9 1<br>100 3<br>100 3</p><p><strong>输出样例</strong>：<br>1<br>3</p><p>思路：</p><ol><li>枚举时刻，开一个链式数组去存每一时刻的点赞</li><li>用hash表统符合的点赞数</li><li>用TreeSet输出答案</li><li>l维护d分钟前的点赞，i维护当前</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt(),d=in.nextInt(),k=in.nextInt();</span><br><span class="line">        List&lt;Integer&gt;[]lists=<span class="keyword">new</span> <span class="title class_">ArrayList</span>[(<span class="type">int</span>) (<span class="number">1e5</span>+<span class="number">10</span>)];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="type">int</span> ts=in.nextInt(),id=in.nextInt();</span><br><span class="line">            <span class="keyword">if</span>(lists[ts]==<span class="literal">null</span>) lists[ts]=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            lists[ts].add(id);</span><br><span class="line">        &#125;</span><br><span class="line">        Set&lt;Integer&gt; set=<span class="keyword">new</span> <span class="title class_">TreeSet</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span> h[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>) (<span class="number">1e5</span>+<span class="number">10</span>)];</span><br><span class="line">        <span class="type">int</span> l=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;d;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(lists[i]!=<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> v:lists[i])&#123;</span><br><span class="line">                    h[v]++;</span><br><span class="line">                    <span class="keyword">if</span>(h[v]&gt;=k)set.add(v);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=d;i&lt;=<span class="number">1e5</span>;i++,l++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(lists[l]!=<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> v:lists[l])&#123;</span><br><span class="line">                    h[v]--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(lists[i]!=<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> v:lists[i])&#123;</span><br><span class="line">                    h[v]++;</span><br><span class="line">                    <span class="keyword">if</span>(h[v]&gt;=k)set.add(v);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> v:set) out.println(v);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="完全二叉树权值"><a href="https://www.acwing.com/problem/content/1242/">完全二叉树权值</a></h3><p>给定一棵包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个节点的完全二叉树，树上每个节点都有一个权值，按从上到下、从左到右的顺序依次是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator="true">,</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><msub><mi>A</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">A_1, A_2, · · · A_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,⋅⋅⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，如下图所示：</p><p><img src="https://cdn.acwing.com/media/article/image/2019/12/05/19_2f0cae5817-QQ%E6%88%AA%E5%9B%BE20191205124611.png" alt=""></p><p>现在小明要把相同深度的节点的权值加在一起，他想知道哪个深度的节点权值之和最大？<br>如果有多个深度的权值和同为最大，请你输出其中最小的深度。<br>注：根的深度是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。<br><strong>输入格式</strong><br>第一行包含一个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>。<br>第二行包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator="true">,</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><msub><mi>A</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">A_1, A_2, · · · A_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,⋅⋅⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<br><strong>输出格式</strong><br>输出一个整数代表答案。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 \le N \le 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>,<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo>≤</mo><msub><mi>A</mi><mi>i</mi></msub><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">-10^5 \le A_i \le 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9501em;vertical-align:-0.136em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span><br><strong>输入样例</strong>：<br>7<br>1 6 5 4 3 2 1</p><p><strong>输出样例</strong>：<br>2</p><p>思路：</p><ol><li>求二叉树每一层的和中最大值，层序存储二叉树</li><li>省空间可以直接数组模拟完全二叉树，左子结点为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∗</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">i*2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>,右子结点为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∗</mo><mn>2</mn><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i*2+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        List&lt;Integer&gt;[]lists=<span class="keyword">new</span> <span class="title class_">ArrayList</span>[<span class="number">20</span>];</span><br><span class="line">        <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="type">boolean</span> flag=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;flag;i++)&#123;</span><br><span class="line">            lists[i]=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">1</span>&lt;&lt;i;j++)&#123;</span><br><span class="line">                lists[i].add(in.nextInt());</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">if</span>(cnt==n)&#123;</span><br><span class="line">                    flag=<span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> maxi=<span class="number">1</span>,maxAns=<span class="number">1</span>&lt;&lt;<span class="number">63</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;lists[i]!=<span class="literal">null</span>;i++)&#123;</span><br><span class="line">            <span class="type">long</span> sum=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;lists[i].size();j++)&#123;</span><br><span class="line">                sum=sum+lists[i].get(j);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(sum&gt;maxAns)&#123;</span><br><span class="line">                maxAns=sum;</span><br><span class="line">                maxi=i+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        out.print(maxi);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="递推">递推</h2><h3 id="砖块"><a href="https://www.acwing.com/problem/content/3780/">砖块</a></h3><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个砖块排成一排，从左到右编号依次为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>∼</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">1 \sim n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>。<br>每个砖块要么是黑色的，要么是白色的。<br>现在你可以进行以下操作若干次（可以是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> 次）：<br>选择两个相邻的砖块，反转它们的颜色。（黑变白，白变黑）<br>你的目标是通过不超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mi>n</mi></mrow><annotation encoding="application/x-tex">3n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span><span class="mord mathnormal">n</span></span></span></span> 次操作，将所有砖块的颜色变得一致。<br><strong>输入格式</strong><br>第一行包含整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>，表示共有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 组测试数据。<br>每组数据第一行包含一个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>。<br>第二行包含一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的字符串 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span>。其中的每个字符都是 W 或 B，如果第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个字符是 W，则表示第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 号砖块是白色的，如果第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个字符是 B，则表示第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个砖块是黑色的。<br><strong>输出格式</strong><br>每组数据，如果无解则输出一行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>。<br>否则，首先输出一行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>，表示需要的操作次数。<br>如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">k&gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，则还需再输出一行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 个整数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>p</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>p</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">p_1,p_2,…,p_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">p_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 次操作，选中的砖块为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">p_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">p_i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 号砖块。<br>如果方案不唯一，则输出任意合理方案即可。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>T</mi><mo>≤</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">1 \le T \le 10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">10</span></span></span></span>，<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>200</mn></mrow><annotation encoding="application/x-tex">2 \le n \le 200</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">200</span></span></span></span>。<br><strong>输入样例</strong>：<br>4<br>8<br>BWWWWWWB<br>4<br>BWBB<br>5<br>WWWWW<br>3<br>BWB</p><p><strong>输出样例</strong>：<br>3<br>6 2 4<br>-1<br>0<br>2<br>2 1</p><p>思路：</p><ol><li>如果w的数量和b的数量都是奇数一定不成立</li><li>只有偶数才能被翻完</li><li>从前往后，把偶数的字符依次翻成另一个字符</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="type">int</span> b=<span class="number">0</span>,w=<span class="number">0</span>;</span><br><span class="line">        String s=in.next();</span><br><span class="line">        <span class="type">char</span> c[]=s.toCharArray();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s.charAt(i)==<span class="string">&#x27;B&#x27;</span>) b++;</span><br><span class="line">            <span class="keyword">else</span> w++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(b%<span class="number">2</span>==w%<span class="number">2</span>&amp;&amp;b%<span class="number">2</span>==<span class="number">1</span>)&#123;</span><br><span class="line">            out.println(-<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(b==<span class="number">0</span>||w==<span class="number">0</span>)&#123;</span><br><span class="line">            out.println(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;Integer&gt; ans=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n-<span class="number">1</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(b%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(c[i]==<span class="string">&#x27;B&#x27;</span>)&#123;</span><br><span class="line">                    c[i]=<span class="string">&#x27;W&#x27;</span>;</span><br><span class="line">                    <span class="keyword">if</span>(c[i+<span class="number">1</span>]==<span class="string">&#x27;W&#x27;</span>) c[i+<span class="number">1</span>]=<span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">                    <span class="keyword">else</span> c[i+<span class="number">1</span>]=<span class="string">&#x27;W&#x27;</span>;</span><br><span class="line">                    ans.add(i+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(w%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(c[i]==<span class="string">&#x27;W&#x27;</span>)&#123;</span><br><span class="line">                    c[i]=<span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">                    <span class="keyword">if</span>(c[i+<span class="number">1</span>]==<span class="string">&#x27;W&#x27;</span>) c[i+<span class="number">1</span>]=<span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">                    <span class="keyword">else</span> c[i+<span class="number">1</span>]=<span class="string">&#x27;W&#x27;</span>;</span><br><span class="line">                    ans.add(i+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        out.println(ans.size());</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> v:ans) out.print(v+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="翻硬币"><a href="https://www.acwing.com/problem/content/1210/">翻硬币</a></h3><p>小明正在玩一个“翻硬币”的游戏。<br>桌上放着排成一排的若干硬币。我们用 * 表示正面，用 o 表示反面（是小写字母，不是零）。<br>比如，可能情形是：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∗</mo><mo>∗</mo><mi>o</mi><mi>o</mi><mo>∗</mo><mo>∗</mo><mo>∗</mo><mi>o</mi><mi>o</mi><mi>o</mi><mi>o</mi></mrow><annotation encoding="application/x-tex">**oo***oooo</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord mathnormal">oo</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">oooo</span></span></span></span><br>如果同时翻转左边的两个硬币，则变为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi><mi>o</mi><mi>o</mi><mi>o</mi><mo>∗</mo><mo>∗</mo><mo>∗</mo><mi>o</mi><mi>o</mi><mi>o</mi><mi>o</mi></mrow><annotation encoding="application/x-tex">oooo***oooo</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord mathnormal">oooo</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">oooo</span></span></span></span><br>现在小明的问题是：如果已知了初始状态和要达到的目标状态，每次只能同时翻转相邻的两个硬币,那么对特定的局面，最少要翻动多少次呢？<br>我们约定：把翻动相邻的两个硬币叫做一步操作。<br><strong>输入格式</strong><br>两行等长的字符串，分别表示初始状态和要达到的目标状态。<br><strong>输出格式</strong><br>一个整数，表示最小操作步数<br><strong>数据范围</strong><br>输入字符串的长度均不超过100。<br>数据保证答案一定有解。<br><strong>输入样例</strong>1：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∗</mo><mo>∗</mo><mo>∗</mo><mo>∗</mo><mo>∗</mo><mo>∗</mo><mo>∗</mo><mo>∗</mo><mo>∗</mo><mo>∗</mo></mrow><annotation encoding="application/x-tex">**********</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mord">∗</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi><mo>∗</mo><mo>∗</mo><mo>∗</mo><mo>∗</mo><mi>o</mi><mo>∗</mo><mo>∗</mo><mo>∗</mo><mo>∗</mo></mrow><annotation encoding="application/x-tex">o****o****</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord mathnormal">o</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mord mathnormal">o</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span></span></span></span></p><p><strong>输出样例</strong>1：<br>5</p><p><strong>输入样例</strong>2：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∗</mo><mi>o</mi><mo>∗</mo><mo>∗</mo><mi>o</mi><mo>∗</mo><mo>∗</mo><mo>∗</mo><mi>o</mi><mo>∗</mo><mo>∗</mo><mo>∗</mo></mrow><annotation encoding="application/x-tex">*o**o***o***</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mord mathnormal">o</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mord mathnormal">o</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord mathnormal">o</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mord">∗</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∗</mo><mi>o</mi><mo>∗</mo><mo>∗</mo><mo>∗</mo><mi>o</mi><mo>∗</mo><mo>∗</mo><mi>o</mi><mo>∗</mo><mo>∗</mo><mo>∗</mo></mrow><annotation encoding="application/x-tex">*o***o**o***</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mord mathnormal">o</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord mathnormal">o</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mord mathnormal">o</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord">∗</span><span class="mord">∗</span></span></span></span></p><p><strong>输出样例2：</strong></p><p>1</p><p>思路：1.如果一定有解,按照顺序翻一定能翻完</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">char</span> a[]=in.next().toCharArray();</span><br><span class="line">        <span class="type">char</span> b[]=in.next().toCharArray();</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;a.length-<span class="number">1</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]!=b[i])&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]==<span class="string">&#x27;*&#x27;</span>)&#123;</span><br><span class="line">                    a[i]=<span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    a[i]=<span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(a[i+<span class="number">1</span>]==<span class="string">&#x27;*&#x27;</span>)&#123;</span><br><span class="line">                    a[i+<span class="number">1</span>]=<span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    a[i+<span class="number">1</span>]=<span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                ans++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        out.println(ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="递归">递归</h2><h3 id="树的遍历"><a href="https://www.acwing.com/problem/content/1499/">树的遍历</a></h3><p>一个二叉树，树中每个节点的权值互不相同。<br>现在给出它的后序遍历和中序遍历，请你输出它的层序遍历。<br><strong>输入格式</strong><br>第一行包含整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>，表示二叉树的节点数。<br>第二行包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个整数，表示二叉树的后序遍历。<br>第三行包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个整数，表示二叉树的中序遍历。<br><strong>输出格式</strong><br>输出一行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个整数，表示二叉树的层序遍历。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>30</mn></mrow><annotation encoding="application/x-tex">1 \le N \le 30</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">30</span></span></span></span>,<br>官方并未给出各节点权值的取值范围，为方便起见，在本网站范围取为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>∼</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">1 \sim N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>。<br><strong>输入样例</strong>：<br>7<br>2 3 1 5 7 6 4<br>1 2 3 4 5 6 7</p><p>思路:</p><ol><li>后续遍历的最后一个数是根结点</li><li>通过根结点去中序遍历里面求出该节点的左子树有多少个结点，右子树有多少个结点</li><li>通过以上求出的结点，再去后序遍历中，分别递归后序的左右子树</li></ol><p><strong>输出样例</strong>：<br>4 1 6 3 5 7 2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> zu=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(zu--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> nxt[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">31</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> mid[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">31</span>];</span><br><span class="line">    <span class="keyword">static</span> List&lt;Integer&gt; tree[]=<span class="keyword">new</span> <span class="title class_">ArrayList</span>[<span class="number">31</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        n=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) nxt[i]=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) mid[i]=in.nextInt();</span><br><span class="line">        dfs(<span class="number">0</span>,<span class="number">0</span>,n-<span class="number">1</span>,<span class="number">0</span>,n-<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;tree[i]!=<span class="literal">null</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;tree[i].size();j++)</span><br><span class="line">            out.print(tree[i].get(j)+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">dfs</span><span class="params">(<span class="type">int</span> c,<span class="type">int</span> l_n,<span class="type">int</span> r_n,<span class="type">int</span> l_m,<span class="type">int</span> r_m)</span>&#123;<span class="comment">//存后序遍历的左右端点 子树中序遍历的左右端点</span></span><br><span class="line">        <span class="keyword">if</span>(l_n&gt;r_n||l_m&gt;r_m) <span class="keyword">return</span>;</span><br><span class="line">        <span class="type">int</span> root=nxt[r_n];</span><br><span class="line">        <span class="keyword">if</span>(tree[c]==<span class="literal">null</span>) tree[c]=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        tree[c].add(root);</span><br><span class="line">        <span class="type">int</span> k=find(root,mid);<span class="comment">//找到中序遍历根结点位置</span></span><br><span class="line">        <span class="type">int</span> left_cnt=k-l_m;<span class="comment">//根左边子树的结点数</span></span><br><span class="line">        <span class="type">int</span> right_cnt=r_m-k;<span class="comment">//根右边子树节点数</span></span><br><span class="line">        dfs(c+<span class="number">1</span>,r_n-left_cnt-right_cnt,r_n-right_cnt-<span class="number">1</span>,l_m,k-<span class="number">1</span>);<span class="comment">//存后序遍历的左右端点 子树中序遍历的左右端点</span></span><br><span class="line">        dfs(c+<span class="number">1</span>,r_n-right_cnt,r_n-<span class="number">1</span>,k+<span class="number">1</span>,r_m);<span class="comment">//存后序遍历的左右端点 子树中序遍历的左右端点</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">find</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> a[])</span>&#123;</span><br><span class="line">        <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]==x) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>数据结构</h1><h2 id="并查集">并查集</h2><h3 id="合并集合"><a href="https://www.acwing.com/problem/content/838/">合并集合</a></h3><p>一共有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个数，编号是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>∼</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">1 \sim n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>，最开始每个数各自在一个集合中。<br>现在要进行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 个操作，操作共有两种：</p><p>M a b，将编号为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 的两个数所在的集合合并，如果两个数已经在同一个集合中，则忽略这个操作；<br>Q a b，询问编号为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 的两个数是否在同一个集合中；</p><p><strong>输入格式</strong><br>第一行输入整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>。<br>接下来 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 行，每行包含一个操作指令，指令为 M a b 或 Q a b 中的一种。<br><strong>输出格式</strong><br>对于每个询问指令 Q a b，都要输出一个结果，如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 在同一集合内，则输出 Yes，否则输出 No。<br>每个结果占一行。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo separator="true">,</mo><mi>m</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 \le n,m \le 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span><br><strong>输入样例</strong>：<br>4 5<br>M 1 2<br>M 3 4<br>Q 1 2<br>Q 1 3<br>Q 3 4</p><p><strong>输出样例</strong>：<br>Yes<br>No<br>Yes</p><p>思路:DSU的最基本板子，合并集合</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> p[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>) (<span class="number">1e5</span>+<span class="number">10</span>)];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>)(<span class="number">1e5</span>+<span class="number">10</span>)];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">find</span><span class="params">(<span class="type">int</span> x)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> p[x]==x?x:(p[x]=find(p[x]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt(),q=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">            a[i]=i;</span><br><span class="line">            p[a[i]]=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">            String op=in.next();</span><br><span class="line">            <span class="type">int</span> a=in.nextInt(),b=in.nextInt();</span><br><span class="line">            <span class="keyword">if</span>(op.equals(<span class="string">&quot;M&quot;</span>))&#123;</span><br><span class="line">                p[find(b)]=find(a);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(find(a)==find(b))&#123;</span><br><span class="line">                    out.println(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    out.println(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="连通块中点的数量"><a href="https://www.acwing.com/activity/content/problem/content/8058/">连通块中点的数量</a></h3><p>给定一个包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个点（编号为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>∼</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">1 \sim n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>）的无向图，初始时图中没有边。<br>现在要进行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 个操作，操作共有三种：</p><p>C a b，在点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 和点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 之间连一条边，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 可能相等；<br>Q1 a b，询问点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 和点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 是否在同一个连通块中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 可能相等；<br>Q2 a，询问点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 所在连通块中点的数量；</p><p><strong>输入格式</strong><br>第一行输入整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>。<br>接下来 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 行，每行包含一个操作指令，指令为 C a b，Q1 a b 或 Q2 a 中的一种。<br><strong>输出格式</strong><br>对于每个询问指令 Q1 a b，如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 在同一个连通块中，则输出 Yes，否则输出 No。<br>对于每个询问指令 Q2 a，输出一个整数表示点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span> 所在连通块中点的数量<br>每个结果占一行。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo separator="true">,</mo><mi>m</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 \le n,m \le 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span><br><strong>输入样例</strong>：<br>5 5<br>C 1 2<br>Q1 1 2<br>Q2 1<br>C 2 5<br>Q2 5</p><p><strong>输出样例</strong>：<br>Yes<br>2<br>3</p><p>思路:</p><ol><li>用一个size数组来维护当前点所在集合的点的数量</li><li>如果二个点不在一个集合，用并查集合并后，把size数组+到合并入的点的地方去，在的话不管</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> p[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>) (<span class="number">1e5</span>+<span class="number">10</span>)];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> size[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>) (<span class="number">1e5</span>+<span class="number">10</span>)];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="type">int</span> m=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            p[i]=i;</span><br><span class="line">            size[i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">            String op=in.next();</span><br><span class="line">            <span class="keyword">if</span>(op.equals(<span class="string">&quot;C&quot;</span>))&#123;</span><br><span class="line">                <span class="type">int</span> a=in.nextInt();</span><br><span class="line">                <span class="type">int</span> b=in.nextInt();</span><br><span class="line">                <span class="keyword">if</span>(find(a)!=find(b)) &#123;</span><br><span class="line">                    size[find(b)]+=size[find(a)];</span><br><span class="line">                &#125;</span><br><span class="line">                p[find(a)]=find(b);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(op.equals(<span class="string">&quot;Q1&quot;</span>))&#123;</span><br><span class="line">                <span class="type">int</span> a=in.nextInt();</span><br><span class="line">                <span class="type">int</span> b=in.nextInt();</span><br><span class="line">                <span class="keyword">if</span>(find(a)==find(b))&#123;</span><br><span class="line">                    out.println(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    out.println(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="type">int</span> a=in.nextInt();</span><br><span class="line">                out.println(size[find(a)]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">find</span><span class="params">(<span class="type">int</span> x)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> p[x]==x?x:(p[x]=find(p[x]));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="银河英雄传说"><a href="https://www.acwing.com/problem/content/240/">银河英雄传说</a></h3><p>有一个划分为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 列的星际战场，各列依次编号为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">1,2,…,N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>。</p><p>有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 艘战舰，也依次编号为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">1,2,…,N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>，其中第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 号战舰处于第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 列。<br>有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 条指令，每条指令格式为以下两种之一：</p><p>M i j，表示让第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 号战舰所在列的全部战舰保持原有顺序，接在第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 号战舰所在列的尾部。<br>C i j，表示询问第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 号战舰与第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 号战舰当前是否处于同一列中，如果在同一列中，它们之间间隔了多少艘战舰。</p><p>现在需要你编写一个程序，处理一系列的指令。<br><strong>输入格式</strong><br>第一行包含整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>，表示共有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 条指令。<br>接下来 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 行，每行一个指令，指令有两种形式：M i j 或 C i j。<br>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 为大写字母表示指令类型，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 为整数，表示指令涉及的战舰编号。<br><strong>输出格式</strong><br>你的程序应当依次对输入的每一条指令进行分析和处理：<br>如果是 M i j 形式，则表示舰队排列发生了变化，你的程序要注意到这一点，但是不要输出任何信息；<br>如果是 C i j 形式，你的程序要输出一行，仅包含一个整数，表示在同一列上，第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 号战舰与第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 号战舰之间布置的战舰数目，如果第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 号战舰与第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 号战舰当前不在同一列上，则输出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>≤</mo><mn>30000</mn><mo separator="true">,</mo><mi>T</mi><mo>≤</mo><mn>500000</mn></mrow><annotation encoding="application/x-tex">N \le 30000 , T \le 500000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">30000</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">500000</span></span></span></span><br><strong>输入样例</strong>：<br>4<br>M 2 3<br>C 1 2<br>M 2 4<br>C 4 2</p><p><strong>输出样例</strong>：<br>-1<br>1</p><p>思路：</p><ol><li>并查集的一道应用题，首先定义三个数组<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo separator="true">,</mo><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo separator="true">,</mo><mi>d</mi><mi>i</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">p,size,dis</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ze</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span></span></span></span></li><li>p[x]表示x的父结点是谁，size[x]数组表示x所在的集合有多少结点，dis[x]表示x到其父结点的距离是多少</li><li>当我把a集合合并到b集合，那么b集合的结点数量就要加上a结点的元素数量，size[b]+=size[a]</li><li>把a集合合并到b集合，a集合的根是直接连接到b集合的根，所以a集合到其父结点的距离就是b集合元素数量，便是dis[a]=size[b]</li><li>a结点内其他结点的根结点此时依然是a结点，他们的dis[x]是到a的距离，当我查询a结点内的一个x节点到b结点内的距离，我在路径优化的时候，会把内部结点x直接连到b结点上，那么x到b结点的距离便是x到a结点的距离+a到b结点的距离，便是dis[x]+=dis[p[x]]</li><li>最后查询集合内二个结点中间其他结点的数量，便是二个结点到根结点的距离-1</li><li>最后注意，如果两个节点已经在一个集合，那么便没有必要再次合并，否则原本他们的父结点都相等，到父结点的距离都为0，就会变成到父结点的距离是集合的元素数量</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">3e4</span>;i++)&#123;</span><br><span class="line">            p[i]=i;</span><br><span class="line">            size[i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            String op=in.next();</span><br><span class="line">            <span class="type">int</span> a=in.nextInt(),b=in.nextInt();</span><br><span class="line">            <span class="type">int</span> fa=find(a),fb=find(b);</span><br><span class="line">            <span class="keyword">if</span>(op.equals(<span class="string">&quot;M&quot;</span>))&#123;</span><br><span class="line">                <span class="keyword">if</span>(fa==fb) <span class="keyword">continue</span>;</span><br><span class="line">                p[fa]=fb;</span><br><span class="line">                dis[fa]=size[fb];</span><br><span class="line">                size[fb]+=size[fa];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(fa==fb)&#123;</span><br><span class="line">                    out.println(Math.max(<span class="number">0</span>,Math.abs(dis[a]-dis[b])-<span class="number">1</span>));</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    out.println(-<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">find</span><span class="params">(<span class="type">int</span> x)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(p[x]==x) <span class="keyword">return</span> x;</span><br><span class="line">        <span class="type">int</span> v=find(p[x]);</span><br><span class="line">        dis[x]=dis[x]+dis[p[x]];</span><br><span class="line">        <span class="keyword">return</span> p[x]=v;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> size[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>) (<span class="number">3e4</span>+<span class="number">10</span>)];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> dis[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>)(<span class="number">3e4</span>+<span class="number">10</span>)];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> p[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>) (<span class="number">3e4</span>+<span class="number">10</span>)];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="食物链"><a href="https://www.acwing.com/problem/content/242/">食物链</a></h3><p>动物王国中有三类动物 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">A,B,C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，这三类动物的食物链构成了有趣的环形。<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 吃 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 吃 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 吃 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>。<br>现有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个动物，以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>∼</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">1 \sim N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 编号。<br>每个动物都是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">A,B,C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 中的一种，但是我们并不知道它到底是哪一种。<br>有人用两种说法对这 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个动物所构成的食物链关系进行描述：<br>第一种说法是 1 X Y，表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 是同类。<br>第二种说法是 2 X Y，表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 吃 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>。<br>此人对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个动物，用上述两种说法，一句接一句地说出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 句话，这 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 句话有的是真的，有的是假的。<br>当一句话满足下列三条之一时，这句话就是假话，否则就是真话。</p><p>当前的话与前面的某些真的话冲突，就是假话；<br>当前的话中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 比 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 大，就是假话；<br>当前的话表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 吃 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>，就是假话。</p><p>你的任务是根据给定的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 句话，输出假话的总数。<br><strong>输入格式</strong><br>第一行是两个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>，以一个空格分隔。<br>以下 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 行每行是三个正整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mtext>，</mtext><mi>X</mi><mtext>，</mtext><mi>Y</mi></mrow><annotation encoding="application/x-tex">D，X，Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>，两数之间用一个空格隔开，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span> 表示说法的种类。<br>若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">D=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，则表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 是同类。<br>若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">D=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>，则表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 吃 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>。<br><strong>输出格式</strong><br>只有一个整数，表示假话的数目。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>50000</mn></mrow><annotation encoding="application/x-tex">1 \le N \le 50000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">50000</span></span></span></span>,<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>K</mi><mo>≤</mo><mn>100000</mn></mrow><annotation encoding="application/x-tex">0 \le K \le 100000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">100000</span></span></span></span><br><strong>输入样例</strong>：<br>100 7<br>1 101 1<br>2 1 2<br>2 2 3<br>2 3 3<br>1 1 3<br>2 3 1<br>1 5 5</p><p><strong>输出样例</strong>：<br>3</p><p>思路：</p><ol><li>使用带边权并查集来做这道题</li><li>并查集p用来维护两个点是否在一个集合内（是否有联系），d维护两个点之间具体的关系</li><li>d本质上是该点到父结点的距离，我们用距离决定其与父结点的关系，模3为0是同类，定义为A，模3为1是吃，定义为B，模3为2是被吃，定义为C，A-&gt;B-&gt;C-&gt;A</li><li>我们对点进行操作，如果这两个点在一个集合内，我们就根据d判断它们关系</li><li>如果这两个点不在一个集合内，我们就要将他们合并，比如把a所在集合合并到b所在集合，便是把p[fa]=fb</li><li>这里就是把a的根接了一条线到b的根，如果我们希望db到da距离模3为0，此时b是直接连接到fb，而a和b隔了二层结点，也就是d[a]+d[fa],我们构造d[fa]=d[b]-d[a]，那么在路径压缩的时候d[a]就会变成d[a]+d[b]-d[a]，这样其就等于d[b]了，如果我们构造吃的关系就是d[fa]=d[b]-d[a]+1,压缩后-d[b]刚好为1。这样我们就构造好了</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(n--&gt;<span class="number">0</span>) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> p[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>) (<span class="number">5e4</span>+<span class="number">10</span>)];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> d[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>) (<span class="number">5e4</span>+<span class="number">10</span>)];<span class="comment">//每个结点到其父结点的距离，距离模3为0是同类,1是吃，2是被吃</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt(),k=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) p[i]=i;</span><br><span class="line">        <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">            <span class="type">int</span> op=in.nextInt(),a=in.nextInt(),b=in.nextInt();</span><br><span class="line">            <span class="keyword">if</span>(a&gt;n||b&gt;n)&#123;</span><br><span class="line">                res++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> fa=find(a),fb=find(b);</span><br><span class="line">            <span class="keyword">if</span>(op==<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(fa==fb&amp;&amp;(d[a]-d[b])%<span class="number">3</span>!=<span class="number">0</span>) res++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(fa!=fb)&#123;</span><br><span class="line">                    p[fa]=fb;</span><br><span class="line">                    d[fa]=d[b]-d[a];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(a==b) res++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(fa==fb&amp;&amp;(d[a]-d[b]-<span class="number">1</span>)%<span class="number">3</span>!=<span class="number">0</span>) res++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(fa!=fb)&#123;</span><br><span class="line">                    p[fa]=fb;</span><br><span class="line">                    d[fa]=d[b]+<span class="number">1</span>-d[a];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">find</span><span class="params">(<span class="type">int</span> x)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(p[x]==x) <span class="keyword">return</span> x;</span><br><span class="line">        <span class="type">int</span> r=find(p[x]);</span><br><span class="line">        d[x]+=d[p[x]];</span><br><span class="line">        <span class="keyword">return</span> p[x]=r;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            String str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span>(st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str=br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>动态规划</h1><h2 id="线性DP">线性DP</h2><h3 id="Two-Arrays"><a href="https://codeforces.com/contest/1288/problem/C">Two Arrays</a></h3><p>你需要使用1~m以内的数，构造出2个序列</p><p>第一个序列是一个不下降子序列，长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></p><p>第二个序列是一个不上升子序列，长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></p><p>要求第一个序列最后一个数&lt;=第二个序列第一个数</p><p>请问同时构造出符合条件的长度为m的两个序列的方案数</p><p>思路，该问题我们可以转换为用1~m以内的数，构造出长度为2n的不下降子序列的方案数，因为我们可以把第一个序列翻转，拼到第一个。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>状态：</mtext><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mtext>长度为</mtext><mi>i</mi><mtext>，第一位为</mtext><mi>j</mi><mtext>的非下降子序列</mtext><mo stretchy="false">(</mo><mtext>不严格升序</mtext><mo stretchy="false">)</mo><mtext>方案数</mtext></mrow><annotation encoding="application/x-tex">状态：//长度为i，第一位为j的非下降子序列(不严格升序)方案数</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">状态：</span><span class="mord">//</span><span class="mord cjk_fallback">长度为</span><span class="mord mathnormal">i</span><span class="mord cjk_fallback">，第一位为</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord cjk_fallback">的非下降子序列</span><span class="mopen">(</span><span class="mord cjk_fallback">不严格升序</span><span class="mclose">)</span><span class="mord cjk_fallback">方案数</span></span></span></span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line">ll f[<span class="number">2010</span>][<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;<span class="comment">//长度为i，第一位为j的非下降子序列(不严格升序)方案数</span></span><br><span class="line"><span class="comment">//包括长度为i-1，第一位为j ，还有个是长度为i，第一位是j+1 </span></span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">m*=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">f[<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=n;j&gt;=<span class="number">1</span>;j--)&#123;</span><br><span class="line">f[i][j]=(f[i][j+<span class="number">1</span>]+f[i<span class="number">-1</span>][j])%mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) ans=(ans+f[m][i])%mod;</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Add-One"><a href="https://codeforces.com/contest/1513/problem/C">Add One</a></h3><p>给定你一个数，每次操作，你要把每一位的数变成原本的数+1</p><h2 id="状态机">状态机</h2><h3 id="大盗阿福"><a href="https://www.acwing.com/problem/content/1051/">大盗阿福</a></h3><p>阿福是一名经验丰富的大盗。趁着月黑风高，阿福打算今晚洗劫一条街上的店铺。<br>这条街上一共有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 家店铺，每家店中都有一些现金。<br>阿福事先调查得知，只有当他同时洗劫了两家相邻的店铺时，街上的报警系统才会启动，然后警察就会蜂拥而至。<br>作为一向谨慎作案的大盗，阿福不愿意冒着被警察追捕的风险行窃。<br>他想知道，在不惊动警察的情况下，他今晚最多可以得到多少现金？<br><strong>输入格式</strong><br>输入的第一行是一个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>，表示一共有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 组数据。<br>接下来的每组数据，第一行是一个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> ，表示一共有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 家店铺。<br>第二行是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个被空格分开的正整数，表示每一家店铺中的现金数量。<br>每家店铺中的现金数量均不超过1000。<br>输出格式<br>对于每组数据，输出一行。<br>该行包含一个整数，表示阿福在不惊动警察的情况下可以得到的现金数量。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>T</mi><mo>≤</mo><mn>50</mn></mrow><annotation encoding="application/x-tex">1 \le T \le 50</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">50</span></span></span></span>,<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 \le N \le 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span><br><strong>输入样例</strong>：<br>2<br>3<br>1 8 2<br>4<br>10 7 6 14</p><p><strong>输出样例</strong>：<br>8<br>24</p><p><strong>样例解释</strong><br>对于第一组样例，阿福选择第2家店铺行窃，获得的现金数量为8。<br>对于第二组样例，阿福选择第1和4家店铺行窃，获得的现金数量为10+14=24。</p><p>思路：</p><ol><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>表示已经打劫了前<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>家店铺，且不打劫当前店铺的最大机制， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dp[i][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span>表示已经打劫了前<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>家店铺，且已经连续打劫1家店铺的最大价值。</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line">ll dp[<span class="number">100010</span>][<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> zu;</span><br><span class="line">cin&gt;&gt;zu;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> _=<span class="number">0</span>;_&lt;zu;_++)&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="built_in">sizeof</span>(dp));</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line">dp[i][<span class="number">0</span>]=<span class="built_in">max</span>(dp[i<span class="number">-1</span>][<span class="number">1</span>],dp[i<span class="number">-1</span>][<span class="number">0</span>]);</span><br><span class="line">dp[i][<span class="number">1</span>]=dp[i<span class="number">-1</span>][<span class="number">0</span>]+x;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;<span class="built_in">max</span>(dp[n][<span class="number">0</span>],dp[n][<span class="number">1</span>])&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="股票买卖-II"><a href="https://www.acwing.com/problem/content/1057/">股票买卖 II</a></h3><p>给定一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 的数组，数组中的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个数字表示一个给定股票在第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 天的价格。<br>设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。<br>注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。<br><strong>输入格式</strong><br>第一行包含整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>，表示数组长度。<br>第二行包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个不大于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>10000</mn></mrow><annotation encoding="application/x-tex">10000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">10000</span></span></span></span> 的正整数，表示完整的数组。<br><strong>输出格式</strong><br>输出一个整数，表示最大利润。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 \le N \le 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span><br><strong>输入样例</strong>1：<br>6<br>7 1 5 3 6 4</p><p><strong>输出样例</strong>1：<br>7</p><p><strong>输入样例</strong>2：<br>5<br>1 2 3 4 5</p><p><strong>输出样例</strong>2：<br>4</p><p>输入样例3：<br>5<br>7 6 4 3 1</p><p><strong>输出样例</strong>3：<br>0</p><p><strong>样例解释</strong><br>样例1：在第 2 天（股票价格 = 1）的时候买入，在第 3 天（股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。随后，在第 4 天（股票价格 = 3）的时候买入，在第 5 天（股票价格 = 6）的时候卖出, 这笔交易所能获得利润 = 6-3 = 3 。共得利润 4+3 = 7。<br>样例2：在第 1 天（股票价格 = 1）的时候买入，在第 5 天 （股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。注意你不能在第 1 天和第 2 天接连购买股票，之后再将它们卖出。因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。<br>样例3：在这种情况下, 不进行任何交易, 所以最大利润为 0。</p><p>思路：</p><ol><li>我们设置状态<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[i][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>为当前未持有股票的最大价值，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[i][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span>为当前未持有股票的最大价值</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[i][0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span> 可以从上一次不买转移过来，也可以从上一次已经买过了，这次卖出转移过来，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[i][1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span>可以从上一次买过了转移而来，也可以从上一次没买，这次买转移过来</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 股票买卖<span class="number">2</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> zu;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> (<span class="type">int</span>) (<span class="number">1e5</span> + <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n, m, k;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> f[][]=<span class="keyword">new</span> <span class="title class_">int</span>[N][<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (zu = <span class="number">1</span>; zu &lt;= t; zu++) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) a[i]=in.nextInt();</span><br><span class="line">        f[<span class="number">0</span>][<span class="number">1</span>]= -<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            f[i][<span class="number">0</span>]=Math.max(f[i-<span class="number">1</span>][<span class="number">0</span>],f[i-<span class="number">1</span>][<span class="number">1</span>]+a[i]);</span><br><span class="line">            f[i][<span class="number">1</span>]=Math.max(f[i-<span class="number">1</span>][<span class="number">1</span>],f[i-<span class="number">1</span>][<span class="number">0</span>]-a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        out.println(Math.max(f[n][<span class="number">0</span>],f[n][<span class="number">1</span>]));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span> &#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line"></span><br><span class="line">        FastReader() &#123;</span><br><span class="line">            br = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span> (st == <span class="literal">null</span> || !st.hasMoreElements()) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str = br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st = <span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="股票买卖-IV"><a href="https://www.acwing.com/problem/content/1059/">股票买卖 IV</a></h3><p>给定一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 的数组，数组中的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个数字表示一个给定股票在第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 天的价格。<br>设计一个算法来计算你所能获取的最大利润，你最多可以完成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 笔交易。<br>注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。一次买入卖出合为一笔交易。<br><strong>输入格式</strong><br>第一行包含整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>，表示数组的长度以及你可以完成的最大交易笔数。<br>第二行包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个不超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>10000</mn></mrow><annotation encoding="application/x-tex">10000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">10000</span></span></span></span> 的正整数，表示完整的数组。<br><strong>输出格式</strong><br>输出一个整数，表示最大利润。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 \le N \le 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>,<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>k</mi><mo>≤</mo><mn>100</mn></mrow><annotation encoding="application/x-tex">1 \le k \le 100</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">100</span></span></span></span><br><strong>输入样例</strong>1：<br>3 2<br>2 4 1</p><p><strong>输出样例</strong>1：<br>2</p><p><strong>输入样例</strong>2：<br>6 2<br>3 2 6 5 0 3</p><p><strong>输出样例</strong>2：<br>7</p><p><strong>样例解释</strong><br>样例1：在第 1 天 (股票价格 = 2) 的时候买入，在第 2 天 (股票价格 = 4) 的时候卖出，这笔交易所能获得利润 = 4-2 = 2 。<br>样例2：在第 2 天 (股票价格 = 2) 的时候买入，在第 3 天 (股票价格 = 6) 的时候卖出, 这笔交易所能获得利润 = 6-2 = 4 。随后，在第 5 天 (股票价格 = 0) 的时候买入，在第 6 天 (股票价格 = 3) 的时候卖出, 这笔交易所能获得利润 = 3-0 = 3 。共计利润 4+3 = 7.</p><p>思路：</p><ol><li>我们设计 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[i][j][k]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span></span></span></span> 状态为进行到第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>天，当前是否持股，已经完成了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>次购买 购买的状态。</li><li>转移方程为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo>+</mo><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo>−</mo><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f[i][0][k]=max(f[i-1][0][k],f[i-1][1][k-1]+w[i]),f[i][1][k]=max(f[i-1][1][k],f[i-1][0][k]-w[i])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">])</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">])</span></span></span></span></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> zu;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> (<span class="type">int</span>) (<span class="number">1e5</span> + <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> a[] = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> f[][][]=<span class="keyword">new</span> <span class="title class_">int</span>[N][<span class="number">2</span>][<span class="number">105</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n, m, k;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (zu = <span class="number">1</span>; zu &lt;= t; zu++) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span> &#123;</span><br><span class="line">        n=in.nextInt();k=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            a[i]=in.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">2</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k1=<span class="number">0</span>;k1&lt;=k;k1++)&#123;</span><br><span class="line">                    f[i][j][k1]=-<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        f[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=k;j&gt;=<span class="number">1</span>;j--)&#123;</span><br><span class="line">                f[i][<span class="number">0</span>][j]=Math.max(f[i-<span class="number">1</span>][<span class="number">0</span>][j],f[i-<span class="number">1</span>][<span class="number">1</span>][j-<span class="number">1</span>]+a[i]);</span><br><span class="line">                f[i][<span class="number">1</span>][j-<span class="number">1</span>]=Math.max(f[i-<span class="number">1</span>][<span class="number">1</span>][j-<span class="number">1</span>],f[i-<span class="number">1</span>][<span class="number">0</span>][j-<span class="number">1</span>]-a[i]);</span><br><span class="line">                ans=Math.max(ans,f[i][<span class="number">0</span>][j]);</span><br><span class="line">                ans=Math.max(ans,f[i][<span class="number">1</span>][j-<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            f[i][<span class="number">0</span>][<span class="number">0</span>]=f[i-<span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        out.println(ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span> &#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line"></span><br><span class="line">        FastReader() &#123;</span><br><span class="line">            br = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span> (st == <span class="literal">null</span> || !st.hasMoreElements()) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str = br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st = <span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="股票买卖V"><a href="https://www.acwing.com/problem/content/1060/">股票买卖V</a></h3><p>给定一个长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 的数组，数组中的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个数字表示一个给定股票在第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 天的价格。<br>设计一个算法计算出最大利润。在满足以下约束条件下，你可以尽可能地完成更多的交易（多次买卖一支股票）:</p><p>你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。<br>卖出股票后，你无法在第二天买入股票 (即冷冻期为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 天)。</p><p><strong>输入格式</strong><br>第一行包含整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>，表示数组长度。<br>第二行包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个不超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>10000</mn></mrow><annotation encoding="application/x-tex">10000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">10000</span></span></span></span> 的正整数，表示完整的数组。<br><strong>输出格式</strong><br>输出一个整数，表示最大利润。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 \le N \le 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span><br><strong>输入样例</strong>：<br>5<br>1 2 3 0 2</p><p><strong>输出样例</strong>：<br>3</p><p><strong>样例解释</strong><br>对应的交易状态为: [买入, 卖出, 冷冻期, 买入, 卖出]，第一笔交易可得利润 2-1 = 1，第二笔交易可得利润 2-0 = 2，共得利润 1+2 = 3。</p><p>思路:</p><ol><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mtext>表示第</mtext><mi>i</mi><mtext>天空仓状态，</mtext><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mtext>表示第</mtext><mi>i</mi><mtext>天持股状态，</mtext><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mtext>表示第</mtext><mi>i</mi><mtext>天不可购买状态</mtext></mrow><annotation encoding="application/x-tex">f[i][0] 表示第i天空仓状态，f[i][1]表示第i天持股状态，f[i][2] 表示第i天不可购买状态</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mord cjk_fallback">表示第</span><span class="mord mathnormal">i</span><span class="mord cjk_fallback">天空仓状态，</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mord cjk_fallback">表示第</span><span class="mord mathnormal">i</span><span class="mord cjk_fallback">天持股状态，</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mord cjk_fallback">表示第</span><span class="mord mathnormal">i</span><span class="mord cjk_fallback">天不可购买状态</span></span></span></span></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 股票买卖<span class="number">5</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> zu;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> (<span class="type">int</span>) (<span class="number">1e5</span> + <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> f[][] = <span class="keyword">new</span> <span class="title class_">int</span>[N][<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n, m, k;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (zu = <span class="number">1</span>; zu &lt;= t; zu++) solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++)&#123;</span><br><span class="line">                f[i][j]=-<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="type">int</span> x=in.nextInt();</span><br><span class="line">            f[i][<span class="number">0</span>]=Math.max(f[i-<span class="number">1</span>][<span class="number">0</span>],f[i-<span class="number">1</span>][<span class="number">2</span>]);</span><br><span class="line">            f[i][<span class="number">1</span>]=Math.max(f[i-<span class="number">1</span>][<span class="number">1</span>],f[i-<span class="number">1</span>][<span class="number">0</span>]-x);</span><br><span class="line">            f[i][<span class="number">2</span>]=f[i-<span class="number">1</span>][<span class="number">1</span>]+x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        ans=Math.max(Math.max(f[n][<span class="number">0</span>],Math.max(f[n][<span class="number">1</span>],f[n][<span class="number">2</span>])),ans);</span><br><span class="line">        out.println(ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span> &#123;</span><br><span class="line">        <span class="keyword">static</span> BufferedReader br;</span><br><span class="line">        <span class="keyword">static</span> StringTokenizer st;</span><br><span class="line"></span><br><span class="line">        FastReader() &#123;</span><br><span class="line">            br = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span> (st == <span class="literal">null</span> || !st.hasMoreElements()) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    str = br.readLine();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                &#125;</span><br><span class="line">                st = <span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(str);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="树形DP">树形DP</h2><h3 id="树的重心"><a href="https://www.acwing.com/problem/content/1075/">树的重心</a></h3><p>给定一棵树，树中包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个结点（编号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>~<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>）和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 条无向边，每条边都有一个权值。</p><p>请你在树中找到一个点，使得该点到树中其他结点的最远距离最近。<br><strong>输入格式</strong><br>第一行包含整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>。<br>接下来 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 行，每行包含三个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>b</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i,b_i,c_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，表示点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">b_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 之间存在一条权值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的边。<br><strong>输出格式</strong><br>输出一个整数，表示所求点到树中其他结点的最远距离。<br><strong>数据范围</strong><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>10000</mn></mrow><annotation encoding="application/x-tex">1 \le n \le 10000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">10000</span></span></span></span>,<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>b</mi><mi>i</mi></msub><mo>≤</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">1 \le a_i,b_i \le n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>,<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><msub><mi>c</mi><mi>i</mi></msub><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 \le c_i \le 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.786em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span><br><strong>输入样例</strong>：<br>5<br>2 1 1<br>3 2 1<br>4 3 1<br>5 1 1</p><p><strong>输出样例</strong>：<br>2</p><p>思路：</p><ol><li><p>我们定义如下数组，含义分别为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">d1[i]:以i为根节点向下走的最长路径。</span><br><span class="line">d2[i]:以i为根节点向下走的次长路径，且不与最长路径走相同的最近子节点。</span><br><span class="line">p1[i]:记录以i为根节点最长路径走的最近子节点</span><br><span class="line">p2[i]:记录以i为根节点次长路径走的最近子节点</span><br><span class="line">up[i]:记录以i为根节点的最近父结点不走自身走的最长路径。</span><br></pre></td></tr></table></figure></li><li><p>接下来我们做二次DFS，分别更新向下走和向上走</p></li></ol>]]></content>
    
    
    <summary type="html">闫学灿蓝桥杯每日一题</summary>
    
    
    
    <category term="ACM" scheme="http://1804040636.github.io/categories/ACM/"/>
    
    <category term="蓝桥杯" scheme="http://1804040636.github.io/categories/ACM/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
    <category term="Java" scheme="http://1804040636.github.io/tags/Java/"/>
    
    <category term="ACM" scheme="http://1804040636.github.io/tags/ACM/"/>
    
    <category term="蓝桥杯" scheme="http://1804040636.github.io/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>操作系统(二):进程管理</title>
    <link href="http://1804040636.github.io/2023/02/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%BA%8C%E7%AB%A0/"/>
    <id>http://1804040636.github.io/2023/02/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%BA%8C%E7%AB%A0/</id>
    <published>2023-02-02T02:31:50.000Z</published>
    <updated>2023-03-04T19:12:34.664Z</updated>
    
    <content type="html"><![CDATA[<h1>进程管理</h1><h2 id="进程的概念、组成、特征">进程的概念、组成、特征</h2><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E7%89%B9%E5%BE%81%E6%A6%82%E5%BF%B5.png" alt=""></p><h3 id="进程的概念">进程的概念</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/qq%E8%BF%9B%E7%A8%8B.jpg" alt=""></p><p>当我打开多个qq的时候，就会出现多个qq进程</p><p>程序:是<font color=red>静态的</font>，就是存放在磁盘里的可执行文件，就是一系列的指令集合</p><p>进程：是<font color=red>动态的</font>，是程序的一次执行过程，同一个程序会执行多个进程</p><p>问题：就比如我们打开多个qq，难道进程都只叫qq吗？</p><h3 id="进程的组成——PCB">进程的组成——PCB</h3><p>当进程被创建时，操作系统会为该进程分配一个<font color=red>唯一的、不重复的</font>身份证号——<font color=red>PID</font>(process ID,进程ID)</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8Bpid.png" alt=""></p><p>每个进程，在背后都会有各自的PID，都是不会重复的</p><p>操作系统要记录PID、进程所属用户ID（UID）,可以让操作系统区分进程</p><p>还要记录给进程分配了哪些资源（如：分配了多少内存、正在使用哪些I/O设备，正在使用哪些文件)，可以用于实现操作系统对资源的管理</p><p>还要记录进程的运行情况（如：CPU使用时间、磁盘使用情况、网络流量使用情况等），可以实现操作系统对进程的卡组、调度</p><p>这些信息都被记录在一个数据结构<font color=red>PCB</font>(process Control Block)中，即<font color=red>进程控制块</font></p><p>操作系统需要对各个并发的进程进行管理，<font color=red>但凡管理时所需要的信息，都会被放在PCB中</font></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8Bpcb.png" alt=""></p><p><font color=red>PCB是给操作系统使用的，而程序段和数据段是给进程自己用的</font></p><p>程序运行的过程</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%BD%95%E8%BF%90%E8%A1%8C.png" alt=""></p><p>程序在写完，经过编译链接，就会生成可执行文件(.exe)，平时存在硬盘中，可执行文件里就是指令序列，程序在运行前需要把程序放入内存，一个程序在运行开始前，需要创建对应的进程，同时也要创建相应的PCB</p><p>将程序段读入内存，cpu从内存中取出指令</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%BD%95%E8%BF%90%E8%A1%8C2.png" alt=""></p><p>一个<font color=red>进程实体（进程映像)</font>由<font color=red>PCB、程序段、数据段</font>组成</p><p><font color=red>进程</font>是<font color=red>动态的</font>，<font color=red>进程实体（进程映像)</font>是<font color=red>静态的</font></p><p>我们可以将进程实体理解为进程在动态执行过程中某一时刻运行时的快照，进程实体可以反映进程在某一个时刻的状态</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E7%9A%84%E7%BB%84%E6%88%902.png" alt=""></p><p><font color=red>程序段、数据段、PCB三部分</font>组成了<font color=red>进程实体（进程映像）</font>。引入进程实体的概念后，可以把进程定义为：</p><p><font color=red>进程</font> 是进程实体的<font color=red>运行过程</font>，是系统进行<font color=red>资源分配</font>和<font color=red>调度</font>的一个单位</p><p>PCB是进程存在的唯一标志</p><p>进程调度是指：操作系统决定让哪个进程上CPU运行</p><p>同时挂三个QQ号，会对应三个qq进程，它们的PCB不相同（分配不同的数据结构存储）,数据段不同（三个QQ账号信息不相同），但程序段相同（均是运行qq这个程序）</p><h3 id="进程的特征">进程的特征</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E7%9A%84%E7%89%B9%E5%BE%81.png" alt=""></p><p>异步会导致并发程序结果不确定，具体会在进程同步这一节学习</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E7%AC%AC%E4%B8%80%E8%8A%82%E5%B0%8F%E7%BB%93.png" alt=""></p><p>在线程章节中，我们会知道，接收调度的基本单位是线程，但是独立获得资源的基本单位是进程</p><h2 id="进程的状态与转换、进程的组织">进程的状态与转换、进程的组织</h2><h3 id="进程的状态与转换">进程的状态与转换</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E7%9A%84%E7%8A%B6%E6%80%81%E4%B8%8E%E8%BD%AC%E6%8D%A2.png" alt=""></p><h4 id="进程的状态——创建态、就绪态">进程的状态——创建态、就绪态</h4><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%88%9B%E5%BB%BA%E5%B0%B1%E7%BB%AA%E6%80%81.png" alt=""></p><h4 id="进程的状态——运行态">进程的状态——运行态</h4><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%B0%B1%E7%BB%AA%E6%80%81.png" alt=""></p><p>如果一个进程此时在CPU上运行，那么这个进程就会处于&quot;<font color=red>运行态</font>&quot;</p><p>CPU会执行该进程对应的程序（执行指令序列）</p><p>假设：有一个进程2运行在cpu中，发出了一条中断指令，目的是为了向操作系统申请打印机的资源，但是这时候打印机资源被别的进程占用了，进程2就没有事干，但也不能让 他一直占用cpu资源</p><h4 id="进程的状态——阻塞态">进程的状态——阻塞态</h4><p>在进程运行的过程中，可能会<font color=red>请求等待某个事件的发生</font>（如等待某种系统资源的分配，或者等待其他进程的响应）。</p><p>在这个事件发生之前，进程无法继续往下执行，此时操作系统会让这个进程下CPU，让他进入&quot;<font color=red>阻塞态</font>&quot;</p><p>当CPU空闲时，又会选择另一个就绪态的进程上CPU</p><p>当打印机空闲时，就会分配给进程2，当操作系统把打印机分配给进程2时（进程2是经历过等待的状态），于是操作系统会让进程2从阻塞态回到就绪态</p><h4 id="进程的状态——终止态">进程的状态——终止态</h4><p>一个进程可以执行exit系统调用，请求操作系统终止该进程</p><p>此时该进程会进入&quot;<font color=red>终止态</font>&quot;，操作系统会让该进程下CPU，并收回内存空间等资源，最后还要收回该进程的PCB</p><p>终止进程的工作完成后，进程就彻底消失了</p><h4 id="小结">小结</h4><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E7%8A%B6%E6%80%81%E8%BD%AC%E6%8D%A2.png" alt=""></p><p><font color=red>注意：不能由阻塞态直接转换为运行态，也不能由就绪态直接转换为阻塞态</font>（因为进入阻塞态是进程主动请求的，必然需要进程在运行时才能发出这种请求）</p><p>进程运行结束、或运行中遇到不可修复的错误，就会进入终止态</p><p>有的时候，运行态可以直接转换为就绪态，例如时间片用完了，或者处理机被抢占</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E7%8A%B6%E6%80%81%E5%B0%8F%E7%BB%93.png" alt=""></p><h3 id="进程的组织">进程的组织</h3><h4 id="链接方式">链接方式</h4><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E7%9A%84%E7%BB%84%E7%BB%87.png" alt=""></p><p>有时候根据阻塞原因不同分为多个阻塞队列</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97.png" alt=""></p><h4 id="索引方式">索引方式</h4><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%B4%A2%E5%BC%95%E6%96%B9%E5%BC%8F.png" alt=""></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%BB%84%E7%BB%87%E6%96%B9%E5%BC%8F.png" alt=""></p><h3 id="总结">总结</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E7%8A%B6%E6%80%81%E8%BD%AC%E6%8D%A2%E4%B8%8E%E7%BB%84%E7%BB%87%E6%96%B9%E5%BC%8F%E5%B0%8F%E7%BB%93.png" alt=""></p><p>绿色部分考研常考</p><h2 id="进程控制">进程控制</h2><p>进程控制的主要功能是对系统中所有的进程实施有效的管理，它具有创建新进程、撤销已有进程、实现进程状态转换等功能</p><p>简化：进程控制就是要实现进程状态转换</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%9F%A5%E8%AF%86%E4%B8%80%E8%A7%88.png" alt=""></p><h3 id="如何实现进程控制">如何实现进程控制</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%8E%9F%E8%AF%AD.png" alt=""></p><p>假设此时进程2(PCB2)等待的资源已经分配完成，则操作系统中，负责进程控制的内核程序至少需要做这两件事。</p><ol><li>将PCB2的state设为1</li><li>将PCB2从阻塞队列放到就绪队列</li></ol><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E9%98%BB%E5%A1%9E%E6%80%81%E5%8F%98%E4%B8%BA%E5%B0%B1%E7%BB%AA%E6%80%81.png" alt=""></p><p>此时PCB2将state设置为1，还没来得及送进就绪列队，此时来了个中断信号，导致CPU先处理中断信号了。</p><p>而PCB2进程的状态是就绪态，却身处阻塞队列，导致PCB2表示的状态，与队列对不上</p><p>如果没有原语这种一气呵成的操作，就有可能导致操作系统中的某些关键数据结构信息不统一的情况，这么会影响操作系统进行别的管理工作</p><h3 id="如何实现原语的原子性">如何实现原语的原子性</h3><p><font color=red>原语</font>的执行具有原子性，即执行过程只能一气呵成，期间<font color=red>不允许被中断</font></p><p>可以用<font color=red>关中断指令和开中断指令</font>两个<font color=red>特权指令</font>实现<font color=red>原子性</font></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%B8%AD%E6%96%AD%E4%BF%A1%E5%8F%B7.png" alt=""></p><p>当CPU执行<font color=red>关中断指令后</font>，便不会在指令结束后检查是否有中断指令，直到执行<font color=red>开中断指令</font>，CPU才会转向执行中断程序</p><p>这样，关中断、开中断之间的这些指令序列就是不可被中断的，这就实现了&quot;原子性&quot;</p><p>假设应用程序拥有这两条特权指令，那么在程序开始时执行关中断指令，结束时执行开中断指令，中间cpu的中断信号是无法干预其的，便会一直霸占cpu</p><h3 id="进程控制相关原语">进程控制相关原语</h3><h4 id="创建原语">创建原语</h4><p>创建原语：操作系统创建一个进程时使用的原语</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6%E7%9B%B8%E5%85%B3%E5%8E%9F%E8%AF%AD.png" alt=""></p><p>作业：（外存中还没有开始运行的程序）</p><h4 id="撤销原语">撤销原语</h4><p>终止一个进程使用的</p><p>撤销原语可以让一个进程的状态变成终止态，然后消失</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%92%A4%E9%94%80%E5%8E%9F%E8%AF%AD.png" alt=""></p><p>父进程与子进程</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%88%B6%E5%AD%90%E8%BF%9B%E7%A8%8B.png" alt=""></p><p>launchd就是所有进程的父进程</p><p>父进程可以按照子进程的需要，把自己的资源分配给子进程，子进程终止后，就会把资源还给父进程</p><p>进程关系是一个树形结构，进程可以创建子进程，子进程还可以创建子进程</p><p>引起进程终止的事件：</p><p>​正常结束：进程自己请求终止(exit系统调用)</p><p>​异常结束：非法使用特权指令，整数除0，然后被操作系统强行终止</p><p>​外界干预：用户可以自己选择杀掉进程</p><h4 id="唤醒原语与阻塞原语">唤醒原语与阻塞原语</h4><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%94%A4%E9%86%92%E4%B8%8E%E9%98%BB%E5%A1%9E.png" alt=""></p><h4 id="切换原语">切换原语</h4><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%88%87%E6%8D%A2%E5%8E%9F%E8%AF%AD.png" alt=""></p><p>进程运行环境（进程上下文context)信息：</p><p>当一个进程在执行时，会将一系列指令存入寄存器中，当执行完某一步指令后，另一个进程来抢占CPU，也会用到寄存器，会对之前寄存器的内容进行覆盖</p><p>所以我们在进程切换时，在PCB中保存这个进程的运行环境（保存一些必要的寄存器信息），然后才能切换成别的进程</p><p>当该程序回到CPU中，操作系统就可以将其的数据恢复，使得程序继续执行</p><h3 id="小结-2">小结</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%8E%9F%E8%AF%AD%E6%80%BB%E7%BB%93.png" alt=""></p><p>无论哪个进程控制原语，无非做的便是这三件事</p><ol><li>更新PCB中的信息</li><li>将PCB插入合适的队列</li><li>分配回收资源</li></ol><h2 id="进程通信IPC">进程通信IPC</h2><p>进程间通信（Inter-process Communication，<font color=red>IPC</font>)是指两个进程之间产生数据交互</p><p>比如把相册里的一张照片分享至QQ，原本照片是在相册里，分享至qq就发生了进程交互</p><h3 id="为什么进程通信需要操作系统的支持">为什么进程通信需要操作系统的支持</h3><p>进程是分配系统资源的单位（包括内存地址空间），<font color=red>各进程</font>拥有的<font color=red>内存地址空间相互独立</font></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E4%B9%8B%E9%97%B4%E7%9B%B8%E4%BA%92%E7%8B%AC%E7%AB%8B.png" alt=""></p><p>如果一个进程可以随意访问其他进程的内存地址空间，那么该进程就可以随意修改或读取其他进程的数据</p><p>为了保证安全,<font color=red>一个进程不能直接访问另一个进程的地址空间</font></p><p>如果两个进程需要进行通信，但他们无法直接进行通信，所以需要借助操作系统的支持</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F.png" alt=""></p><h3 id="共享存储">共享存储</h3><p>各个进程只能访问自己的空间，如果操作系统允许共享存储的话，那么一个进程可以申请一个共享存储区，这个存储区可以被其他进程所访问，一个进程可以把数据写入共享存储区，另一个进程可以去读取共享存储区的数据，从而实现数据共享</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%85%B1%E4%BA%AB%E5%AD%98%E5%82%A8.png" alt=""></p><p>假设多个进程同时往共享存储区写入数据，可能会导致写入冲突</p><p>所以 为了避免出错，各个进程对共享空间的<font color=red>访问</font>应该是<font color=red>互斥的</font></p><p>各个进程可以使用操作系统内核提供的同步互斥工具(如P、V操作)</p><p><font color=red>基于存储区的共享</font>：操作系统在内存中划出一块共享存储区，数据的形式、存放位置都由通信的进程控制，而不是操作系统。这种共享方式的速度很快，是一种<font color=red>高级通信方式</font>灵活性高，速度快</p><p><font color=red>基于数据结构的共享：</font>比如共享空间里只有1个长度为10的数组。这种共享方式速度慢，限制多，是一种<font color=red>低级通信方式</font>灵活性差，速度慢</p><p>​我们可以把该数组看做一个特殊的全局变量，（特殊：平常写代码的全局变量是局限于一个进程的，该全局变量可以被所有进程共享，所以称作特殊的全局变量）。</p><h3 id="消息传递">消息传递</h3><p>进程间的数据交换以<font color=red>格式化的消息（Message）</font>为单位。进程通过操作系统提供的&quot;发送消息/接收消息&quot;两个<font color=red>原语</font>进行数据交换</p><p>格式化消息：</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%B6%88%E6%81%AF.png" alt=""></p><p>消息体便是具体的数据</p><p>直接通信方式：消息发送进程需要指明接收进程的ID</p><p>间接通信方式：通过 信箱 间接地通信。因此又称作信箱通信方式</p><h4 id="直接通信方式">直接通信方式</h4><p>操作系统内核负责管理PCB，每个进程PCB中都有一个消息队列</p><p>若进程P需要给进程Q发送消息：</p><ol><li>进程P首先需要完善消息msg（消息头，消息尾）</li><li>进程P使用发送原语，send(Q,msg)</li><li>该消息会被操作系统内核收到（被复制到了操作系统内核），操作系统内核会将该消息挂到进程Q的消息队列</li><li>进程Q运行，使用接收原语,receive(P,&amp;msg),然后操作系统内核会检查进程Q的消息队列，找到P发过来的消息，然后操作系统把该消息复制到进程Q的地址空间</li></ol><p>直接通信方式：点名道姓的消息传递</p><h4 id="间接通信方式">间接通信方式</h4><p>若进程P需要给进程Q发送消息：</p><ol><li>进程P可以通过系统调用，向操作系统申请一个邮箱在操作系统内核空间，可以同时申请多个邮箱，这里假设申请了信箱A，信箱B</li><li>进程P在自己那完善消息Msg，然后使用发送原语，指明自己需要发送的是哪个信箱（并未指明自己需要发送给哪个进程）</li><li>进程Q使用接收原语，可以指明从哪个信箱接收消息</li></ol><p>可以多个进程往同一个信箱send消息，也可以多个进程从同一个信箱中receive消息</p><p>间接通信方式，以 信箱作为中间实体进行消息传递</p><h3 id="管道通信方式">管道通信方式</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AE%A1%E9%81%93%E9%80%9A%E4%BF%A1.png" alt=""></p><p>管道通信只能是单向，一端读数据，一端写数据</p><p>管道是一个特殊的共享文件，又名pipe文件，其实就是在内存中开辟一个固定大小的内存缓冲区</p><p>进程P和进程Q管道通信的方式：</p><p>某一个进程通过系统调用申请管道文件，操作系统新建一个管道文件（开了个固定大小的内存缓冲区，具有先进先出的特性），两个进程通过该管道做通信</p><p>​该方式与第一种共享存储的方式区别：</p><p>​共享存储方式，你想怎么写数据，从哪个位置写数据，从哪个位置读数据，都没事，随便玩就行；</p><p>​管道通信方式，将管道看做队列，写数据必须从队尾写，读数据必须从队头读，是一个数据流的形式，前面有空位就只能写前面的位置；更准确的来说，我们把管道缓冲区称作循环队列。</p><ol><li><p>管道只能采用<font color=red>半双工通信</font>，某一个时间段内只能实现单向的传输。若要实现<font color=red>双向同时通信（全双工通信）</font>，<font color=red>需要设置两个管道</font></p></li><li><p>各个进程<font color=red>互斥</font>地访问管道（由操作系统实现）</p></li><li><p>当管道写满时，写进程将会阻塞，直到读进程将管道中数据取走，唤醒写进程</p></li><li><p>当管道读空时，读进程将会阻塞，直到写进程向管道中写入数据，唤醒读进程</p></li><li><p>管道中的数据一旦被读出，就彻底消失。因此，当多个进程读同一个管道时，可能会错乱（管道里的数据并没有指定谁来读）。对此，一般有两种解决方案：</p><p>①<font color=red>一个管道允许多个写进程，一个读进程</font>（2014年408真题高教社官方答案）</p><p>②<font color=red>一个管道允许有多个写进程，多个读进程，但系统会让各个读进程轮流从管道中读取数据</font>（Linux操作系统的方案）</p></li></ol><p>学习的时候以真题说法为准。但现实应用多个写进程，多个读进程没有错误。</p><p>下面是书上的错误</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%B9%A6%E4%B8%8A%E7%9A%84%E9%94%99%E8%AF%AF.png" alt=""></p><h2 id="线程的概念">线程的概念</h2><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%BA%BF%E7%A8%8B%E5%BC%80%E5%A7%8B.png" alt=""></p><p>在没有进程之前，系统中各个程序只能串行</p><p>有了进程后，我们就可以同时听音乐和刷qq</p><p>我们用qq可以做到，聊天，视频，打电话，传文件</p><h3 id="什么是线程，为什么要引入线程">什么是线程，为什么要引入线程</h3><p>传统的进程是程序执行流的最小单位</p><p>有的进程是要同时做很多事情的，而传统的进程只能串行地执行一系列程序。为此，引入了线程，来增加并发度</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B.png" alt=""></p><p>原本CPU是对进程一个个处理，增加线程后，CPU对线程一个个处理，就比如把打电话放到一个线程，发文件放到一个线程</p><p>可以把线程理解为轻量级进程</p><p><font color=red>线程</font>是一个<font color=red>基本的CPU执行单元</font>也是<font color=red>程序执行流的最小单位</font></p><p>引入线程后，不仅是进程之间可以并发，进程内的<font color=red>各线程之间</font>也可以并发，从而进一步<font color=red>提升了系统的并发度</font>，使得一个进程内也可以并发处理各种任务（如QQ，视频，文字聊天）</p><p>引入线程后，<font color=red>进程</font>只作为<font color=red>除CPU之外的系统资源的分配单元</font>（如打印机、内存地址空间等都是分配给进程的）。</p><p>​就是说计算机内的各种资源是分配给进程，而不是线程</p><h3 id="引入线程机制的变化">引入线程机制的变化</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%BC%95%E5%85%A5%E7%BA%BF%E7%A8%8B%E5%90%8E%E7%9A%84%E5%8F%98%E5%8C%96.png" alt=""></p><p>类比：</p><p>去图书馆看书。</p><p>切换进程运行环境：有一个不认识的人要用桌子，你需要把你的书（你的运行环境）收走，他需要把它的运行环境（书）放到桌子上</p><p>同一个进程内的线程切换：你的好朋友要用这个桌子，你就可以不收书</p><h3 id="线程的属性">线程的属性</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%B1%9E%E6%80%A7.png" alt=""></p><h2 id="线程的实现方式与多线程模型">线程的实现方式与多线程模型</h2><h3 id="线程实现方式">线程实现方式</h3><h4 id="用户级线程">用户级线程</h4><p>用户级线程（User-Level Thread，ULT）历史背景：早期的操作系统（如：unix）不支持线程，当时的线程是由线程库实现的</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%94%A8%E6%88%B7%E7%BA%BF%E7%A8%8B.png" alt=""></p><p>当时操作系统能使用的依旧是进程，程序员写的应用程序里面可以使用线程库并发的运行这些程序</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/qq%E5%A6%82%E4%BD%95%E8%BF%90%E8%A1%8C.png" alt=""></p><p>如果没有线程，qq想同时运行三个功能，开辟三个进程，不断处理三个事情</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/qq%E8%BF%9B%E7%A8%8B.png" alt=""></p><p>从代码角度来看，线程其实就是一段代码逻辑，上述三段代码逻辑上可以看做三个线程，while循环就是最弱智的线程库，线程库完成了对线程的管理工作</p><p>很多编程语言提供强大的线程库，可以实现线程的创建、销毁、调度的功能</p><ol><li><p>线程管理工作由谁完成</p><p>用户级线程由应用程序通过线程库实现，所有的线程管理工作都由应用程序负责（包括线程切换）</p></li><li><p>线程切换是否需要从用户态切换成内核态</p><p>用户级线程中，线程切换可以在用户态下即可完成，无需操作系统干预。</p></li><li><p>操作系统是否能意识到用户级线程存在</p><p>在用户看来，是有多个线程。但是在操作系统内核看来，并意识不到线程的存在。“用户级线程”就是“从用户视角看能看到的线程”</p></li><li><p>这种线程实现方式的优缺点</p><p>优点：用户级线程的切换在用户空间便可以完成，不需要切换到核心态，线程管理的系统开销小，效率高</p><p>缺点：当一个用户级线程被阻塞后，整个进程都会被阻塞，并发度不高。多个线程不可在多核处理机上并行运行</p><p>例如<img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/qq%E8%BF%9B%E7%A8%8B.png" alt=""></p></li></ol><p>在上图中，i=0时处理视频聊天的代码，在申请摄像头时，摄像头资源被占用，该进程阻塞，就导致这个while循环阻塞，也就是进程阻塞了</p><p>在用户级线程下，进程依旧是CPU调度的基本单位，线程依旧不能并行运行</p><h4 id="内核级线程">内核级线程</h4><p>内核级线程（Kernel-Level Thread，KLT，又称&quot;内核支持的线程&quot;）是由操作系统支持的线程</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%86%85%E6%A0%B8%E7%BA%A7%E7%BA%BF%E7%A8%8B.png" alt=""></p><p>现代操作系统大多都是支持内核级线程，如Windows，linux</p><ol><li><p>线程的管理工作有谁完成</p><p>内核级线程的管理工作由操作系统内核完成</p></li><li><p>线程的切换是否需要CPU变态</p><p>线程调度、切换等工作都由内核负责，因此内核级线程的切换必然需要在核心态下才能完成</p></li><li><p>操作系统是否能意识到内核级线程</p><p>操作系统会为每个内核级线程建立相应的TCB（ThreadControlBlock，线程控制块），通过TCB对线程进行管理。“内核级线程”就是“从操作系统内核视角看能看到的线程”</p></li><li><p>内核级线程实现有什么优缺点</p><p>优点：当一个线程被阻塞后，别的线程还可以继续执行，并发能力强。多线程可在多核处理机上并行执行。</p><p>缺点：一个用户进程会占用多个内核级线程，线程切换由操作系统内核完成，需要切换到核心态，因此线程管理的成本高，开销大</p></li></ol><h3 id="多线程模型">多线程模型</h3><h4 id="一对一">一对一</h4><p>一对一模型：一个用户级线程映射到一个内核级线程。每个用户进程有与用户级线程同数量的内核级线程。</p><p>优点：当一个线程被阻塞后，别的线程还可以继续执行，并发能力强。多线程可在多核处理机上并行执行。</p><p>缺点：一个用户进程会占用多个内核级线程，线程切换由操作系统内核完成，需要切换到核心态，因此线程管理的成本高，开销大。</p><h4 id="多对一">多对一</h4><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%A4%9A%E5%AF%B9%E4%B8%80%E6%A8%A1%E5%9E%8B.png" alt=""></p><p>多对一模型：多个用户级线程映射到一个内核级线程。且一个进程只被分配一个内核级线程。</p><p>优点：用户级线程的切换在用户空间即可完成，不需要切换到核心态，线程管理的系统开销小，效率高</p><p>缺点：当一个用户级线程被阻塞后，整个进程都会被阻塞，并发度不高。多个线程不可在多核处理机上并行运行</p><p><font color=red>重点，重中之重</font></p><p>操作系统只看得见内核级线程，因此只有<font color=red>内核级线程才是处理机分配的单位</font></p><h4 id="多对多">多对多</h4><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%A4%9A%E5%AF%B9%E5%A4%9A.png" alt=""></p><p>多对多模型：n个用户级线程映射到m个内核级线程(n<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\ge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≥</span></span></span></span>m)，每个用户进程对应着m个内核级线程</p><p>克服了多对一模型并发度不高的缺点(一个阻塞全体阻塞)，又克服了一对一模型中一个用户进程占用太多内核级线程，开销太大的缺点</p><p>理解：</p><p>用户级线程是&quot;代码逻辑&quot;的载体</p><p>内核级线程&quot;运行机会&quot;的载体</p><p><font color=red>内核级线程才是处理机分配的单位</font>。例如：多核CPU环境下，上面这个进程最多只能分配两个核</p><p>一段代码逻辑只有获得了运行机会，才能被cpu执行</p><p>内核级线程中可以运行任意一个有映射关系的用户级线程代码，只有两个内核级线程中正在运行的代码逻辑阻塞时，这个进程才会阻塞</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%BD%A2%E5%BC%8F%E5%B0%8F%E7%BB%93.png" alt=""></p><h2 id="调度的概念、层次">调度的概念、层次</h2><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%A4%84%E7%90%86%E6%9C%BA%E5%89%8D%E7%BD%AE%E5%A4%A7%E7%BA%B2.png" alt=""></p><h3 id="调度的基本概念">调度的基本概念</h3><p>例如银行：便是普通客户先到先服务，此时有个vip客户来了，银行就会对vip客户先服务</p><p>例如打水：每个人都有其打水的时间，经过商量后，让打水时间少的到队伍前面，打水时间长的在队伍后面，相同打水时间的先到先打，这样可以让队伍等待时间最短</p><p>所谓调度：当有一堆任务要处理，但由于资源有限，这些事情没法同时处理。这就需要确定<font color=red>某种规则</font>来<font color=red>决定</font>处理这些任务的<font color=red>顺序</font>，这就是调度研究的问题</p><h3 id="调度的三个层次">调度的三个层次</h3><h4 id="高级调度（作业调度）">高级调度（作业调度）</h4><p>作业：一个具体的任务</p><p>用户向操作系统提交一个作业 ≈ 用户让操作系统启动一个程序（来处理一个具体的任务）</p><p>操作系统启动一个程序，需要把程序从外存放进内存中，但内存是有限的，有时候无法将用户提交的作业无法全部放入内存</p><p><font color=red>高级调度（作业调度）</font>。按一定的原则从外存的作业后备队列中挑选一个作业调入内存，并创建进程。<font color=red>每个作业会调度一次，调出一次</font>，作业调入时会创建PCB，调出时才撤销PCB</p><h4 id="低级调度（进程调度-处理机调度）">低级调度（进程调度/处理机调度）</h4><p><font color=red>低级调度（进程调度/处理机调度）</font>按照某种策略从就绪队列中选取一个进程，将处理机分配给他</p><p>进程调度是操作系统中<font color=red>最基本的一种调度</font>，在一般的操作系统中都必须配置进程调度。进程调度的<font color=red>频率很高</font>，一般几十毫秒一次。</p><h4 id="中级调度（内存调度）">中级调度（内存调度）</h4><p>内存不够时，可将某些进程的数据调出外存。等内存空闲或者进程需要运行时再重新调入内存。</p><p>暂时调到外存等待的进程状态为<font color=red>挂起状态</font>。被挂起的进程PCB会被组织成<font color=red>挂起队列</font></p><p><font color=red>中级调度（内存调度）</font>——按照某种策略决定将哪个处于挂起状态的进程重新调入内存。</p><p>一个进程可能会被多次调出、调入内存，因此<font color=red>中级调度</font>发生的频率要比高级调度更高。</p><h3 id="挂起状态与七状态模型">挂起状态与七状态模型</h3><p>暂时调到外存等待的进程状态为<font color=red>挂起状态（挂起态，suspend）</font>挂起态又可以进一步细分为<font color=red>就绪挂起、阻塞挂起两种状态</font></p><p>五状态模型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>七状态模型</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%B8%83%E7%8A%B6%E6%80%81%E6%A8%A1%E5%9E%8B.png" alt=""></p><ol><li><p>当就绪队列中空间不足时，就会把一些队列中的进程挂起送到就绪挂起队列</p></li><li><p>当阻塞队列中空间不足时，就会把一些阻塞队列中的进程挂起送到阻塞队列</p></li><li><p>当阻塞挂起队列中的进程得到其分配的资源，就会送去就绪挂起队列</p></li><li><p>进程在运行态转向就绪态时，若就绪队列空间不足，就上就绪挂起队列</p></li><li><p>进程在创建态转向就绪态时，若就绪队列空间不足，就上就绪挂起队列</p></li></ol><p>有的操作系统会把就绪挂起、阻塞挂起分为两个挂起队列，甚至会根据阻塞原因不同再把阻塞挂起进程进一步细分为多个队列。</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%B8%89%E8%B0%83%E5%BA%A6%E7%9A%84%E5%8C%BA%E5%88%AB.png" alt=""></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%B0%83%E5%BA%A6%E7%9A%84%E5%B0%8F%E7%BB%93.png" alt=""></p><h2 id="进程调度的时机切换与过程调度方式">进程调度的时机切换与过程调度方式</h2><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%E7%9A%84%E6%97%B6%E6%9C%BA%E8%BF%87%E7%A8%8B%E4%B8%8E%E5%88%87%E6%8D%A2%E6%96%B9%E5%BC%8F.png" alt=""></p><h3 id="进程调度的时机">进程调度的时机</h3><p><font color=red>低级调度（进程调度/处理机调度）</font>按照某种算法从就绪队列中选取一个进程，将处理机分配给他</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%E7%9A%84%E6%97%B6%E6%9C%BA.png" alt=""></p><h4 id="临界资源">临界资源</h4><p>进程在<font color=red>操作系统内核程序临界区</font>中<font color=red>不能</font>进行调度与切换</p><p>（2012年联考真题）进程处于<font color=red>临界区</font>时不能进行处理机调度</p><p>临界资源：一个时间段内只允许一个进程使用的资源。各进程需要<font color=red>互斥</font>的访问临界资源</p><p>临界区：访问临界资源的那段代码</p><p><font color=red>内核程序临界区</font>一般是用来访问<font color=red>某种内核数据结构</font>的，比如进程的就绪队列（由各就绪进程的PCB组成）</p><p>背景1：</p><p>有一个进程需要访问就绪队列，那么其就要通过内核程序临界区访问就绪队列，并对其上锁</p><p>如果还没有推出临界区(还没解锁)，就进行进程调度，但是进程调度的相关的程序也需要访问就绪队列，但此时就绪队列被锁住了，因此又无法顺利进行进程调度</p><p>对于内核程序临界区访问的临界资源如果不尽快释放的话，极有可能影响到操作系统内核的其他管理工作。因此在访问内核程序临界区期间不能进行调度与切换，我们需要让进程尽快的执行完内核程序临界区的代码，完成对临界资源的访问</p><p>背景2：</p><p>有一个进程需要访问打印机，先给打印机上锁</p><p>在打印机完成之前，进程一直处于临界区内，临界资源不会解锁，但打印机又是慢速设备，此时如果一直不允许进程调度的的话就会导致CPU在一直空闲</p><p>普通临界区访问的临界资源不会直接影响操作系统内核的管理工作。因此在访问普通临界区时可以进行调度与切换。</p><h3 id="进程调度的方式">进程调度的方式</h3><p><font color=red>非剥夺调度方式</font>，又称非<font color=red>抢占方式</font>。只允许进程主动放弃处理机。在运行过程中即便有更紧迫的任务到达，当前进程依然会继续使用处理机，直到该进程终止或主动要求进入阻塞态。</p><p>实现简单，系统开销小但是无法及时处理紧急任务，适合于早期的批处理系统</p><p><font color=red>剥夺调度方式</font>，又称<font color=red>抢占方式</font>。当一个进程正在处理机上执行时，如果有一个更重要或更紧迫的进程需要使用处理机，则立即暂停正在执行的进程，将处理机分配给更重要紧迫的那个进程</p><p>可以优先处理更紧急的进程，也可实现让各进程按时间片轮流执行的功能（通过时钟中断）。适合于分时操作系统、实时操作系统</p><h3 id="进程的切换与过程">进程的切换与过程</h3><p>“狭义的进程调度”与“进程切换”的区别：</p><p><font color=red>狭义的进程调度</font>指的是从就绪队列中选中一个要运行的进程。（这个进程可以是刚刚被暂停执行的进程，也可能是另一个进程，<font color=red>后一种情况</font>就需要进程切换</p><p>进程切换是指一个进程让出处理机，由另一个进程占用处理机的过程。</p><p>广义的进程调度包含了选择一个进程和进程切换两个步骤</p><p>进程切换的过程主要完成了：</p><ol><li><p>对原来运行进程各种数据的保存</p></li><li><p>对新的进程各种数据的恢复</p><p>（如：程序计数器、程序状态字、各种数据寄存器等处理机现场信息，这些信息一般保存在进程控制块）</p><p>注意：<font color=red>进程切换是有代价的</font>，因此如果过于频繁的进行进程调度、切换，必然会使整个系统的效率降低，使系统大部分时间都花在了进程切换上，而真正用于执行进程的时间减少。</p></li></ol><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E5%88%87%E6%8D%A2%E8%BF%87%E7%A8%8B%E6%96%B9%E5%BC%8F%E5%B0%8F%E7%BB%93.png" alt=""></p><h2 id="调度算法的评价指标">调度算法的评价指标</h2><h3 id="cpu利用率">cpu利用率</h3><p>早起的cpu是非常贵的设备，既然这么昂贵，人们就会希望能多压榨一下cpu</p><p><font color=red>CPU利用率：</font>指CPU“忙碌”的时间占总时间的比例。</p><p><font color=red>利用率</font>=<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mtext>忙碌的时间</mtext><mtext>总时间</mtext></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\dfrac{忙碌的时间}{总时间}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">总时间</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">忙碌的时间</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>Eg：某计算机只支持单道程序，某个作业刚开始需要在CPU上运行5秒，再用打印机打印输出5秒，之后再执行5秒，才能结束。在此过程中，CPU利用率、打印机利用率分别是多少？</p><p>CPU利用率：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mn>5</mn><mo>+</mo><mn>5</mn></mrow><mrow><mn>5</mn><mo>+</mo><mn>5</mn><mo>+</mo><mn>5</mn></mrow></mfrac></mstyle><mo>=</mo><mn>66.66</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">\dfrac{5+5}{5+5+5}=66.66\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">5</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">66.66%</span></span></span></span></p><p>打印机利用率：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>5</mn><mrow><mn>5</mn><mo>+</mo><mn>5</mn><mo>+</mo><mn>5</mn></mrow></mfrac></mstyle><mo>=</mo><mn>33.33</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">\dfrac{5}{5+5+5}=33.33\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">5</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">33.33%</span></span></span></span></p><h3 id="系统吞吐量">系统吞吐量</h3><p>对于计算机来说，希望能用尽可能少的时间处理完尽可能多的作业</p><p>系统吞吐量：单位时间内完成作业的数量</p><p><font color=red>系统吞吐量：</font><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mtext>总共完成了多少道作业</mtext><mtext>总共花了多少时间</mtext></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\dfrac{总共完成了多少道作业}{总共花了多少时间}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">总共花了多少时间</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">总共完成了多少道作业</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>某计算机系统处理完10道作业，共花费100秒，则系统吞吐量为？</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>10</mn><mn>100</mn></mfrac></mstyle><mo>=</mo><mn>0.1</mn><mtext>道</mtext><mi mathvariant="normal">/</mi><mtext>秒</mtext></mrow><annotation encoding="application/x-tex">\dfrac{10}{100}=0.1道/秒</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">100</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">10</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0.1</span><span class="mord cjk_fallback">道</span><span class="mord">/</span><span class="mord cjk_fallback">秒</span></span></span></span></p><h3 id="周转时间">周转时间</h3><p>对于计算机的用户来说，他很关心自己的作业从提交到完成花了多少时间。</p><p><font color=red>周转时间</font>，是指从<font color=red>作业被提交给系统开始</font>，到<font color=red>作业完成为止</font>的这段时间间隔。</p><p>它包括四个部分：作业在外存后备队列上等待作业调度（高级调度）的时间、进程在就绪队列上等待进程调度（低级调度）的时间、进程在CPU上执行的时间、进程等待I/O操作完成的时间。后三项在一个作业的整个处理过程中，可能发生多次。</p><p>（作业）<font color=red>周转时间</font>=作业完成时间-作业提交时间</p><p><font color=red>平均周转时间</font>=<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mtext>各作业的周转时间之和</mtext><mtext>作业数</mtext></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\dfrac{各作业的周转时间之和}{作业数}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">作业数</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">各作业的周转时间之和</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p><font color=red>带权周转时间</font>=<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mtext>作业周转时间</mtext><mtext>作业实际运行的时间</mtext></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\dfrac{作业周转时间}{作业实际运行的时间}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">作业实际运行的时间</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">作业周转时间</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>=<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mtext>作业完成时间</mtext><mo>−</mo><mtext>作业提交时间</mtext></mrow><mtext>作业实际运行的时间</mtext></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\dfrac{作业完成时间-作业提交时间}{作业实际运行的时间}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">作业实际运行的时间</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">作业完成时间</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord cjk_fallback">作业提交时间</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p><font color=red>平均带权周转时间</font>=<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mtext>各作业带权周转时间之和</mtext><mtext>作业数</mtext></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\dfrac{各作业带权周转时间之和}{作业数}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">作业数</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">各作业带权周转时间之和</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>对于周转时间相同的两个作业，实际运行时间长的作业在相同时间内被服务的时间更多，带权周转时间更小，用户满意度更高。</p><p>对于实际运行时间相同的两个作业，周转时间短的带权周转时间更小，用户满意度更高。</p><p>上面我理解的是说：两个作业从开始提交（存在等待时间）到结束运行的时间一样，但是一个作业等待了非常长的时间，一个作业等待了非常短的世界，那么肯定是等待了非常短的时间更让人舒服，因为他等待的时间非常短</p><p>下面我理解的是说：两个作业实际运行了一小时(没有等待时间)，但一个作业直接就上了进程没有等待，一个作业等待了一会才上进程，那么肯定是没有等待的作业更让人舒服</p><h3 id="等待时间">等待时间</h3><p>计算机的用户希望自己的作业尽可能少的等待处理机</p><p>等待时间，指进程/作业处于<font color=red>等待处理机状态时间之和</font>，等待时间越长，用户满意度越低。</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AD%89%E5%BE%85%E8%B0%83%E5%BA%A6%E7%9A%84%E6%97%B6%E9%97%B4.png" alt=""></p><p>对于进程来说，等待时间就是指进程建立后等待被服务的时间之和，在等待I/O完成的期间其实进程也是在被服务的，所以不计入等待时间。</p><p>对于作业来说，不仅要考虑建立进程后的等待时间，还要加上作业在外存后备队列中等待的时间。</p><p>一个作业总共需要被CPU服务多久，被I/O设备服务多久一般是确定不变的，因此调度算法其实只会影响作业/进程的等待时间。当然，与前面指标类似，也有“平均等待时间”来评价整体性能。</p><h3 id="响应时间">响应时间</h3><p>对于计算机用户来说，会希望自己的提交的请求（比如通过键盘输入了一个调试命令）尽早地开始被系统服务、回应。</p><p>响应时间，指从用户提交请求到首次产生响应所用的时间。</p><h3 id="小结-3">小结</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%B0%83%E5%BA%A6%E6%8C%87%E6%A0%87%E7%9A%84%E5%B0%8F%E7%BB%93.png" alt=""></p><h2 id="FCFS、SJF、HRRN算法">FCFS、SJF、HRRN算法</h2><p>各种调度算法的学习思路</p><ol><li><p>算法思想</p></li><li><p>算法规则</p></li><li><p>这种调度算法是用于作业调度，还是进程调度</p></li><li><p>抢占式？非抢占式</p></li><li><p>优缺点</p></li><li><p>是否导致<font color=red>饥饿</font></p><p>如果某进程或者作业长期得不到服务，便是饥饿</p></li></ol><h3 id="FCFS（先来先服务）">FCFS（先来先服务）</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/FCFS%E4%BE%8B%E9%A2%98.png" alt=""></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/FCFS%E9%A2%98%E8%A7%A3.png" alt=""></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%87%AA%E5%B7%B1%E7%AE%97%E7%9A%84.jpg" alt=""></p><p>那么我们注意，P3的带权周转是8，这是非常大的，意思就是他等待时间相对于运行时间非常长，对于用户来说感觉是非常差的</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%85%88%E6%9D%A5%E5%85%88%E6%9C%8D%E5%8A%A1%E7%AE%97%E6%B3%95%E7%9A%84%E7%89%B9%E7%82%B9.png" alt=""></p><p>先来先服务最大的缺点就是比如我们食堂打饭，排在我前面的那个人帮20个人带饭，于是我在后面就要排队很久，就很难受</p><h3 id="SJF（短作业优先算法）">SJF（短作业优先算法）</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/FCFS%E4%BE%8B%E9%A2%98.png" alt=""></p><p>依旧是这道题的计算、不过我们把先来先服务调度算法改为短作业优先算法</p><p><font color=red>短作业/进程优先调度算法</font>：每次==调度时==选择当前已到达且运行时间最短的作业/进程。</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/SJF%E7%AE%97%E6%B3%95%E7%BB%93%E6%9E%9C.jpg" alt=""></p><p>和上面FCFS算出来的结果对比起来，很明显</p><h4 id="最短剩余时间优先算法（SRTN）">最短剩余时间优先算法（SRTN）</h4><p><font color=red>最短剩余时间优先</font>算法：==每当有进程加入==<font color=red>就绪队列改变时就需要调度</font>，如果新到达的进程<font color=red>剩余时间</font>比当前运行的进程剩余时间<font color=red>更短</font>，则由新进程<font color=red>抢占</font>处理机，当前运行进程重新回到就绪队列。另外，当一个<font color=red>进程完成时也需要调度</font></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%9C%80%E7%9F%AD%E5%89%A9%E4%BD%99%E6%97%B6%E9%97%B4%E7%AE%97%E6%B3%95.jpg" alt=""></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%9C%80%E7%9F%AD%E5%89%A9%E4%BD%99%E6%97%B6%E9%97%B4%E4%BC%98%E5%85%88%E7%AE%97%E6%B3%95%E8%AE%A1%E7%AE%97.jpg" alt=""></p><p>和短作业时间优先算法相比又快了一些</p><p><font color=red>注意几个小细节</font>：</p><p>1.如果题目中<font color=red>未特别说明</font>，所提到的“短作业/进程优先算法”<font color=red>默认是非抢占式的</font></p><p>2.很多书上都会说“SJF调度算法的平均等待时间、平均周转时间最少”严格来说，这个表述是错误的，不严谨的。之前的例子表明，最短剩余时间优先算法得到的平均等待时间、平均周转时间还要更少</p><p>应该加上一个条件“在<font color=red>所有进程同时可运行</font>时，采用SJF调度算法的平均等待时间、平均周转时间最少”；</p><p>或者说“在<font color=red>所有进程都几乎同时到达时</font>，采用SJF调度算法的平均等待时间、平均周转时间最少”；</p><p>如果不加上述前提条件，则应该说“<font color=red>抢占式的短作业/进程优先调度算法（最短剩余时间优先,SRNT算法）</font>的平均等待时间、平均周转时间最少”</p><p>3.虽然严格来说，SJF的平均等待时间、平均周转时间并不一定最少，但相比于其他算法（如FCFS），SJF依然可以获得较少的平均等待时间、平均周转时间</p><p>4.如果选择题中遇到“SJF算法的平均等待时间、平均周转时间最少”的选项，那最好判断其他选项是不是有很明显的错误，如果没有更合适的选项，那也应该选择该选项</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%9F%AD%E8%BF%9B%E5%BA%A6%E4%BC%98%E5%85%88.png" alt=""></p><p>==我的看法==：</p><p>短进度/进程优先算法是当前运行的进程运行结束后，才会从就绪队列中找出当前剩余时间最短的进程来执行</p><p>而最短剩余时间优先算法是当一个新进程进入队列时，直接判断是否是当前剩余最短时间，如果是，直接可以把正在运行的进程给他干下来</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%AF%B9fcfs%E5%92%8Csjf%E7%9A%84%E6%80%9D%E8%80%83.png" alt=""></p><h3 id="HRRN（高响应比优先算法）">HRRN（高响应比优先算法）</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E9%AB%98%E5%93%8D%E5%BA%94%E6%AF%94%E4%BC%98%E5%85%88%E7%AE%97%E6%B3%95.png" alt=""></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/HRRN%E7%AE%97%E6%B3%95.jpg" alt=""></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/HRRN%E7%AD%89%E5%BE%85%E6%97%B6%E9%97%B4.png" alt=""></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E9%AB%98%E5%93%8D%E5%BA%94%E6%AF%94%E4%BC%98%E5%85%88%E7%AE%97%E6%B3%95%E7%89%B9%E7%82%B9.png" alt=""></p><h3 id="小结-4">小结</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%B8%89%E4%B8%AA%E7%AE%97%E6%B3%95%E7%9A%84%E5%B0%8F%E7%BB%93.png" alt=""></p><h2 id="时间片轮转、优先级调度、多级反馈队列调度算法">时间片轮转、优先级调度、多级反馈队列调度算法</h2><h3 id="时间片轮转（RR，Round-Robin）">时间片轮转（RR，Round-Robin）</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%97%B6%E9%97%B4%E7%89%87%E7%AE%97%E6%B3%95%E7%9A%84%E6%B3%A8%E6%84%8F.png" alt=""></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%97%B6%E9%97%B4%E7%89%87%E8%BD%AE%E8%BD%AC%E8%AE%A1%E7%AE%97.png" alt=""></p><p>在分时操作系统、实时操作系统，一般更关心进程的响应时间，对于周转时间关心较淡</p><p><font color=red>时间片轮转调度</font>算法：轮流让就绪队列中的进程依次执行一个时间片（每次选择的都是排在就绪队列队头的进程）</p><p>括号里代表的是当前就绪队列，左边队头,右边队尾</p><h4 id="时间片为2">时间片为2</h4><p>0时刻（==P1(5)==）:0时刻只有P1到达就绪队列，让P1上处理机运行一个时间片</p><p>2时刻（==P2(4)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span>P1(3)==）:2时刻P2到达就绪队列，P1运行完一个时间片，被剥夺处理机，重新放到队尾。此时P2排在队头，因此让P2上处理机。（==注意==：2时刻，P1==下处理机==，同一时刻==新进程P2到达==，如果在题目中遇到这种情况，默认==新到达的进程先进入就绪队列==）</p><p>4时刻（==P1(3)==<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span>P3(1)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span>P2(2)）:4时刻，P3到达，先插到就绪队尾，紧接着，P2下处理机也插到队尾</p><p>5时刻（P3(1)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span>P2(2)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span>P4(6)）:5时刻，P4到达插到就绪队尾（注意：由于P1的时间片还没用完，因此暂时不调度。另外，此时==P1处于运行态，并不在就绪队列中==）</p><p>6时刻（P3(1)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span>P2(2)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span>P4(6)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span>P1(1)）：6时刻，P1时间片用完，下处理机，重新放回就绪队尾，发生调度</p><p>7时刻（P2(2)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span>P4(6)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span>P1(1)）：==虽然P3的时间片没用完，但是由于P3只需运行1个单位的时间，运行完了会主动放弃处理机==，因此也会发生调度。队头进程P2上处理机。</p><p>9时刻（P4(6)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span>P1(1)）：进程P2时间片用完，并刚好运行完，发生调度，P4上处理机</p><p>11时刻（P1(1)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span>P4(4)）：P4时间片用完，重新回到就绪队列。P1上处理机</p><p>12时刻（==P4(4)==）：P1运行完，主动放弃处理机，此时就绪队列中只剩P4，P4上处理机</p><p>14时刻（）：就绪队列为空，因此让P4接着运行一个时间片。</p><p>16时刻：所有进程运行结束</p><h4 id="时间片为5">时间片为5</h4><p>0时刻（P1(5)）：只有P1到达，P1上处理机。</p><p>2时刻（P2(4)）：P2到达，但P1时间片尚未结束，因此==暂不调度==</p><p>4时刻（P2(4)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span>P3(1)）：P3到达，但P1时间片尚未结束，因此暂不调度</p><p>5时刻（P2(4)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span>P3(1)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span>P4(6)）：P4到达，同时，==P1运行结束==。发生调度，P2上处理机。</p><p>9时刻（P3(1)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">←</span></span></span></span>P4(6)）：==P2运行结束==，虽然时间片没用完，但是会主动放弃处理机。发生调度。</p><p>10时刻（P4(6)）：P3运行结束，虽然时间片没用完，但是会主动放弃处理机。发生调度。</p><p>15时刻（）：P4时间片用完，但就绪队列为空，因此会让P4继续执行一个时间片。</p><p>16时刻（）：P4运行完，主动放弃处理机。所有进程运行完。</p><p>如果<font color=red>时间片太大</font>，使得每个进程都可以在一个时间片内就完成，则时间片轮转调度算法==退化为先来先服务调度算法==，并且会==增大进程响应时间。因此时间片不能太大==。</p><p>​假设时间片太大，会影响的问题：如果系统中有二个进程在并发执行，时间片是10秒，你在第一个进程快结束的时候发出了一条命令，此时第二个进程来抢占时间片了，那你要10秒后那个命令才能得到响应</p><p>另一方面，进程调度、切换是有时间代价的（保存、恢复运行环境），因此如果==时间片太小==，会导致==进程切换过于频繁==，系统会花大量的时间来处理进程切换，从而导致实际用于进程执行的时间==比例==减少。可见时间片也不能太小</p><p>​一般来说，设计时间片时要让切换进程的开销占比不超过1%</p><h3 id="优先级调度算法">优先级调度算法</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BC%98%E5%85%88%E7%BA%A7%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95.png" alt=""></p><h4 id="非抢占式优先级调度算法">非抢占式优先级调度算法</h4><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BC%98%E5%85%88%E7%BA%A7%E8%B0%83%E5%BA%A6%E8%AE%A1%E7%AE%97.png" alt=""></p><p>非抢占式的优先级调度算法：每次调度时选择==当前已到达且优先级最高的进程==。当前进程==主动放弃处理机时==发生调度。</p><p>0时刻（P1）：只有P1到达，P1上处理机</p><p>7时刻（P2、P3、P4）：P1运行完成主动放弃处理机，其余进程都已到达，P3优先级最高，P3上处理机。</p><p>8时刻（P2、P4）：P3完成，P2、P4优先级相同，由于P2先到达，因此P2优先上处理机</p><p>12时刻（P4）：P2完成，就绪队列只剩P4，P4上处理机。</p><p>16时刻（）：P4完成，所有进程都结束</p><h4 id="抢占式优先级调度算法">抢占式优先级调度算法</h4><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%8A%A2%E5%8D%A0%E5%BC%8F%E4%BC%98%E5%85%88%E7%BA%A7%E8%B0%83%E5%BA%A6%E8%AE%A1%E7%AE%97.png" alt=""></p><p>抢占式的优先级调度算法：每次调度时选择==当前已到达且优先级最高==的进程。当前进程==主动放弃处理机==时发生调度。另外，当==就绪队列发生改变==时也需要检查是会发生抢占。</p><p>0时刻（P1）：只有P1到达，P1上处理机。</p><p>2时刻（P2）：P2到达就绪队列，优先级比P1更高，发生抢占。P1回到就绪队列，P2上处理机。</p><p>4时刻（P1、P3）：P3到达，优先级比P2更高，P2回到就绪队列，P3抢占处理机。</p><p>5时刻（P1、P2、P4）：P3完成，主动释放处理机，同时，P4也到达，由于P2比P4更先进入就绪队列，因此选择P2上处理机</p><p>7时刻（P1、P4）：P2完成，就绪队列只剩P1、P4，P4上处理机。</p><p>11时刻（P1）：P4完成，P1上处理机</p><p>16时刻（）：P1完成，所有进程均完成</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BC%98%E5%85%88%E7%BA%A7%E8%B0%83%E5%BA%A6%E8%A1%A5%E5%85%85.png" alt=""></p><p>小思考</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%B0%8F%E6%80%9D%E8%80%83.png" alt=""></p><h3 id="多级反馈队列调度算法">多级反馈队列调度算法</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%A4%9A%E7%BA%A7%E9%98%9F%E5%88%97%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95.png" alt=""></p><p>假设有源源不断的短进程进来的话，导致低级队列的进程就很难排队到</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%A4%9A%E7%BA%A7%E5%8F%8D%E9%A6%88%E9%98%9F%E5%88%97%E6%A8%A1%E6%8B%9F.png" alt=""></p><p>0时刻：P1进程进入1级队列</p><p>1时刻：P1进程执行完时间片==还剩7==，进入==第二级队列的队尾==，P2进程进入==第一级队列的队尾==</p><p>2时刻：P2进程执行完时间片==还剩3==，进入第二级队列的队尾，此时P1因为第一级队列有P2，所以不执行</p><p>4时刻：P1进程执行完==还剩5==，进入第三级队列的队尾</p><p>5时刻：P2进程执行完1，P3进入第1级队列，P2回到第二级队列的队尾，==还剩2==</p><p>6时刻：P3进程执行完，P2开始执行</p><p>8时刻：P2进程执行完，开始执行P1进程</p><p>12时刻：P1进程执行4，还剩1，回到第三级队列队尾</p><p>13时刻：P1进程执行完</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BA%A4%E4%BA%92%E5%BC%8F%E4%B8%89%E7%AE%97%E6%B3%95%E7%9A%84%E6%AF%94%E8%BE%83.png" alt=""></p><h2 id="进程同步，进程互斥">进程同步，进程互斥</h2><h3 id="什么是进程同步">什么是进程同步</h3><p>知识点回顾：进程具有==异步性==的特征。异步性是指，各并发执行的进程以各自独立的、不可预知的速度向前推进。</p><p>操作系统要提供“==进程同步==机制”来解决异步问题</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AE%A1%E9%81%93%E9%80%9A%E4%BF%A1.png" alt=""></p><p>读进程和写进程并发地运行，由于并发必然导致异步性，因此’写数据’和’读数据’两个操作执行的先后顺序是不确定的。而实际应用中，又必须按照’==写数据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 读数据=='的顺序来执行，如何解决这种==异步==问题，就是==进程同步==</p><p>==同步==又称作==直接制约关系==，它是指为完成某种任务而建立的两个或多个进程，这些进程因为需要在某些位置上==协调==它们的==工作次序==而产生的制约关系（比如上面的’==写数据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 读数据=='）。进程间的直接制约关系就源于它们的相互合作</p><h3 id="什么是进程互斥">什么是进程互斥</h3><p>进程的“并发”需要“共享”的支持。各个并发执行的进程不可避免的需要共享一些系统资源（比如内存，又比如打印机、摄像头这样的I/O设备）</p><ol><li>互斥共享方式：系统中的某些资源，虽然可以提供给多个进程使用，但<font color=red>一个时间段只允许一个进程访问该资源</font></li><li>同时共享方式：系统中的某些资源，<font color=red>允许一个时间段内由多个进程&quot;同时&quot;对它们进行访问</font></li></ol><p>所谓的&quot;同时&quot;往往是宏观上的，而在微观上，这些进程可能是交替的对该资源进行访问的（即分时共享）</p><p>我们把==一个时间段内只允许一个进程使用==的资源称为==临界资源==。许多物理设备（比如摄像头、打印机）都属于临界资源。此外还有许多变量、数据、内存缓冲区等都属于临界资源。</p><p>​临界资源：一个时间段内只允许一个进程使用的资源。各进程需要<font color=red>互斥</font>的访问临界资源</p><p>​临界区：访问临界资源的那段代码</p><p><font color=red>内核程序临界区</font>一般是用来访问<font color=red>某种内核数据结构</font>的，比如进程的就绪队列（由各就绪进程的PCB组成）</p><p>对临界资源的访问，必须==互斥==地进行。互斥，亦称==间接制约关系==。==进程互斥==指当一个进程访问某临界资源时，另一个想要访问该临界资源的进程必须等待。当前访问临界资源的进程访问结束，释放该资源之后，另一个进程才能去访问临界资源。</p><p>对于临界资源的互斥访问，可以在逻辑上分为如下四个部分：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    entry section;<span class="comment">//进入区</span></span><br><span class="line">    critical section;<span class="comment">//临界区</span></span><br><span class="line">    exit section;<span class="comment">//退出区</span></span><br><span class="line">    remainder section; <span class="comment">//剩余区</span></span><br><span class="line">&#125;<span class="keyword">while</span>(<span class="literal">true</span>);</span><br></pre></td></tr></table></figure><p>进入区：负责检查是否可进入临界区，若可进入，则应设置正在访问临界资源的标志（可理解为“上锁”），以阻止其他进程同时进入临界区</p><p>临界区：访问临界资源的那段代码</p><p>退出区：负责解除正在访问临界资源的标志（可理解为“解锁”）</p><p>剩余区：做其他处理</p><p>临界区是进程中访问临界资源的代码段。进入区和退出区是负责实现互斥的代码段。临界区也可称为“临界段”</p><p>如果一个进程暂时不能进入临界区，那么该进程是否应该一直占着处理机？该进程有没有可能一直进不了临界区？</p><p>为了实现对临界资源的互斥访问，同时保证系统整体性能，需要遵循以下原则：</p><p>​<font color=red>一定要记住这四个</font></p><h4 id="空闲让进、忙则等待、有限等待、让权等待">空闲让进、忙则等待、有限等待、让权等待</h4><ol><li>空闲让进。临界区空闲时，可以允许一个请求进入临界区的进程立即进入临界区；</li><li>忙则等待。当已有进程进入临界区时，其他试图进入临界区的进程必须等待；</li><li>有限等待。对请求访问的进程，应保证能在有限时间内进入临界区（保证不会饥饿）；</li><li>让权等待。当进程不能进入临界区时，应立即释放处理机，防止进程忙等待。</li></ol><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E5%90%8C%E6%AD%A5%E4%BA%92%E6%96%A5%E5%B0%8F%E7%BB%93.png" alt=""></p><h2 id="进程互斥软件实现方法">进程互斥软件实现方法</h2><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%BF%9B%E7%A8%8B%E4%BA%92%E6%96%A5%E8%BD%AF%E4%BB%B6%E4%B8%80%E8%A7%88.png" alt=""></p><h3 id="如果没有注意进程互斥会发生什么">如果没有注意进程互斥会发生什么</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/AB%E8%BF%9B%E7%A8%8B%E4%BD%BF%E7%94%A8%E6%89%93%E5%8D%B0%E6%9C%BA.png" alt=""></p><p>先调度A上处理机运行</p><p>当A在使用打印机的过程中，分配给它的时间片用完了，接下来操作系统调度B让它上处理机运行，此时A进程依旧在占有打印机的资源（只是使用到一半切换成别的进程了）</p><p>此时B进程运行到一半也开始使用打印机，此时A进程打印机只使用了一半，B进程来了，就会导致A、B进程的打印内容混合在一起</p><p>如果AB可以互斥使用打印机，就不会出现以上问题</p><p>==注意：后面所有的代码均没有循环体，都是一个循环条件带一个; 不要看错了==</p><h3 id="单标志法">单标志法</h3><p>算法思想：进程在==访问完临界区==后会把使用临界区的权限转交给另一个进程。也就是说==每个进程进入临界区的权限只能被另一个进程赋予==</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%8D%95%E6%A0%87%E5%BF%97%E6%B3%95.png" alt=""></p><p>turn的初值为0，即刚开始只允许0号进程进入临界区。</p><p>若P1先上处理机运行，则会一直卡在⑤。直到P1的时间片用完，发生调度，切换P0上处理机运行。</p><p>代码①不会卡住P0，P0可以正常访问临界区，在P0访问临界区期间即时切换回P1，P1依然会卡在⑤。</p><p>只有P0在退出区将turn改为1后，P1才能进入临界区。</p><p>因此，该算法可以实现“==同一时刻最多只允许一个进程访问临界区==”</p><p>但这个程序有一个非常大的问题，如果此时允许进入临界区的进程是P0，而P0一直不访问临界区，那么虽然此时临界区空闲，但是并不允许P1访问。因此，单标志法存在的主要问题是：违背“空闲让进”原则。</p><h3 id="双标志先检查法">双标志先检查法</h3><p>算法思想：设置一个布尔型数组flag[]，数组中==各个元素用来标记各进程想进入临界区的意愿==，比如“flag[0]=ture”意味着0号进程P0现在想要进入临界区。每个进程在进入临界区之前先检查当前有没有别的进程想进入临界区，如果没有，则把自身对应的标志flag[i]设为true，之后开始访问临界区。</p><p>单标志的思想就是：我们两个进程只有一个变量可以使用。我用之前看看我能不能用，我能用就是你不能用，我不能用就是你能用。我用完了我就直接说我不想用了，然后设置给你用，但是如果你一直不用，当我想用了，我自己是无法设置的</p><p>双标志的思想就是：我们每个进程都有属于自己的变量，我用之前检查你们是不是都不用，都不用我就自己去用，然后我用完了，我再设置成我不想用了，当我想接着用的时候，我就再检查你们，然后看看我能不能用</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%8F%8C%E6%A0%87%E5%BF%97%E6%B3%95.png" alt=""></p><p>如果这两个进程同时检查发现没人使用，然后通过了进入区，就会造成两个进程同时访问临界区</p><p>若按照①⑤②⑥③⑦….的顺序执行，P0和P1将会同时访问临界区。</p><p>因此，双标志先检查法的主要问题是：违反“==忙则等待==”原则。</p><p>因为进入区的“检查”和“上锁”两个处理不是一气呵成的。“检查”后，“上锁”前可能发生进程切换。</p><h3 id="双标志后检查法">双标志后检查法</h3><p>算法思想：双标志先检查法的改版。前一个算法的问题是先==“检查”==后==“上锁”==，但是这两个操作又无法一气呵成，因此导致了两个进程同时进入临界区的问题。因此，人们又想到先“上锁”后“检查”的方法，来避免上述问题。</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%8F%8C%E6%A0%87%E5%BF%97%E5%90%8E%E6%A3%80%E6%9F%A5.png" alt=""></p><p>那么很明显，万一这两个同时上锁了，会在进入区卡一辈子</p><p>若按照①⑤②⑥….的顺序执行，P0和P1将都无法进入临界区</p><p>因此，双标志后检查法虽然解决了“忙则等待”的问题，但是又违背了==“空闲让进”和“有限等待”==原则，会因各进程都长期无法访问临界资源而==产生“饥饿”==现象。</p><p>两个进程都争着想进入临界区，但是谁也不让谁，最后谁都无法进入临界区。</p><h3 id="Peterson算法">Peterson算法</h3><p>算法思想：结合双标志法(自己想使用临界区）、单标志法(让对方使用临界区）的思想。如果双方都争着想进入临界区，那可以让进程尝试“孔融让梨”（谦让）。做一个有礼貌的进程。</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Peterson%E7%AE%97%E6%B3%95.png" alt=""></p><p>在我用之前，我会将这个资源谦让给对方，在进入临界区的时候，我检查对方是否想用==且==同时我让给了对方资源，有一个不满足我就可以使用了，否则就对方使用，直到对方使用完不想用了</p><p>可能有点绕，要多加理解</p><p>Peterson算法用软件方法解决了进程互斥问题，==遵循了空闲让进，忙则等待，有限等待三个原则==，但是依然==未遵循让权等待==的原则</p><h3 id="小结-5">小结</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BA%92%E6%96%A5%E8%BD%AF%E4%BB%B6%E7%AE%97%E6%B3%95%E5%B0%8F%E7%BB%93.png" alt=""></p><h2 id="进程互斥硬件实现方法">进程互斥硬件实现方法</h2><h3 id="中断屏蔽方法">中断屏蔽方法</h3><p>利用“开/关中断指令”实现（与原语的实现思想相同，即在某进程开始访问临界区到结束访问为止都不允许被中断，也就不能发生进程切换，因此也不可能发生两个同时访问临界区的情况）</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%B8%AD%E6%96%AD%E5%B1%8F%E8%94%BD%E6%96%B9%E6%B3%95.png" alt=""></p><p>优点：简单、高效</p><p>缺点：不适用于多处理机；只适用于操作系统内核进程，不适用于用户进程（因为开/关中断指令只能运行在内核态，这组指令如果能让用户随意使用会很危险）</p><h3 id="TestAndSet指令">TestAndSet指令</h3><p>简称TS指令，也有地方称为TestAndSetLock指令，或TSL指令</p><p>TSL指令是==用硬件实现==的，执行的过程不允许被中断，只能一气呵成。</p><p>以下是用C语言描述的逻辑</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/TestAndSet.png" alt=""></p><p>若刚开始lock是false，则TSL返回的old值为false，while循环条件不满足，直接跳过循环，进入临界区。</p><p>若刚开始lock是true，则执行TLS后old返回的值为true，while循环条件满足，会一直循环，直到当前访问临界区的进程在退出区进行“解锁”。</p><p>相比软件实现方法，TSL指令把“上锁”和“检查”操作用硬件的方式变成了一气呵成的原子操作。</p><p>优点：实现简单，无需像软件实现方法那样严格检查是否会有逻辑漏洞；适用于多处理机环境</p><p>缺点：不满足“让权等待”原则，暂时无法进入临界区的进程会占用CPU并循环执行TSL指令，从而导致“忙等”。</p><h3 id="Swap指令">Swap指令</h3><p>有的地方也叫Exchange指令，或简称XCHG指令。Swap指令是用硬件实现的，执行的过程不允许被中断，只能一气呵成。以下是用C语言描述的逻辑</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Swap%E6%8C%87%E4%BB%A4.png" alt=""></p><p>逻辑上来看Swap和TSL并无太大区别，都是先记录下此时临界区是否已经被上锁（记录在old变量上），再将上锁标记lock设置为true，最后检查old，如果old为false则说明之前没有别的进程对临界区上锁，则可跳出循环，进入临界区。</p><p>优点：实现简单，无需像软件实现方法那样严格检查是否会有逻辑漏洞；适用于多处理机环境</p><p>缺点：不满足“让权等待”原则，暂时无法进入临界区的进程会占用CPU并循环执行TSL指令，从而导致“忙等”。</p><h3 id="小结-6">小结</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BA%92%E6%96%A5%E7%A1%AC%E4%BB%B6%E5%B0%8F%E7%BB%93.png" alt=""></p><h2 id="信号量机制">信号量机制</h2><p>复习回顾+思考：之前学习的这些进程互斥的解决方案分别存在哪些问题？</p><p>进程互斥的四种软件实现方式（单标志法、双标志先检查、双标志后检查、Peterson算法）</p><p>进程互斥的三种硬件实现方式（中断屏蔽方法、TS/TSL指令、Swap/XCHG指令）</p><p>1.在双标志先检查法中，==进入区的“检查”、“上锁”操作无法一气呵成==，从而导致了两个进程有可能同时进入临界区的问题；</p><p>2.所有的解决方案都无法==实现“让权等待”==</p><p>1965年，荷兰学者Dijkstra提出了一种卓有成效的实现进程互斥、同步的方法——信号量机制</p><h3 id="信号量机制-2">信号量机制</h3><p>用户进程可以通过使用操作系统提供的==一对原语来对信号量==进行操作，从而很方便的实现了进程互斥、进程同步。</p><p>信号量其实就是一个变量（可以是一个整数，也可以是更复杂的记录型变量），可以用一个信号量来表示==系统中某种资源的数量==，比如：系统中只有一台打印机，就可以设置一个初值为1的信号量。</p><p>==原语是一种特殊的程序段，其执行只能一气呵成，不可被中断。==原语是由关中断/开中断指令实现的。软件解决方案的主要问题是由“进入区的各种操作无法一气呵成”，因此如果能把进入区、退出区的操作都用“原语”实现，使这些操作能“一气呵成”就能避免问题。</p><p>==一对原语：wait(S)原语和signal(S)原语，==可以把原语理解为我们自己写的函数，函数名分别为wait和signal，括号里的==信号量S==其实就是函数调用时传入的一个参数。</p><p>wait、signal原语常==简称为P、V操作==（来自荷兰语proberen和verhogen）。因此，做题的时候常把wait(S)、signal(S)两个操作分别写为==P(S)、V(S)==</p><h3 id="整型信号量">整型信号量</h3><p>用==一个整数型的变量==作为信号量，用来==表示系统中某种资源的数量==。</p><p>​与普通整数变量的区别：对信号量的操作只有三种，即初始化、P操作、V操作</p><p>例如：系统中有一台打印机</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%95%B4%E5%9E%8B%E4%BF%A1%E5%8F%B7%E9%87%8F.png" alt=""></p><p>“检查”和“上锁”一气呵成，避免了并发、异步导致的问题</p><p>存在的问题：不满足“让权等待”原则，会发生“忙等”</p><h3 id="记录型信号量">记录型信号量</h3><p>整型信号量的缺陷是存在“忙等”问题，因此人们又提出了“记录型信号量”，即用记录型数据结构表示的信号量。</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%AE%B0%E5%BD%95%E5%9E%8B%E4%BF%A1%E5%8F%B7%E9%87%8F.png" alt=""></p><p>假设我们有2个打印机资源，4个进程需要使用打印机</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%9B%9B%E4%B8%AA%E8%BF%9B%E7%A8%8B.png" alt=""></p><ol><li><p>s.value=1,P0进程使用打印机;</p></li><li><p>s.value=0,P1进程使用打印机;</p></li><li><p>s.value=-1,p2进程会被S挂到等待队列中</p></li><li><p>s.value=-2,p3进程会被S挂到等待队列中，同时s.value为负的情况下，s.value的绝对值就是等待队列中阻塞的进程数</p></li><li><p>p0进程释放打印机，s.value=-1,发现值$\le$0，说明等待队列中有阻塞的进程，于是让P2接手P0的打印机资源</p></li></ol><p>在考研题目中wait(S)、signal(S)也可以记为P(S)、V(S)，这对原语可==用于实现系统资源的“申请”和“释放”==。</p><p>==S.value的初值==表示系统中==某种资源的数目==。</p><p>对信号量S的==一次P操作==意味着进程==请求一个单位的该类资源==，因此需要执行S.value–，表示资源数减1，当S.value&lt;0时表示该类资源已分配完毕，因此进程应==调用block原语进行自我阻塞==（当前运行的进程从运行态<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>阻塞态），主动放弃处理机，并插入该类资源的等待队列S.L中。可见，==该机制遵循了“让权等待”原则，不会出现“忙等”现象==。</p><p>对信号量S的==一次V操作==意味着进程==释放一个单位的该类资源==，因此需要执行S.value++，表示资源数加1，若加1后仍是S.value&lt;=0，表示依然有进程在等待该类资源，因此应==调用wakeup原语唤醒等待队列中的第一个进程==（被唤醒进程从阻塞态<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span>就绪态）</p><h3 id="小结-7">小结</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BF%A1%E5%8F%B7%E9%87%8F%E5%B0%8F%E7%BB%93.png" alt=""></p><h2 id="用信号量实现进程互斥、同步、前驱">用信号量实现进程互斥、同步、前驱</h2><p>Tips：不要一头钻到代码里，要注意理解信号量背后的含义，一个信号量对应一种资源</p><p>信号量的值=这种资源的剩余数量（信号量的值如果小于0，说明此时有进程在等待这种资源）</p><p>P(S)——申请一个资源S，如果资源不够==就阻塞等待==</p><p>V(S)——释放一个资源S，如果有进程在==等待该资源，则唤醒一个进程==</p><h3 id="信号量实现进程互斥">信号量实现进程互斥</h3><ol><li><p>分析并发进程的关键活动，划定临界区（如：对临界资源打印机的访问就应放在临界区）</p></li><li><p>设置==互斥信号量mutex，初值为1==（mutex表示为初始资源数）</p></li><li><p>在进入区P(mutex)——==申请资源==</p></li><li><p>在退出区V(mutex)——==释放资源==</p></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;</span><br><span class="line">    <span class="type">int</span> value;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">process</span> *L;</span><br><span class="line">&#125;semaphore;</span><br><span class="line"></span><br><span class="line">semaphore mutex=<span class="number">1</span>;<span class="comment">//初始化资源</span></span><br><span class="line"><span class="built_in">P1</span>()&#123;</span><br><span class="line">    ···</span><br><span class="line">    <span class="built_in">P</span>(mutex);<span class="comment">//使用资源前需要上锁</span></span><br><span class="line">    临界区代码段...</span><br><span class="line">    <span class="built_in">V</span>(mutex);<span class="comment">//释放资源需要解锁</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">P2</span>()&#123;</span><br><span class="line">    ···</span><br><span class="line">    <span class="built_in">P</span>(mutex);<span class="comment">//使用资源前需要上锁</span></span><br><span class="line">    临界区代码段...</span><br><span class="line">    <span class="built_in">V</span>(mutex);<span class="comment">//释放资源需要解锁</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码给出的是伪代码，具体情况具体分析，只是为了表示一个大致意思</p><p>只要信号量用semaphore开头，就说明该信号量是记录型信号量</p><p>注意：对不同的==临界资源需要设置不同的互斥信号量==。</p><p>==P、V操作必须成对出现==。缺少P(mutex)就不能保证临界资源的互斥访问。缺少V(mutex)会导致资源永不被释放，等待进程永不被唤醒。</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%B8%8D%E5%90%8C%E4%BF%A1%E5%8F%B7%E9%87%8F%E4%B8%8D%E5%90%8C%E7%B1%BB%E5%9E%8B.png" alt=""></p><h3 id="信号量实现进程同步">信号量实现进程同步</h3><p>进程同步：要让各并发进程按要求有序地推进。</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BF%A1%E5%8F%B7%E9%87%8F%E5%AE%9E%E7%8E%B0%E5%90%8C%E6%AD%A5.png" alt=""></p><ol><li><p>分析什么地方需要实现“同步关系”，即必须保证“一前一后”执行的两个操作（或两句代码）</p></li><li><p>设置==同步信号量S,初始为0==</p></li><li><p>==在“前操作”之后执行V(S)==</p></li><li><p>==在“后操作”之前执行P(S)==</p></li></ol><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BF%A1%E5%8F%B7%E9%87%8F%E5%90%8C%E6%AD%A5%E4%BB%A3%E7%A0%81.png" alt=""></p><p>前提：保证代码4在代码1和代码2后执行</p><p>先执行P1在执行P2：若先执行到V(S)操作，则S++后S=1。之后当执行到P(S)操作时，由于S=1，表示有可用资源，会执行S–，S的值变回0，P2进程不会执行block原语，而是继续往下执行代码4。</p><p>先执行P2再执行P1：若先执行到P(S)操作，由于S=0，S–后S=-1，表示此时没有可用资源，因此P操作中会执行block原语，主动请求阻塞。之后当执行完代码2，继而执行V(S)操作，S++，使S变回0，由于此时有进程在该信号量对应的阻塞队列中，因此会在V操作中执行wakeup原语，唤醒P2进程。这样P2就可以继续执行代码4了</p><p>信号量S代表“某种资源”，刚开始是没有这种资源的。P2需要使用这种资源，而又只能由P1产生这种资源</p><h3 id="信号量实现前驱关系">信号量实现前驱关系</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%89%8D%E9%A9%B1%E5%9B%BE.png" alt=""></p><p>上图含义：只有执行完S1，才能执行S2，S3；只有执行完S2，才能执行S4，S5，只有执行完S4，S5，S3，才能执行S6</p><p>每一对前驱关系都是一个进程同步问题（需要保证一前一后的操作）</p><ol><li><p>要为==每一对前驱关系各设置一个同步信号量==</p></li><li><p>==在“前操作”之后对相应的同步信号量执行V操作==</p></li><li><p>==在“后操作”之前对相应的同步信号量执行P操作==</p></li></ol><p>==前操作后操作==意思就是谁在前面执行，谁在后面执行</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%89%8D%E9%A9%B1%E4%BB%A3%E7%A0%81.png" alt=""></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%89%8D%E9%A9%B1%E4%BF%A1%E5%8F%B7%E9%87%8F%E5%9B%BE.png" alt=""></p><h3 id="小结-8">小结</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BF%A1%E5%8F%B7%E9%87%8F%E5%AE%9E%E7%8E%B0%E4%BA%92%E6%96%A5%E5%90%8C%E6%AD%A5%E5%89%8D%E9%A9%B1%E5%B0%8F%E7%BB%93.png" alt=""></p><h2 id="生产者—消费者问题">生产者—消费者问题</h2><h3 id="问题描述">问题描述</h3><p>系统中有一组生产者进程和一组消费者进程，生产者进程每次生产一个产品放入缓冲区，消费者进程每次从缓冲区中取出一个产品并使用。（注：这里的“产品”理解为某种数据）生产者、消费者共享一个==初始为空、大小为n的缓冲区==。</p><p>只有缓冲区没满时，生产者才能把产品放入缓冲区，否则必须等待。</p><p>只有缓冲区不空时，消费者才能从中取出产品，否则必须等待。缓冲区是临界资源，各进程必须互斥地访问。</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%94%9F%E4%BA%A7%E8%80%85%E6%B6%88%E8%B4%B9%E8%80%85%E7%9A%84%E5%9B%BE.png" alt=""></p><h3 id="问题分析">问题分析</h3><p>PV操作题目分析步骤：</p><ol><li><p>关系分析。找出题目中描述的各个进程，分析它们之间的同步、互斥关系。</p></li><li><p>整理思路。根据各进程的操作流程确定P、V操作的大致顺序。</p></li><li><p>设置信号量。并根据题目条件确定信号量初值。（互斥信号量初值一般为1，同步信号量的初始值要看对应资源的初始值是多少）</p></li></ol><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/pv%E6%93%8D%E4%BD%9C%E8%A7%84%E5%88%99.png" alt=""></p><p>当缓冲区没空时，消费者才能去消费</p><p>当缓冲区没满时，生产者才能去生产</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">semaphore mutex=<span class="number">1</span>;<span class="comment">//互斥信号量，实现对缓冲区的互斥访问</span></span><br><span class="line">semaphore empty=n;<span class="comment">//同步信号量，表示剩余可以放得数量，也即空闲缓冲区的数量</span></span><br><span class="line">semaphore full=<span class="number">0</span>;<span class="comment">//同步信号量，表示产品的数量，也即非空缓冲区的数量</span></span><br></pre></td></tr></table></figure><p>生产者进程需要做的是：生产一个产品放入缓冲区中，==当空闲缓冲区非空==</p><p>消费者进程需要做的是：从缓冲区中取出一个产品，==当非空缓冲区未满==</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">producer</span>()&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        生产一个产品;</span><br><span class="line">        <span class="built_in">P</span>(empty); <span class="comment">//消耗一个空闲缓冲区</span></span><br><span class="line">        <span class="built_in">P</span>(mutex);</span><br><span class="line">        把产品放入缓冲区;</span><br><span class="line">        <span class="built_in">V</span>(mutex);</span><br><span class="line">        <span class="built_in">V</span>(full);<span class="comment">//增加一个产品</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">comsumer</span>()&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">P</span>(full);<span class="comment">//消耗一个产品(非缓冲区)</span></span><br><span class="line">        <span class="built_in">P</span>(mutex);</span><br><span class="line">        从缓冲区取出产品;</span><br><span class="line">        <span class="built_in">V</span>(mutex);</span><br><span class="line">        <span class="built_in">V</span>(empty);<span class="comment">//增加一个空闲缓冲区</span></span><br><span class="line">        使用产品;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现二个进程的同步关系，是在其中一个进程执行P，另一个进程执行V</p><h4 id="能否改变相邻PV操作的顺序">能否改变相邻PV操作的顺序</h4><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%94%B9%E5%8F%98%E7%9B%B8%E9%82%BBPV%E6%93%8D%E4%BD%9C%E7%9A%84%E9%A1%BA%E5%BA%8F.png" alt=""></p><p>很明显是不可以的，mutex是保证这个资源互斥访问的，Producer访问的时候上锁，然后P(empty)发现此时没有非空缓冲区，那么便会阻塞，此时consumer访问的时候P（mutex）还在阻塞中，就会产生死锁</p><p>因此，==实现互斥的P操作一定要在实现同步的P操作之后==。</p><p>==V操作不会导致进程阻塞，因此两个V操作顺序可以交换==。</p><p>生产者消费者问题是一个互斥、同步的综合问题。</p><p>对于初学者来说最难的是发现题目中隐含的两对同步关系。</p><p>有时候是消费者需要等待生产者生产，有时候是生产者要等待消费者消费，这是两个不同的“一前一后问题”，因此也需要设置两个同步信号量。</p><h2 id="多生产者—多消费者问题">多生产者—多消费者问题</h2><p>桌子上有一只盘子，每次只能向其中放入一个水果。爸爸专向盘子中放苹果，妈妈专向盘子中放橘子，儿子专等着吃盘子中的橘子，女儿专等着吃盘子中的苹果。只有盘子空时，爸爸或妈妈才可向盘子中放一个水果。仅当盘子中有自己需要的水果时，儿子或女儿可以从盘子中取出水果。用PV操作实现上述过程</p><ol><li><p>关系分析。找出题目中描述的各个进程，分析它们之间的同步、互斥关系。</p></li><li><p>整理思路。根据各进程的操作流程确定P、V操作的大致顺序。</p></li><li><p>设置信号量。设置需要的信号量，并根据题目条件确定信号量初值。（互斥信号量初值一般为1，同步信号量的初始值要看对应资源的初始值是多少）</p></li></ol><p>互斥关系（mutex=1）：对缓冲区（盘子）的访问要互斥地进行</p><p>同步关系（一前一后）：</p><ol><li><p>父亲将苹果放入盘子后，女儿才能取苹果</p></li><li><p>母亲将橘子放入盘子后，儿子才能取橘子</p></li><li><p>只有==盘子为空==时，==父亲或母亲才能放入水果==</p></li></ol><p>“盘子为空”这个事件可以由儿子或女儿触发，事件发生后才允许父亲或母亲放水果</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%88%B6%E4%BA%B2%E6%AF%8D%E4%BA%B2%E5%A5%B3%E5%84%BF%E5%84%BF%E5%AD%90.png" alt=""></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">semaphore mutex=<span class="number">1</span>; <span class="comment">//实现互斥访问盘子</span></span><br><span class="line">semaphore apple=<span class="number">0</span>; <span class="comment">//盘子中有几个苹果</span></span><br><span class="line">semaphore orange=<span class="number">0</span>; <span class="comment">//盘子中有几个橘子</span></span><br><span class="line">semaphore plate = <span class="number">1</span>;<span class="comment">//盘子中还可以放多少个水果</span></span><br><span class="line"><span class="built_in">dad</span>()&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        准备一个苹果;</span><br><span class="line">        <span class="built_in">P</span>(plate);</span><br><span class="line">        <span class="built_in">P</span>(mutex);</span><br><span class="line">        把苹果放入盘子;</span><br><span class="line">    <span class="built_in">V</span>(mutex);</span><br><span class="line">        <span class="built_in">V</span>(apple);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">mom</span>()&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        准备一个橘子;</span><br><span class="line">        <span class="built_in">P</span>(plate);</span><br><span class="line">        <span class="built_in">P</span>(mutex);</span><br><span class="line">        把橘子放入盘子;</span><br><span class="line">        <span class="built_in">V</span>(mutex);</span><br><span class="line">        <span class="built_in">V</span>(orange);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">daughter</span>()&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">P</span>(apple);</span><br><span class="line">        <span class="built_in">P</span>(mutex);</span><br><span class="line">        从盘子中取走苹果;</span><br><span class="line">        <span class="built_in">V</span>(mutex);</span><br><span class="line">        <span class="built_in">V</span>(plate);</span><br><span class="line">        吃掉苹果;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">son</span>()&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">P</span>(orange);</span><br><span class="line">        <span class="built_in">P</span>(mutex);</span><br><span class="line">        从盘子中取走橘子;</span><br><span class="line">        <span class="built_in">V</span>(mutex);</span><br><span class="line">        <span class="built_in">V</span>(plate);</span><br><span class="line">        吃掉橘子</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里也可以不用加入互斥信号量，因为盘子只能放一个水果，A申请了P资源并上锁，B就一定申请不了。</p><p>如果盘子能放两个水果，那就不行了，AB同时申请P资源，同时访问缓冲区就有可能会造成数据覆盖问题</p><p>当然，也不是绝对的，要具体问题具体分析</p><h3 id="小结-9">小结</h3><p>建议：在考试中如果来不及仔细分析，可以加上互斥信号量，保证各进程一定会互斥地访问缓冲区。但需要注意的是，实现互斥的P操作一定要在实现同步的P操作之后，否则可能引起“死锁”。</p><p>解决“多生产者-多消费者问题”的关键在于理清复杂的同步关系。</p><p>在分析同步问题（一前一后问题）的时候不能从单个进程行为的角度来分析，要把“一前一后”发生的事看做是两种“事件”的前后关系。</p><p>比如，如果从==单个进程行为的角度来考虑==的话，我们会有以下结论：</p><p>==如果盘子里装有苹果，那么一定要女儿取走苹果后父亲或母亲才能再放入水果==</p><p>==如果盘子里装有橘子，那么一定要儿子取走橘子后父亲或母亲才能再放入水果==</p><p>这么看是否就意味着要设置四个同步信号量分别实现这四个“一前一后”的关系了？</p><p>正确的分析方法应该==从“事件”的角度来考虑==，我们可以把上述四对“进程行为的前后关系”抽象为一对“事件的前后关系”</p><p><font color=red>感觉理论都是P话，多写写就会了</font></p><h2 id="吸烟者问题（单生产者生产多物品）">吸烟者问题（单生产者生产多物品）</h2><p>假设一个系统==有三个抽烟者进程==和==一个供应者进程==。每个抽烟者不停地卷烟并抽掉它，但是要卷起并抽掉一支烟，抽烟者需要有三种材料：==烟草、纸和胶水==。三个抽烟者中，第一个拥有烟草、第二个拥有纸、第三个拥有胶水。供应者进程无限地提供三种材料，供应者每次将两种材料放桌子上，拥有剩下那种材料的抽烟者卷一根烟并抽掉它，并给供应者进程一个信号告诉完成了，供应者就会放另外两种材料再桌上，这个过程一直重复（让三个抽烟者轮流地抽烟）</p><p>本质上这题也属于“生产者-消费者”问题，更详细的说应该是“可生产多种产品的单生产者-多消费者”。</p><ol><li><p>关系分析。找出题目中描述的各个进程，分析它们之间的同步、互斥关系。</p></li><li><p>整理思路。根据各进程的操作流程确定P、V操作的大致顺序</p></li><li><p>设置信号量。设置需要的信号量，并根据题目条件确定信号量初值。（互斥信号量初值一般为1，同步信号量的初始值要看对应资源的初始值是多少）</p></li></ol><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%90%B8%E7%83%9F%E8%80%85%E9%97%AE%E9%A2%98%E5%85%B3%E7%B3%BB.png" alt=""></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">semaphore offer1=<span class="number">0</span>;<span class="comment">//组合1有的数量</span></span><br><span class="line">semaphore offer2=<span class="number">0</span>;<span class="comment">//组合2有的数量</span></span><br><span class="line">semaphore offer3=<span class="number">0</span>;<span class="comment">//组合3有的数量</span></span><br><span class="line">semaphore finish=<span class="number">1</span>;<span class="comment">//桌子资源是否还有</span></span><br><span class="line"><span class="type">int</span> i=<span class="number">0</span>;<span class="comment">//用于轮流实现</span></span><br><span class="line">provider()&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">1</span>)&#123;</span><br><span class="line">            V(offer1);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i==<span class="number">2</span>)&#123;</span><br><span class="line">            V(offer2);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i==<span class="number">3</span>)&#123;</span><br><span class="line">            V(offer3);</span><br><span class="line">        &#125;</span><br><span class="line">        i=(i+<span class="number">1</span>)%<span class="number">3</span>;</span><br><span class="line">        P(finish);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">smoker1()&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        P(offer1);</span><br><span class="line">        从桌子上取走组合,卷烟抽掉;</span><br><span class="line">        V(finish);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">smoker2()&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        P(offer2);</span><br><span class="line">        从桌子上取走组合,卷烟抽掉;</span><br><span class="line">        V(finish);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">smoker3()&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        P(offer3);</span><br><span class="line">        从桌子上取走组合,卷烟抽掉;</span><br><span class="line">        V(finish);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里用不用互斥信号量，因为同一时刻，至多只会有一个组合的值为1</p><p>吸烟者问题可以为我们解决“可以生产多个产品的单生产者”问题提供一个思路。</p><p>值得吸取的精华是：“轮流让各个吸烟者吸烟”必然需要“轮流的在桌上放上组合一、二、三”，注意体会我们是如何用一个整型变量i实现这个“轮流”过程的。</p><p>如果题目改为“每次随机地让一个吸烟者吸烟”，我们有应该如何用代码写出这个逻辑呢？</p><p>若一个生产者要生产多种产品（或者说会引发多种前驱事件），那么各个V操作应该放在各自对应的“事件”发生之后的位置。</p><h2 id="读者写者问题">读者写者问题</h2><p>有读者和写者两组并发进程，共享一个文件，当两个或两个以上的读进程同时访问共享数据时不会产生副作用。</p><p>但若某个写进程和其他进程（读进程或写进程）同时访问共享数据时则可能导致数据不一致的错误。</p><p>因此要求：</p><p>①允许多个读者可以同时对文件执行读操作；</p><p>②只允许一个写者往文件中写信息；</p><p>③任一写者在完成写操作之前不允许其他读者或写者工作；</p><p>④写者执行写操作前，应让已有的读者和写者全部退出。</p><p>与消费者进程不同，读者进程在读数据后并不会将数据清空，并不会改变数据。因此多个读者可同时访问共享数据</p><p>==读进程与写进程同时共享数据，可能导致读出的数据不一致的问题==</p><p>两个写进程同时共享数据，可能导致数据错误覆盖的问题</p><ol><li><p>关系分析。找出题目中描述的各个进程，分析它们之间的同步、互斥关系。</p></li><li><p>整理思路。根据各进程的操作流程确定P、V操作的大致顺序</p></li><li><p>设置信号量。设置需要的信号量，并根据题目条件确定信号量初值。（互斥信号量初值一般为1，同步信号量的初始值要看对应资源的初始值是多少）</p></li></ol><p>两类进程：写进程、读进程</p><p>互斥关系：写进程—写进程、写进程—读进程。读进程与读进程不存在互斥问题。</p><p>算法1：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">semaphore rw=<span class="number">1</span>;<span class="comment">//用来实现对共享文件的互斥访问</span></span><br><span class="line"><span class="type">int</span> count=<span class="number">0</span>;<span class="comment">//记录几个读进程访问文件</span></span><br><span class="line">semaphore mutex=<span class="number">1</span>;<span class="comment">//用来保证对count变量的互斥访问</span></span><br><span class="line"></span><br><span class="line">writer()&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        P(rw);<span class="comment">//写之前上锁</span></span><br><span class="line">        写文件;</span><br><span class="line">        V(rw);<span class="comment">//写结束开锁</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">Reader()&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        P(mutex);<span class="comment">//读进程互斥访问count</span></span><br><span class="line">        <span class="keyword">if</span>(count==<span class="number">0</span>)<span class="comment">//第一个读进程负责上锁</span></span><br><span class="line">            P(rw);</span><br><span class="line">        count++;<span class="comment">//读进程文件++</span></span><br><span class="line">        V(mutex);<span class="comment">//释放count</span></span><br><span class="line">        读文件;</span><br><span class="line">        P(mutex);<span class="comment">//读进程互斥访问count</span></span><br><span class="line">        count--;<span class="comment">//读进程结束--</span></span><br><span class="line">        <span class="keyword">if</span>(count==<span class="number">0</span>)<span class="comment">//如果没有读进程，读完解锁</span></span><br><span class="line">            V(rw);</span><br><span class="line">        V(mutex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>潜在的问题：只要有读进程还在读，写进程就要一直阻塞等待，可能“饿死”。因此，这种算法中，读进程是优先的</p><p>算法2：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">semaphore rw=<span class="number">1</span>;<span class="comment">//用来实现对共享文件的互斥访问</span></span><br><span class="line"><span class="type">int</span> count=<span class="number">0</span>;<span class="comment">//记录几个读进程访问文件</span></span><br><span class="line">semaphore mutex=<span class="number">1</span>;<span class="comment">//用来保证对count变量的互斥访问</span></span><br><span class="line">semaphore w=<span class="number">1</span>;<span class="comment">//用于实现写优先</span></span><br><span class="line"></span><br><span class="line">writer()&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        P(w);</span><br><span class="line">        P(rw);<span class="comment">//写之前上锁</span></span><br><span class="line">        写文件;</span><br><span class="line">        V(rw);<span class="comment">//写结束开锁</span></span><br><span class="line">        V(w);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">Reader()&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        P(w);<span class="comment">//上锁</span></span><br><span class="line">        P(mutex);<span class="comment">//读进程互斥访问count</span></span><br><span class="line">        <span class="keyword">if</span>(count==<span class="number">0</span>)<span class="comment">//第一个读进程负责上锁</span></span><br><span class="line">            P(rw);</span><br><span class="line">        count++;<span class="comment">//读进程文件++</span></span><br><span class="line">        V(mutex);<span class="comment">//释放count</span></span><br><span class="line">        V(w);</span><br><span class="line">        读文件;</span><br><span class="line">        P(mutex);<span class="comment">//读进程互斥访问count</span></span><br><span class="line">        count--;<span class="comment">//读进程结束--</span></span><br><span class="line">        <span class="keyword">if</span>(count==<span class="number">0</span>)<span class="comment">//如果没有读进程，读完解锁</span></span><br><span class="line">            V(rw);</span><br><span class="line">        V(mutex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>情景分析:</p><ol><li>读者1→读者2：读者1给P(w)上锁，读者2来堵在w这里，读者1读文件时，读者2便拿到进入条件，然后也开始读，因为读操作不需要互斥，读完后减去读进程的数量</li><li>写者1→写者2：写者1给P(w)上锁，写者1写之前上锁P(rw)，写者2就在门口堵着，等着写者1写完才行</li><li>写者1→读者1: 写者1给P(w)上锁，写者1写之前上锁P(rw)，读者1在P(W)这里卡着，直到写者1写完释放P(w)</li><li>读者1→写者1→读者2：读者1给P(w)上锁，写者2来了堵住，读者2来了也堵住，P(w)释放后，写者2先进，堵在了P(rw)之前，等到读者1读完，写者2去写，写完后读者2来读</li><li>写者1→读者1→写者2：写者1给P(w)上锁，写者1写之前上锁P(rw)，读者1在P(W)这里卡着，直到写者1写完释放P(w)，然后读者2进入P(w),P(rw),读完后，写者2开始写</li></ol><p>结论：在这种算法中，连续进入的多个读者可以同时读文件；写者和其他进程不能同时访问文件；写者不会饥饿，但也并不是真正的“写优先”，而是相对公平的先来先服务原则。有的书上把这种算法称为“读写公平法”。</p><p>读者-写者问题为我们解决复杂的互斥问题提供了一个参考思路。</p><p>其==核心思想==在于设置了一个==计数器count==用来记录当前正在访问共享文件的读进程数。我们可以用count的值来判断当前进入的进程是否是第一个/最后一个读进程，从而做出不同的处理。</p><p>另外，对count变量的检查和赋值不能一气呵成导致了一些错误，如果==需要实现“一气呵成”==，自然应该想到用互斥信号量。</p><p>最后，还要认真体会我们是如何解决“写进程饥饿”问题的。</p><p>绝大多数的考研PV操作大题都可以用之前介绍的几种生产者-消费者问题的思想来解决，如果遇到更复杂的问题，可以想想能否用读者写者问题的这几个思想来解决。</p><h2 id="哲学家进餐问题">哲学家进餐问题</h2><p>一张圆桌上坐着5名哲学家，每两个哲学家之间的桌上摆一根筷子，桌子的中间是一碗米饭。哲学家们倾注毕生的精力用于思考和进餐，哲学家在思考时，并不影响他人。只有当哲学家饥饿时，才试图拿起左、右两根筷子（一根一根地拿起）。如果筷子已在他人手上，则需等待。饥饿的哲学家只有同时拿起两根筷子才可以开始进餐，当进餐完毕后，放下筷子继续思考。</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%B2%E5%AD%A6%E5%AE%B6%E5%90%83%E9%A5%AD.png" alt=""></p><ol><li><p>关系分析。系统中有5个哲学家进程，5位哲学家与左右邻居对其中间筷子的访问是互斥关系。</p></li><li><p>整理思路。这个问题中只有互斥关系，但与之前遇到的问题不同的事，每个哲学家进程需要同时持有两个临界资源才能开始吃饭。==如何避免临界资源分配不当造成的死锁现象==，是哲学家问题的精髓。</p></li><li><p>信号量设置。定义互斥信号量数组chopstick[5]={1,1,1,1,1}用于实现对5个筷子的互斥访问。并对哲学家按0~4编号，哲学家i左边的筷子编号为i，右边的筷子编号为(i+1)%5。</p></li></ol><p>==先来个死锁代码==</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">semaphore chopstick[]=&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line">Pi()&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        P(chopstick[i]);</span><br><span class="line">        P(chopstick[(i+<span class="number">1</span>)%<span class="number">5</span>]);</span><br><span class="line">        吃饭...;</span><br><span class="line">        V(chopstick[i]);</span><br><span class="line">        V(chopstick[(i+<span class="number">1</span>)%<span class="number">5</span>]);</span><br><span class="line">        思考...;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设五个哲学家全部并发的拿起了左手边的筷子，直接死锁</p><p>如何预防死锁的发生</p><p>①可以对哲学家进程施加一些限制条件，比如最多允许四个哲学家同时进餐。这样可以保证至少有一个哲学家是可以拿到左右两只筷子的</p><p>②要求奇数号哲学家先拿左边的筷子，然后再拿右边的筷子，而偶数号哲学家刚好相反。用这种方法可以保证如果相邻的两个奇偶号哲学家都想吃饭，那么只会有其中一个可以拿起第一只筷子，另一个会直接阻塞。这就避免了占有一支后再等待另一只的情况。</p><p>③仅当一个哲学家左右两支筷子都可用时才允许他抓起筷子。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">semaphore chopstick[]=&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line">semaphore mutex=<span class="number">1</span>;<span class="comment">//互斥的取筷子</span></span><br><span class="line">Pi()&#123;<span class="comment">//i号哲学家进程</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        P(mutex);</span><br><span class="line">        P(chopstick[i]);</span><br><span class="line">        P(chopstick[(i+<span class="number">1</span>)%<span class="number">5</span>]);</span><br><span class="line">        V(mutex);</span><br><span class="line">        吃饭...;</span><br><span class="line">        V(chopstick[i]);</span><br><span class="line">        V(chopstick[(i+<span class="number">1</span>)%<span class="number">5</span>]);</span><br><span class="line">        思考...;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该情况也会发生问题，假如0号哲学家拿起了左右筷子，1号哲学家也想用筷子，但会在P(chopstick[i])阻塞，2号       哲学家也想拿起筷子，就会在P(mutex)处阻塞，1号哲学家会在0号哲学家放筷子后执行</p><p>各哲学家拿筷子这件事必须互斥的执行。这就保证了即使一个哲学家在拿筷子拿到一半时被阻塞，也不会有别的哲学家会继续尝试拿筷子。这样的话，当前正在吃饭的哲学家放下筷子后，被阻塞的哲学家就可以获得等待的筷子了。</p><p>哲学家进餐问题的关键在于解决进程死锁。</p><p>这些进程之间只存在互斥关系，但是与之前接触到的互斥关系不同的是，每个进程都需要同时持有两个临界资源，因此就有“死锁”问题的隐患。</p><p>如果在考试中遇到了一个进程需要同时持有多个临界资源的情况，应该参考哲学家问题的思想，分析题中给出的进程之间是否会发生循环等待，是否会发生死锁。可以参考哲学家就餐问题解决死锁的三种思路。</p><h2 id="管程">管程</h2><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AE%A1%E7%A8%8B%E4%B8%80%E8%A7%88.png" alt=""></p><p>信号量机制存在的问题：编写程序困难、易出错</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BF%A1%E5%8F%B7%E9%87%8F%E6%AF%94%E5%AF%B9.png" alt=""></p><p>能不能设计一种机制，让程序员写程序时不需要再关注复杂的PV操作，让写代码更轻松呢？</p><p>1973年，BrinchHansen首次在程序设计语言(Pascal)中引入了“管程”成分——一种高级同步机制</p><h3 id="管程的定义与基本特征">管程的定义与基本特征</h3><p>管程是一种特殊的软件模块，有这些部分组成：</p><ol><li><p>局部于管程的==共享数据结构==说明；</p></li><li><p>对该数据结构进行操作的==一组过程==；</p></li><li><p>对局部于管程的共享数据设置初始值的语句；</p></li><li><p>管程有一个名字。</p></li></ol><p>过程就是函数</p><p>管程的基本特征：</p><ol><li><p>局部于管程的数据只能被局部于管程的过程所访问；</p></li><li><p>一个进程只有通过调用管程内的过程才能进入管程访问共享数据；</p></li><li><p>==每次仅允许一个进程在管程内执行某个内部过程。==</p></li></ol><h3 id="管程解决生产者消费者问题">管程解决生产者消费者问题</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AE%A1%E7%A8%8B%E4%BC%AA%E4%BB%A3%E7%A0%81.png" alt=""></p><p>当缓冲区产品已满时，生产者进程将会在wait原语阻塞，直到消费者进程在remove中取走产品</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%88%A9%E7%94%A8%E7%AE%A1%E7%A8%8B%E5%86%99%E7%94%9F%E4%BA%A7%E8%80%85%E6%B6%88%E8%B4%B9%E8%80%85.png" alt=""></p><p>引入管程的目的无非就是要更方便地实现进程互斥和同步。</p><ol><li><p>需要在管程中定义共享数据（如生产者消费者问题的缓冲区）</p></li><li><p>需要在管程中定义用于访问这些共享数据的“入口”——其实就是一些函数（如生产者消费者问题中，可以定义一个函数用于将产品放入缓冲区，再定义一个函数用于从缓冲区取出产品）</p></li><li><p>==只有通过这些特定的“入口”才能访问共享数据==</p></li><li><p>管程中有很多“入口”，但是==每次只能开放其中一个“入口”==，并且==只能让一个进程或线程进入==（如生产者消费者问题中，各进程需要互斥地访问共享缓冲区。管程的这种特性即可保证一个时间段内最多只会有一个进程在访问缓冲区。==<font color=red>注意：这种互斥特性是由编译器负责实现的，程序员不用关心）</font>==</p></li><li><p>可在管程中设置==条件变量及等待/唤醒操作以解决同步问题==。可以让一个进程或线程在条件变量上等待（==此时，该进程应先释放管程的使用权，也就是让出“入口”==）；可以通过唤醒操作将等待在条件变量上的进程或线程唤醒。</p></li></ol><p>程序员可以用某种特殊的语法定义一个管程（比如:monitorProducerConsumer……endmonitor;），之后其他程序员就可以使用这个管程提供的特定“入口”很方便地使用实现进程同步/互斥了。</p><h3 id="java中类似管程的机制">java中类似管程的机制</h3><p>Java中，如果用关键字synchronized来描述一个函数，那么这个函数同一时间段内只能被一个线程调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 经典生产者消费者问题</span></span><br><span class="line"><span class="comment">* 生产者不断的向仓库存放产品</span></span><br><span class="line"><span class="comment">* 消费者从仓库中消费产品</span></span><br><span class="line"><span class="comment">* 生产者和消费者都可以有若干个</span></span><br><span class="line"><span class="comment">* 仓库规则、容量有限，库满不能存放，库空不能取货</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        Storage storage=<span class="keyword">new</span> <span class="title class_">Storage</span>();<span class="comment">//定义仓库，里面用来放产品对象，上限十个</span></span><br><span class="line">        Thread consumer1=<span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Consumer</span>(storage));</span><br><span class="line">        consumer1.setName(<span class="string">&quot;消费者1&quot;</span>);</span><br><span class="line">        Thread consumer2=<span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Consumer</span>(storage));</span><br><span class="line">        consumer2.setName(<span class="string">&quot;消费者2&quot;</span>);</span><br><span class="line">        Thread producer1=<span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Producer</span>(storage));</span><br><span class="line">        producer1.setName(<span class="string">&quot;生产者1&quot;</span>);</span><br><span class="line">        Thread producer2=<span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Producer</span>(storage));</span><br><span class="line">        producer2.setName(<span class="string">&quot;生产者2&quot;</span>);</span><br><span class="line">        <span class="comment">//启动四个线程</span></span><br><span class="line">        producer1.start();</span><br><span class="line">        producer2.start();</span><br><span class="line">        Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">        consumer1.start();</span><br><span class="line">        consumer2.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Storage</span>&#123;</span><br><span class="line">    <span class="comment">//仓库大小为10</span></span><br><span class="line">    <span class="keyword">private</span> Product[] products=<span class="keyword">new</span> <span class="title class_">Product</span>[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> top=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生产者放产品</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">push</span><span class="params">(Product product)</span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (top==products.length)&#123;<span class="comment">//如果仓库当前容量等于仓库上限,便执行该循环，等待别人取出</span></span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;producer wait&quot;</span>);</span><br><span class="line">                wait();<span class="comment">//线程等待</span></span><br><span class="line">            &#125;<span class="keyword">catch</span> (InterruptedException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        products[top++]=product;<span class="comment">//将货物放入</span></span><br><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">&quot;生产了产品&quot;</span>+product);</span><br><span class="line">        System.out.println(<span class="string">&quot;Producer notifyAll&quot;</span>);</span><br><span class="line">        notifyAll();<span class="comment">//唤醒所有等待线程，就是当仓库为0的时候，消费者需要等待，提示消费者放货了，唤醒等待的消费者线程</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//消费者取货</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> Product <span class="title function_">pop</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (top==<span class="number">0</span>)&#123;<span class="comment">//如果此时没有货</span></span><br><span class="line">            <span class="keyword">try</span>&#123;<span class="comment">//一直等待，等待产品生产</span></span><br><span class="line">                System.out.println(<span class="string">&quot;consumer wait&quot;</span>);</span><br><span class="line">                wait();</span><br><span class="line">            &#125;<span class="keyword">catch</span> (InterruptedException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        --top;<span class="comment">//货物-1，下标偏移过去</span></span><br><span class="line">        Product p=<span class="keyword">new</span> <span class="title class_">Product</span>(products[top].getId(),products[top].getName());<span class="comment">//返回产品信息</span></span><br><span class="line">        products[top]=<span class="literal">null</span>;<span class="comment">//将产品清除</span></span><br><span class="line">        System.out.println(Thread.currentThread().getName()+<span class="string">&quot; 消费了产品&quot;</span>+p);</span><br><span class="line">        System.out.println(<span class="string">&quot;consumer notifyAll&quot;</span>);</span><br><span class="line">        notifyAll();<span class="comment">//如果货物满，生产者就无法生产，取出就可以了，唤醒等待的生产者线程</span></span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Producer</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Storage storage;<span class="comment">//仓库类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Producer</span><span class="params">(Storage storage)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.storage=storage;</span><br><span class="line">    &#125;<span class="comment">//公用的仓库</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">        Random r=<span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">10</span>)&#123;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="type">Product</span> <span class="variable">product</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Product</span>(i,<span class="string">&quot;电话&quot;</span>+r.nextInt(<span class="number">100</span>));<span class="comment">//生成生产产品信息</span></span><br><span class="line">            storage.push(product);<span class="comment">//放入产品，</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Product</span>&#123;<span class="comment">//产品的信息类</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Product</span><span class="params">(<span class="type">int</span> id, String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;(产品ID：&quot;</span>+id+<span class="string">&quot; 产品名称 &quot;</span>+name+<span class="string">&quot; )&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Consumer</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Storage storage;<span class="comment">//仓库类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Consumer</span><span class="params">(Storage storage)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.storage=storage;<span class="comment">//公用的仓库</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;<span class="number">10</span>)&#123;</span><br><span class="line">            i++;</span><br><span class="line">            storage.pop();<span class="comment">//取出产品</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            &#125;<span class="keyword">catch</span> (InterruptedException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AE%A1%E7%A8%8B%E5%B0%8F%E7%BB%93.png" alt=""></p><h2 id="死锁的概念">死锁的概念</h2><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%AD%BB%E9%94%81%E7%9A%84%E6%A6%82%E5%BF%B5.png" alt=""></p><h3 id="什么是死锁">什么是死锁</h3><p>在哲学家干饭问题中，假设五个人同时拿起了左边的筷子，那么五个人会一直等待右边的筷子，资源一直在等待，便是死锁</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">semaphore chopstick[]=&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line">Pi()&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        P(chopstick[i]);</span><br><span class="line">        P(chopstick[(i+<span class="number">1</span>)%<span class="number">5</span>]);</span><br><span class="line">        吃饭...;</span><br><span class="line">        V(chopstick[i]);</span><br><span class="line">        V(chopstick[(i+<span class="number">1</span>)%<span class="number">5</span>]);</span><br><span class="line">        思考...;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在并发环境下，各进程因竞争资源而造成的一种互相等待对方手里的资源，导致各进程都阻塞，都无法向前推进的现象，就是“死锁”。发生死锁后若无外力干涉，这些进程都将无法向前推进。</p><h3 id="死锁、饥饿、死循环问题">死锁、饥饿、死循环问题</h3><p>死锁：各进程互相等待对方手里的资源，导致各进程都阻塞，无法向前推进的现象。</p><p>饥饿：由于长期得不到想要的资源，某进程无法向前推进的现象。比如：在短进程优先（SPF）算法中，若有源源不断的短进程到来，则长进程将一直得不到处理机，从而发生长进程“饥饿”。</p><p>死循环：某进程执行过程中一直跳不出某个循环的现象。有时是因为程序逻辑bug导致的，有时是程序员故意设计的。</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%AD%BB%E9%94%81%E3%80%81%E9%A5%A5%E9%A5%BF%E3%80%81%E6%AD%BB%E5%BE%AA%E7%8E%AF%E7%9A%84%E5%8C%BA%E5%88%AB.png" alt=""></p><h3 id="死锁产生条件">死锁产生条件</h3><p>死锁产生必须同时满足以下四个必要条件</p><p>==互斥条件==：只有对必须互斥使用的资源的争抢才会导致死锁（如哲学家的筷子、打印机设备）。像内存、扬声器这样可以同时让多个进程使用的资源是不会导致死锁的（因为进程不用阻塞等待这种资源）。</p><p>==不剥夺条件==：进程所获得的资源在未使用完之前，==不能由其他进程强行夺走==，只能主动释放。</p><p>==请求和保持条件==：进程==已经保持了至少一个资源==，但又提出了新的资源==请求==，而该资源又被其他进程占有，此时请求进程被阻塞，但又对自己已有的资源保持不放。</p><p>==循环等待条件==：存在一种进程==资源的循环等待链==，链中的每一个进程已获得的资源同时被下一个进程所请求</p><p>==注意！发生死锁时一定有循环等待，但是发生循环等待时未必死锁==（循环等待是死锁的必要不充分条件）</p><p>如果同类资源数大于1，则即使有循环等待，也未必发生死锁（可能会出现别的进程持有多出的该资源，然后释放，于是就不会死锁）。但如果系统中每类资源都只有一个，那循环等待就是死锁的充分必要条件了。</p><h3 id="什么时候发生死锁">什么时候发生死锁</h3><ol><li><p>对系统资源的竞争。各进程对不可剥夺的资源（如打印机）的竞争可能引起死锁，对可剥夺的资源（CPU）的竞争是不会引起死锁的。</p></li><li><p>进程推进顺序非法。请求和释放资源的顺序不当，也同样会导致死锁。例如，并发执行的进程P1、P2分别申请并占有了资源R1、R2，之后进程P1又紧接着申请资源R2，而进程P2又申请资源R1，两者会因为申请的资源被对方占有而阻塞，从而发生死锁。</p></li><li><p>信号量的使用不当也会造成死锁。如生产者-消费者问题中，如果实现互斥的P操作在实现同步的P操作之前，就有可能导致死锁。（可以把互斥信号量、同步信号量也看做是一种抽象的系统资源）</p></li></ol><p>总之，对不可剥夺资源的不合理分配，可能导致死锁。</p><h3 id="死锁的预防处理策略">死锁的预防处理策略</h3><ol><li><p>预防死锁。破坏死锁产生的四个必要条件中的一个或几个。</p></li><li><p>避免死锁。用某种方法防止系统进入不安全状态，从而避免死锁（银行家算法）</p></li><li><p>死锁的检测和解除。允许死锁的发生，不过操作系统会负责检测出死锁的发生，然后采取某种措施解除死锁。</p></li></ol><h3 id="小结-10">小结</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BB%80%E4%B9%88%E6%98%AF%E6%AD%BB%E9%94%81%E7%9A%84%E5%B0%8F%E7%BB%93.png" alt=""></p><h2 id="死锁的处理方式—预防死锁">死锁的处理方式—预防死锁</h2><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E9%A2%84%E9%98%B2%E6%AD%BB%E9%94%81%E7%9A%84%E6%96%B9%E5%BC%8F.png" alt=""></p><h3 id="破坏互斥条件">破坏互斥条件</h3><p>==互斥条件==：只有对必须互斥使用的资源的争抢才会导致死锁。</p><p>如果把只能互斥使用的资源改造为允许共享使用，则系统不会进入死锁状态。比如:==SPOOLing==技术。操作系统可以采用SPOOLing技术把独占设备在逻辑上改造成共享设备。比如，用SPOOLing技术将打印机改造为共享设备…</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/SPOOLing%E6%8A%80%E6%9C%AF.png" alt=""></p><p>该策略的==缺点==：并不是所有的资源都可以改造成可共享使用的资源。并且为了系统安全，很多地方还必须保护这种互斥性。因此，==很多时候都无法破坏互斥条件==。</p><h3 id="破坏不剥夺条件">破坏不剥夺条件</h3><p>==不剥夺条件==：进程所获得的资源在未使用完之前，不能由其他进程强行夺走，只能主动释放。</p><p>破坏不剥夺条件：</p><p>方案一：当某个进程请求新的资源得不到满足时，它必须立即释放保持的所有资源，待以后需要时再重新申请。也就是说，即使某些资源尚未使用完，也需要主动释放，从而破坏了不可剥夺条件。</p><p>方案二：当某个进程需要的资源被其他进程所占有的时候，可以由操作系统协助，将想要的资源强行剥夺。这种方式一般需要考虑各进程的优先级（比如：剥夺调度方式，就是将处理机资源强行剥夺给优先级更高的进程使用）</p><p>该策略的缺点：</p><ol><li><p>实现起来比较复杂。</p></li><li><p>释放已获得的资源可能造成前一阶段工作的失效。因此这种方法一般只适用于易保存和恢复状态的资源，如CPU。</p></li><li><p>反复地申请和释放资源会增加系统开销，降低系统吞吐量。</p></li><li><p>若采用方案一，意味着只要暂时得不到某个资源，之前获得的那些资源就都需要放弃，以后再重新申请。如果一直发生这样的情况，就会导致进程饥饿。</p></li></ol><h3 id="破坏请求和保持条件">破坏请求和保持条件</h3><p>==请求和保持条件==：进程已经==保持了至少一个资源==，但又提出了新的资源请求，而该资源又被其他进程占有，此时请求进程被阻塞，但又对自己已有的资源保持不放。</p><p>可以==采用静态分配方法==，即进程在运行前一次申请完它所需要的全部资源，在它的资源未满足前，不让它投入运行。一旦投入运行后，这些资源就一直归它所有，该进程就不会再请求别的任何资源了。</p><p>该策略实现起来简单，但也有明显的==缺点==：</p><p>有些资源可能只需要用很短的时间，因此如果进程的整个运行期间都一直保持着所有资源，就会造成严重的资源浪费，资源利用率极低。另外，该策略也有可能导致==某些进程饥饿==。</p><h3 id="破坏和循环等待条件">破坏和循环等待条件</h3><p>循环等待条件：存在==一种进程资源的循环等待链==，链中的每一个进程已获得的资源同时被下一个进程所请求。</p><p>可采用顺序资源分配法。首先给系统中的资源编号，规定每个进程必须按编号递增的顺序请求资源，同类资源（即编号相同的资源）一次申请完。</p><p>原理分析：一个进程只有已占有小编号的资源时，才有资格申请更大编号的资源。按此规则，已持有大编号资源的进程不可能逆向地回来申请小编号的资源，从而就不会产生循环等待的现象。</p><p>该策略的缺点：</p><ol><li><p>不方便增加新的设备，因为可能需要重新分配所有的编号；</p></li><li><p>进程实际使用资源的顺序可能和编号递增顺序不一致，会导致资源浪费；</p></li><li><p>必须按规定次序申请资源，用户编程麻烦。</p></li></ol><h3 id="小结-11">小结</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E9%A2%84%E9%98%B2%E6%AD%BB%E9%94%81%E5%B0%8F%E7%BB%93.png" alt=""></p><h2 id="死锁的处理方式—避免死锁">死锁的处理方式—避免死锁</h2><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E9%81%BF%E5%85%8D%E6%AD%BB%E9%94%81.png" alt=""></p><h3 id="什么是安全序列">什么是安全序列</h3><p>说一个故事：</p><p>假如你是一个成功的企业家，有100亿元的资金在手上</p><p>有三个企业家找你贷款，分别是A、B、C</p><p>A最多找你借70亿</p><p>B最多找你借40亿</p><p>C最多找你借50亿</p><p>同时这三个企业家耍流氓，如果你不刚好借给他们的最大需求，他们就不会还钱（意思是：如果你不借给A 70亿，就算你借给他69亿，他都不会还你钱）</p><p>刚开始，ABC三个企业分别在你这借了20、10、30亿</p><table><thead><tr><th></th><th>最大需求</th><th>已借走</th><th>最多还会借</th></tr></thead><tbody><tr><td>A</td><td>70</td><td>20</td><td>50</td></tr><tr><td>B</td><td>40</td><td>10</td><td>30</td></tr><tr><td>C</td><td>50</td><td>30</td><td>20</td></tr></tbody></table><p>此时你还剩100-20-10-30=40亿</p><p>倘若此时A找你借30亿</p><table><thead><tr><th></th><th>最大需求</th><th>已借走</th><th>最多还会借</th></tr></thead><tbody><tr><td>A</td><td>70</td><td>20+30=50</td><td>50-30=20</td></tr><tr><td>B</td><td>40</td><td>10</td><td>30</td></tr><tr><td>C</td><td>50</td><td>30</td><td>20</td></tr></tbody></table><p>此时你还剩100-20-10-30-30=10亿</p><p>只剩下10亿，那么ABC任意一个企业你都无法满足，所以A找你借，你敢借吗？</p><p>所以，这个30亿，不能借给B</p><p>倘若此时A找你借20亿</p><table><thead><tr><th></th><th>最大需求</th><th>已借走</th><th>最多还会借</th></tr></thead><tbody><tr><td>A</td><td>70</td><td>20+20=40</td><td>50-20=30</td></tr><tr><td>B</td><td>40</td><td>10</td><td>30</td></tr><tr><td>C</td><td>50</td><td>30</td><td>20</td></tr></tbody></table><p>此时你还剩100-20-10-30-20=20亿</p><p>然后C来找你借钱，刚好借完，于是C把钱还给了你，此时你有50亿，50亿就可以轻松满足AB的条件了</p><p>所谓==安全序列==，就是指如果系统按照这种序列分配资源，则每个进程都能顺利完成。只要能找出一个安全序列，系统就是安全状态。==当然，安全序列可能有多个==。</p><p>如果分配了资源之后，系统中找不出任何一个安全序列，系统就进入了==不安全状态==。这就意味着之后可能所有进程都无法顺利的执行下去。当然，如果有==进程提前归还了一些资源==，那==系统也有可能重新回到安全状态==，不过我们在分配资源之前总是要==考虑到最坏的情况==。</p><p>如果系统处于安全状态，就一定不会发生死锁。如果系统进入不安全状态，就可能发生死锁（处于不安全状态未必就是发生了死锁，但发生死锁时一定是在不安全状态）</p><p>因此可以==在资源分配之前预先判断这次分配是否会导致系统进入不安全状态==，以此决定是否答应资源分配请求。这也是“==银行家算法==”的核心思想。</p><h3 id="银行家算法">银行家算法</h3><p>银行家算法是荷兰学者==Dijkstra==为银行系统设计的，以确保银行在发放现金贷款时，不会发生不能满足所有客户需要的情况。后来该算法被用在操作系统中，用于避免死锁。</p><p>==核心思想==：在进程提出资源申请时，先预判此次分配是否会导致系统进入不安全状态。如果会进入不安全状态，就暂时不答应这次请求，让该进程先阻塞等待。</p><p>在面对计算机各类各样资源中，我们如何使用该算法思想呢？</p><p>可以把单维的数字拓展为多维的向量。比如：系统中有5个进程P0~P4，3种资源R0~R2，初始数量为(10,5,7)，则某一时刻的情况可表示如下：</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E9%93%B6%E8%A1%8C%E5%AE%B6%E7%AE%97%E6%B3%95%E5%88%86%E9%85%8D%E8%A1%A8.png" alt=""></p><p>我们先计算出==已经分配的资源数(7,2,5),还剩余资源(3,3,2)==</p><p>把最大需求、已分配的数据看作矩阵，两矩阵相减，就可算出各进程最多还需要多少资源了</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E9%93%B6%E8%A1%8C%E5%AE%B6%E7%AE%97%E6%B3%95%E5%88%86%E9%85%8D%E8%A1%A82.png" alt=""></p><p>判断进程是否处于安全序列</p><p>==循环依次==检查剩余可用资源(3,3,2)是否能满足各进程的需求</p><ol><li><p>和P0对比，发现无法满足P0的最大需求</p></li><li><p>和P1对比，发现可以满足P1的最大需求，于是我们把资源分配给P1，P1使用完归还已分配资源，剩余资源便是==(5,3,2)==,于是将P1==加入安全序列==，然后继续==循环依次==检查剩余可用资源是否能满足剩余进程（不包括已加入安全序列的进程），于是==回到开头==</p></li><li><p>和P0对比，发现无法满足P0的最大需求</p></li><li><p>和P2对比，发现无法满足P2的最大需求</p></li><li><p>和P3对比，发现能满足P3的最大需求，把资源分配给P3，==P3加入安全序列==，剩余资源此时为==(7,4,3)==，回到开头</p></li><li><p>和P0对比，发现可以满足，资源分配给P0，==P0加入安全序列==，剩余资源为==(7,5,3)==，回到开头</p></li><li><p>和P2对比，发现可以满足，资源分配给P2，==P2加入安全序列==，剩余资源此时为==(10,5,5)==，回到开头</p></li><li><p>和P4对比，发现可以满足，资源分配给P4，==P4加入安全序列==，剩余资源为==(10,5,7)==</p><p>因此安全序列为==P1,P3,P0,P2,P4==</p></li></ol><p>实际做题（手算）时可用更快速的方法找到一个安全序列：</p><p>经对比发现，（3,3,2）可满足P1、P3，说明无论如何，这两个进程的资源需求一定是可以依次被满足的，因此P1、P3一定可以顺利的执行完，并归还资源。可把P1、P3先加入安全序列。</p><p>(2,0,0)+(2,1,1)+(3,3,2)=(7,4,3)</p><p>剩下的P0、P2、P4都可被满足。同理，这些进程都可以加入安全序列。</p><p>于是，5个进程全部加入安全序列，说明此时系统==处于安全状态，暂不可能发生死锁==。</p><p>于是就直接贪心</p><p>假设在相同的P1，P3情况下，我们改变P0，P2，P4的进程需求</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E9%93%B6%E8%A1%8C%E5%AE%B6%E7%AE%97%E6%B3%95%E5%88%86%E9%85%8D%E8%A1%A83.png" alt=""></p><p>经对比发现，（3,3,2）可满足P1、P3，说明无论如何，这两个进程的资源需求一定是可以依次被满足的，因此P1、P3一定可以顺利的执行完，并归还资源。</p><p>可把P1、P3先加入安全序列。(2,0,0)+(2,1,1)+(3,3,2)=(7,4,3)</p><p>剩下的P0需要(8,4,3)，P2需要(6,5,0)，P4需要(4,3,4)。任何一个进程都不能被完全满足</p><p>于是，无法找到任何一个安全序列，==说明此时系统处于不安全状态，有可能发生死锁==。</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E9%93%B6%E8%A1%8C%E5%AE%B6%E7%AE%97%E6%B3%95%E7%9A%84%E8%AE%BE%E8%AE%A1.png" alt=""></p><p>代码实现</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">5</span>,M = <span class="number">3</span>;</span><br><span class="line"><span class="comment">//5个进程 3个资源 </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n=<span class="number">5</span>,m=<span class="number">3</span>;</span><br><span class="line"><span class="type">int</span> MAX[N][M]=&#123;<span class="comment">//最大需求矩阵MAX </span></span><br><span class="line">    &#123;<span class="number">7</span>,<span class="number">5</span>,<span class="number">3</span>&#125;,</span><br><span class="line">    &#123;<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="number">9</span>,<span class="number">0</span>,<span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="number">4</span>,<span class="number">3</span>,<span class="number">3</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> ALLOCATION[N][M]=&#123;<span class="comment">//分配矩阵ALLOCATION </span></span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">3</span>,<span class="number">0</span>,<span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> NEED[N][M],AVAILABLE[M]=&#123;<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span><span class="comment">//初始化NEED矩阵 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">            NEED[i][j] = MAX[i][j]-ALLOCATION[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> work[],<span class="type">int</span> i)</span><span class="comment">//判断现有资源是否可以分配给线程PI</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(work[j]&lt;NEED[i][j]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> path[N];<span class="comment">//安全序列</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">is_OK</span><span class="params">()</span></span>&#123;<span class="comment">//寻找安全序列 </span></span><br><span class="line">    <span class="type">int</span> work[M];<span class="comment">//可分配资源WORK</span></span><br><span class="line">    <span class="built_in">memcpy</span>(work,AVAILABLE,<span class="keyword">sizeof</span> AVAILABLE);</span><br><span class="line">    <span class="type">bool</span> st[N];<span class="comment">//判断进程是否被执行</span></span><br><span class="line">    <span class="built_in">memset</span>(st,<span class="literal">false</span>,<span class="keyword">sizeof</span> st);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> t = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!st[j]&amp;&amp;<span class="built_in">check</span>(work,j))&#123;</span><br><span class="line">                t = j;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">-1</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;系统不安全！&quot;</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        st[t] = <span class="literal">true</span>;</span><br><span class="line">        path[i]=t;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">            work[j]+=ALLOCATION[t][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;安全序列为：&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cout&lt;&lt;path[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> ; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solves</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> t = path[i];</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;进程 &quot;</span>&lt;&lt;t&lt;&lt;<span class="string">&quot;执行！&quot;</span>&lt;&lt;endl; </span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">            AVAILABLE[j] -=NEED[t][j];</span><br><span class="line">            ALLOCATION[t][j]+=NEED[t][j];</span><br><span class="line">            NEED[t][j]=<span class="number">0</span>;   </span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;进程 &quot;</span>&lt;&lt;t&lt;&lt;<span class="string">&quot;执行完毕！&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;m;j++)</span><br><span class="line">        AVAILABLE[j]+=ALLOCATION[t][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    <span class="built_in">is_OK</span>();</span><br><span class="line">    <span class="built_in">solves</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="小结-12">小结</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E9%93%B6%E8%A1%8C%E5%AE%B6%E7%AE%97%E6%B3%95%E5%B0%8F%E7%BB%93.png" alt=""></p><h2 id="死锁的检测与解除">死锁的检测与解除</h2><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%AD%BB%E9%94%81%E7%9A%84%E6%A3%80%E6%B5%8B%E4%B8%8E%E8%A7%A3%E9%99%A4.png" alt=""></p><p>如果系统中既不采取预防死锁的措施，也不采取避免死锁的措施，系统就很可能发生死锁。</p><h3 id="死锁的检测">死锁的检测</h3><p>在这种情况下，系统应当提供两个算法：</p><p>①死锁检测算法：用于检测系统状态，以确定系统中是否发生了死锁。</p><p>②死锁解除算法：当认定系统中已经发生了死锁，利用该算法可将系统从死锁状态中解脱出来。</p><p>为了能对系统是否已发生了死锁进行检测，必须：</p><p>①用==某种数据结构==来保存资源的请求和分配信息；</p><p>②提供一种算法，利用上述信息来检测系统是否已进入死锁状态。</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%AD%BB%E9%94%81%E7%AE%97%E6%B3%95%E5%AE%9A%E4%B9%89.png" alt=""></p><p>第一眼看过去是前向星定义一下，然后是有向图，同时还要开个数组存资源</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%AD%BB%E9%94%81%E6%A3%80%E6%B5%8B%E5%9B%BE.png" alt=""></p><p>在上图中</p><ol><li>P1进程请求了一个R2资源，但是R2资源有两个，分配给P2一个还有一个，所以P1不会阻塞。P2进程需要1个R1资源，R1有3个资源，分配给了P1两个，P2一个，于是P2不能执行下去，P1可以执行下去，==P1执行完后，归还所有资源，于是干掉和P1相关的边==</li></ol><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%AD%BB%E9%94%81%E6%A3%80%E6%B5%8B%E5%9B%BE2.png" alt=""></p><ol start="2"><li>此时R1有三个资源，分配给了P2一个，P2请求R1的资源，所以P2可以完成，该图不会发生死锁，于是干掉和P2相关的边</li></ol><p>下面是严谨描述：</p><ol><li><p>在资源分配图中，找出既不阻塞又不是孤点的进程Pi（即找出一条==有向边与它==相连，且==该有向边对应资源==的申请数量==小于等于系统中已有空闲资源数量==（申请资源小于其分配资源）。上图，R1没有空闲资源，R2有一个空闲资源。若所有的连接该进程的边均满足上述条件，==则这个进程==能继续运行直至完成，然后释放它（进程）所占有的所有资源）。消去它（P1）所有的请求边和分配变，使之称为孤立的结点。、</p></li><li><p>进程Pi所释放的资源，可以唤醒某些因等待这些资源而阻塞的进程，原来的阻塞进程可能变为非阻塞进程。在图中，P2就满足这样的条件。根据1）中的方法进行一系列简化后，若能消去途中所有的边，则称该图是可完全简化的。</p></li></ol><p>如果系统中剩余的可用资源数足够满足进程的需求，那么这个进程暂时是不会阻塞的，可以顺利地执行下去。</p><p>如果这个进程执行结束了把资源归还系统，就可能使某些正在等待资源的进程被激活，并顺利地执行下去。</p><p>相应的，这些被激活的进程执行完了之后又会归还一些资源，这样可能又会激活另外一些阻塞的进程…</p><p>如果按上述过程分析，最终能==消除所有边==，就称这个图是==<font color=red>可完全简化</font>==的。此时==一定没有发生死锁==（相当于能找到一个安全序列）</p><p>如果==最终不能消除所有边，那么此时就是发生了死锁==</p><p>==最终还连着边的那些进程就是处于死锁状态的进程。==</p><p>==死锁定理：如果某时刻系统的资源分配图是不可完全简化的，那么此时系统死锁==，（有论文证明</p><h3 id="死锁的解除">死锁的解除</h3><p>一旦检测出死锁的发生，就应该立即解除死锁。</p><p>并不是系统中所有的进程都是死锁状态，用死锁检测算法化简资源分配图后，==还连着边的那些进程就是死锁进程==</p><p>解除死锁的主要方法有：</p><ol><li><p>==资源剥夺法==。挂起某些死锁进程（暂时放到外存上），并抢占它的资源，将这些资源分配给其他的死锁进程。但是应防止被挂起的进程长时间得不到资源而饥饿。</p></li><li><p>==撤销进程法（或称终止进程法）==。强制撤销部分、甚至全部死锁进程，并剥夺这些进程的资源。这种方式的优点是实现简单，但所付出的代价可能会很大。因为有些进程可能已经运行了很长时间，已经接近结束了，一旦被终止可谓功亏一篑，以后还得从头再来。=</p></li><li><p>==进程回退法==。让一个或多个死锁进程回退到足以避免死锁的地步。这就要求系统要记录进程的历史信息，设置还原点。</p></li></ol><p>根据哪些因素干掉死锁</p><ol><li><p>进程优先级（干掉低的）</p></li><li><p>已执行多长时间 （时间越长，撤销代价大，毕竟还要再来重启）</p></li><li><p>还要多久能完成 （快完成的尽量不干掉）</p></li><li><p>进程已经使用了多少资源 （进程用的资源越多，涉及到的局面越复杂，优先干掉他，能更快解决问题）</p></li><li><p>进程是交互式的还是批处理式的（交互式的进程干掉对用户很不爽，批处理式用户对其的反馈较少）</p></li></ol><h3 id="小结-13">小结</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%AD%BB%E9%94%81%E6%A3%80%E6%B5%8B%E8%A7%A3%E9%99%A4%E5%B0%8F%E7%BB%93.png" alt=""></p>]]></content>
    
    
    <summary type="html">操作系统(二):进程管理</summary>
    
    
    
    <category term="考研" scheme="http://1804040636.github.io/categories/%E8%80%83%E7%A0%94/"/>
    
    
    <category term="考研" scheme="http://1804040636.github.io/tags/%E8%80%83%E7%A0%94/"/>
    
    <category term="操作系统" scheme="http://1804040636.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>操作系统(一):计算机系统概述</title>
    <link href="http://1804040636.github.io/2023/02/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
    <id>http://1804040636.github.io/2023/02/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%B8%80%E7%AB%A0/</id>
    <published>2023-02-02T02:29:15.000Z</published>
    <updated>2023-03-04T19:16:10.113Z</updated>
    
    <content type="html"><![CDATA[<h1>计算机系统概述</h1><h2 id="操作系统的与功能">操作系统的与功能</h2><h3 id="操作系统的概念和定义">操作系统的概念和定义</h3><p>​一台电脑的诞生：</p><ol><li>厂家组装一台裸机</li><li>出售前安装操作系统</li><li>用户安装应用程序</li><li>用户使用应用程序</li></ol><p>​<img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E7%9A%84%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B.png" alt="一台电脑的安装过程"></p><p>定义：<font color=red>操作系统</font>是指控制和<font color=red>管理</font>整个计算机系统的<font color=red>硬件和软件</font>资源，并合理地组织调度计算机的工作和资源的分配；以<font color=red>提供给用户和其他软件方便的接口和环境</font>；它是计算机中最基本的<font color=red>系统软件</font>。</p><p>​操作系统是系统资源的管理者：系统资源包含硬件软件资源</p><p>例如：打开Windows操作系统的“任务管理器”（快捷键：ctrl+alt+del）</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86%E5%99%A8.png" alt="任务管理器"></p><p><font color=red>操作系统</font>是指控制和<font color=red>管理</font>整个计算机系统的<font color=red>硬件和软件</font>资源，并合理地组织调度计算机的工作和资源的分配</p><p>例如：</p><p>从进程来看，操作系统可以对软件进行管理</p><p>从进程里的CPU可以看到操作系统同时对硬件也在管理</p><p>以<font color=red>提供给用户和其他软件方便的接口和环境</font></p><p>意思：操作系统要向上层提供方便易用的服务，比如用户和应用程序</p><p>它是计算机中最基本的<font color=red>系统软件</font>。</p><p>例如：</p><p>操作系统是一个软件，而非硬件，但操作系统是最接近硬件的软件</p><h3 id="操作系统的功能与目标">操作系统的功能与目标</h3><h4 id="作为系统资源的管理者要做的事情">作为系统资源的管理者要做的事情</h4><p>用QQ和朋友视频聊天的过程</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%AE%A1%E7%90%86%E8%80%85.png" alt="操作系统的管理者"></p><ol><li><p>在各个文件夹找到QQ安装的位置（如：D:/qq/Bin)</p><p>​逐层打开文件夹，找到QQ.exe。这里的文件管理由操作系统完成的，也就是文件管理的功能</p></li></ol><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/qq%E5%AE%89%E8%A3%85%E8%B7%AF%E5%BE%84.png" alt="qq安装路径"></p><ol start="2"><li><p>双击打开QQ.exe</p><p>执行一个程序前，<font color=red>需要将该程序放到内存中</font>，才能被cpu处理</p><p>在这里，操作系统将QQ程序放入到了内存中去处理，也就是存储器管理</p></li><li><p>QQ程序正常运行</p><p>qq程序运行过程中，需要被处理机（CPU）处理</p><p>什么时候给qq分配资源就是操作系统的处理机管理</p></li><li><p>开始和朋友视频聊天</p><p>和朋友聊天的时候需要调用摄像头设备，由操作系统决定设备分配给哪些进程，这就是操作系统的设备管理</p></li></ol><h4 id="向上层提供方便易用的服务">向上层提供方便易用的服务</h4><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%94%B5%E8%84%91%E7%BB%93%E6%9E%84.png" alt="电脑结构"></p><ol><li><p>计算机的最底层裸机：只能听得懂二进制指令。人们很难理解，硬件对外的接口对于人来说是不友好的交互接口</p></li><li><p>在硬件之上，安装了操作系统，操作系统相对于人来说是友好的交互接口</p></li><li><p>安装操作系统后，我只需要告诉操作系统我们需要的功能，操作系统将功能转化。这里有个简单的封装思想：操作系统把一些丑陋的硬件功能封装成简单易用的服务，使用户可以更方便的使用计算机，用户无需关心底层硬件的原理，只需要对操作系统发出命令即可。</p></li></ol><h5 id="GUI：图形化用户接口（Graphical-User-Interface）">GUI：图形化用户接口（Graphical User Interface）</h5><p>​用户可以使用形象的图形界面进行操作，而不再需要记忆复杂的命令、参数。</p><p>​例如：在Windows操作系统中，删除一个文件只需要拖拽到回收站中，在Linux中就需要 rf -rf 文件名</p><h5 id="联机命令接口（Windows系统）">联机命令接口（Windows系统）</h5><p>联机命令接口=交互式命令接口  交互式：用户说一句，系统跟着做一句</p><ol><li><p>Win+R</p></li><li><p>输入cmd，按回车，打开命令解释器</p></li><li><p>尝试使用time命令，可以修改系统时间</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/time%E5%91%BD%E4%BB%A4.png" alt="time命令"></p></li></ol><h5 id="脱机命令接口（Windows系统）">脱机命令接口（Windows系统）</h5><p>联机命令接口=批处理式命令接口  批处理式：用户说一堆，系统做一堆</p><p>​使用搜索功能，搜索c盘的*.bat文件，记事本形式打开任意一个</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/bat.png" alt="bat"></p><h5 id="程序接口">程序接口</h5><p>​可以在程序中进行<font color=red>系统调用</font>来使用程序接口。普通用户不能直接使用程序接口，只能通过程序代码<font color=red>间接</font>使用。</p><p>​例如在写c语言程序时，在printf函数的底层就使用到了操作系统提供的显示相关的”系统调用“</p><p>​系统调用类似于函数调用，是应用程序请求操作系统服务的唯一方式</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/c%E8%B0%83%E7%94%A8.png" alt="c调用"></p><p>​在有的教材中，系统调用=广义指令</p><h5 id="小结">小结</h5><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%B8%8A%E5%B1%82%E6%9C%8D%E5%8A%A1%E5%B0%8F%E7%BB%93.png" alt="上层服务小结"></p><p>有的教材中，会把命令接口与程序接口统称用户接口（不包括GUI）</p><h4 id="最接近硬件的层次">最接近硬件的层次</h4><p>需要实现对硬件机器的拓展</p><p>没有任何软件支持的计算机称之为逻辑。在裸机上安装的操作系统，可以提供资源管理功能和方便用户的服务功能，将裸机改造成功能更强、使用更方便的机器</p><p>通常把覆盖了软件的机器称为扩充机器，又称为虚拟机</p><p>重点：为什么操作系统可以实现对硬件机器的拓展</p><p>例：汽车</p><p>​发动机——会转；轮胎——只会滚</p><p>​在原始的硬件机器上覆盖一层传动系统——让发动机带着轮子转——使原始的机器得到拓展</p><p>​操作系统对硬件机器的拓展：将CPU、内存、磁盘、显示器、键盘等硬件合理的组织起来，让各种硬件可以能够相互协调配合，实现更多复杂的功能</p><h4 id="小结-2">小结</h4><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%E5%B0%8F%E7%BB%93.png" alt="操作系统第一部分小结"></p><h2 id="操作系统的四个特征">操作系统的四个特征</h2><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9B%9B%E4%B8%AA%E7%89%B9%E5%BE%81.png" alt="操作系统四个特征"></p><h3 id="并发">并发</h3><p>并发是指两个或多个事件在同一时间间隔内发生。这些事件<font color=red>宏观上是同时发生</font>的，但<font color=red>微观上是交替发生</font>的</p><p>常考易混淆概念——<font color=red>并行</font>：指两个或多个事件在同一时刻同时发生。</p><p>并发VS 并行</p><p>【例】：邶风非常喜欢吃薯条和炸豆腐。任务1：吃薯条。任务2：吃豆腐。</p><p>​并行：邶风在9点同时吃薯条和豆腐</p><p>​并发：邶风在9点先吃完薯条，接下来10点再吃豆腐</p><p>宏观上看，邶风今天吃了薯条和豆腐，微观上看，邶风是先吃的薯条再吃的豆腐，所以这就是宏观上同时发生，微观上交替发生</p><p><font color=red>操作系统的并发性</font>指计算机系统中“同时”运行着多个程序，这些程序看上去是同时运行着，而微观上是交替运行着的</p><p>操作系统就是伴随着“多道程序技术”而出现的。因此，<font color=red>操作系统与程序并发是一同诞生的</font></p><p>【注】（重要考点）</p><p>​<font color=red>单核cpu</font>同一时刻只能执行<font color=red>一个程序</font>，各个程序只能<font color=red>并发</font>地执行</p><p>​<font color=red>多核cpu</font>同一时刻可以同时执行<font color=red>多个程序</font>，各个程序可以<font color=red>并行</font>地执行</p><p>​例如Intel的第八代i3处理器就是<font color=red>4核cpu</font>，意味着可以<font color=red>并行地执行4个程序</font></p><p>假如此时我在该cpu中，登录qq，使用word，使用浏览器，使用微信。此时我再想听歌的时候，我们必须剥夺某一个程序对cpu的使用权，然后这两个程序交替使用cpu，</p><p>即便是对于4核cpu来说，只要有4个以上的程序需要“同时”运行，那么并发性依然是必不可少的。因此<font color=red>并发性是操作系统的一个最基本特征</font></p><h3 id="共享">共享</h3><p><font color=red>共享</font>即资源共享，是指系统中的资源可供内存中多个并发执行的进程共同使用。</p><h4 id="资源共享方式">资源共享方式</h4><ol><li>互斥共享方式：系统中的某些资源，虽然可以提供给多个进程使用，但<font color=red>一个时间段只允许一个进程访问该资源</font></li><li>同时共享方式：系统中的某些资源，<font color=red>允许一个时间段内由多个进程&quot;同时&quot;对它们进行访问</font></li></ol><p>所谓的&quot;同时&quot;往往是宏观上的，而在微观上，这些进程可能是交替的对该资源进行访问的（即分时共享）</p><p>生活实例：</p><p>​互斥共享方式：使用qq和微信视频。同一时间段内摄像头只能分配给其中一个进程。</p><p>​同时共享方式：使用qq发送文件A，同时使用微信发送文件B。宏观上看，两边都在同时读取并发送文件，说明两个进程都在访问硬盘资源，从中读取数据。微观上看，两个进程是交替着访问硬盘的</p><h3 id="并发与共享的关系">并发与共享的关系</h3><p><font color=red>并发性</font>指计算机系统中同时存在着多个运行着的程序。</p><p><font color=red>共享性</font>是指系统中的资源可供内存中多个并发执行的进程共同使用</p><p>例如：从qq发送文件A，微信发送文件B。</p><ol><li><p>两个进程正在并发执行（并发性）</p></li><li><p>需要共享的访问硬盘资源（共享性)</p><p>​如果系统中失去了并发性，那么同一时间段只能有一个程序运行，那么共享性就失去了它存在的意义</p><p>​如果系统中失去了共享性，那么微信和qq就无法同时访问硬盘资源，也就无法同时发送文件，便无法并发</p></li></ol><p><font color=red>并发和共享互为存在条件</font></p><h3 id="虚拟">虚拟</h3><p><font color=red>虚拟</font>是指把一个物理上的实体变为若干个逻辑上的对应物。物理（实体）前者是存在的，而逻辑上对应物（后者）是用户感受到的。</p><p>例如：</p><p>一个程序<font color=red>需要放入内存</font>并给它<font color=red>分配CPU</font>才能执行</p><p>例1：假设QQ需要256MB的内存，百度云需要256MB的内存，网易云需要256MB的内存，WallPaper需要2GB的内存…</p><p>我的电脑 2GB内存</p><p>问题：这些程序同时运行需要的内存远大于2GB，那么为什么它们可以在我的电脑上同时运行呢</p><p>这就是采用了==虚拟存储器技术（空分复用技术）==第三章重点描述。实际只有2GB内存，但用户看来远远大于2GB</p><p>例2：某单核计算机中，用户同时打开了浏览器，程序编译器，qq，网易云音乐</p><p>问题：既然一个程序需要被分配CPU才能正常执行，为什么单核cpu的电脑中可以同时运行这么多个程序呢</p><p>这是==虚拟处理器技术（时分复用技术）==。实际上只有一个单核CPU，在用户看来有多个CPU同时为自己服务</p><p>虚拟技术中的时分复用技术。在微观上处理机在各个微小的时间段内交替着为各个进程服务</p><p>显然，如果失去了并发性，则一个系统内只需要运行一道程序，那么就失去了实现虚拟性的意义了。因此，没有并发性，就谈不上虚拟性</p><h3 id="异步">异步</h3><p><font color=red>异步</font>是指，在多道程序环境下，允许多个程序并发执行，但由于资源有限，进程的执行不是一贯到底的，而是走走停停，以不可预知的速度向前推进，这就是进程的异步性</p><p>就比如有二个应用需要使用打印机资源，应用A使用了打印机资源，应用B就不能使用打印机资源，就堵塞了，等到应用A结束，应用B去抢占打印机资源</p><p>如果失去了并发性，系统只有串行的运行各个程序，那么每个程序的执行会一贯到底，<font color=red>只有拥有并发性，才会可能导致异步性</font></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%B0%8F%E7%BB%93.png" alt="小结"></p><p>并发和共享互为存在条件，没有并发和共享，就不能存在虚拟和异步。因此并发与共享是操作系统的两个最基本特征</p><h2 id="操作系统的发展与分类">操作系统的发展与分类</h2><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%8F%91%E5%B1%95%E4%B8%8E%E5%88%86%E7%B1%BB%E6%A6%82%E8%A7%88.png" alt="操作系统的发展与分类概览"></p><h3 id="手工操作阶段">手工操作阶段</h3><p>该阶段操作系统还没有诞生，程序员将自己的代码二进制写在纸带机上，纸袋上的孔代表0，非孔代表1。计算机从纸袋机中读取程序，再将运行结果输出到纸袋机中，程序员从纸袋机中取走运行结果</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%BA%B8%E8%A2%8B%E6%9C%BA.png" alt="纸袋机"></p><p>可以看出纸袋机的效率是非常低的，同时等第一个程序员使用完后，第二个程序员才能接着使用</p><p>主要缺点:用户独占全机、人机速度矛盾导致资源利用率极低。</p><h3 id="批处理阶段——单道处理系统">批处理阶段——单道处理系统</h3><p>该阶段是操作系统的雏形，引入<font color=red>脱机输入/输出技术</font>（用外危机+磁带完成），并由<font color=red>监督程序</font>负责控制作业的输入、输出</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%8D%95%E9%81%93%E5%A4%84%E7%90%86.png" alt="单道处理"></p><p>程序员把程序放在纸袋机，外围机将纸袋机里的数据放在磁带中，计算机直接从磁带中读取数据，由监督程序控制着磁带输入输出</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%8D%95%E9%81%93%E7%9A%84%E6%97%B6%E9%97%B4.png" alt="单道的时间"></p><p>优点：缓解了一定的人机速度矛盾，资源利用率有所提升</p><p>缺点：<font color=red>内存中仅能有一道程序运行</font>，只有该程序运行结束之后才能调入下一道程序。<font color=red>cpu有大量的时间是在空闲等待I/O完成</font>。资源利用率依然很低</p><h3 id="批处理阶段——多道处理系统">批处理阶段——多道处理系统</h3><p>该阶段操作系统正式诞生。每次往内存中读入多道程序</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%A4%9A%E9%81%93%E5%A4%84%E7%90%86%E7%9A%84%E6%97%B6%E9%97%B4.png" alt="多道处理的时间"></p><p>当作业1开始计算时，输入设备空闲，此时让作业2去做输入。</p><p>作业1开始输出时，计算设备空闲，此时可以作业2去做计算，作业3去做输入</p><p>主要优点：多道程序<font color=red>并发</font>执行，<font color=red>共享</font>计算机资源。<font color=red>资源利用率大幅提升</font>，CPU和其他资源更能保持&quot;忙碌&quot;状态，系统吞吐量大</p><p>主要缺点：用户响应时间长，<font color=red>没有人机交互功能</font>（用户提交自己作业后，只能等待计算机处理完成，中间不能控制自己的作业执行。例如：无法调试程序/无法在程序运行中输入一些参数）</p><h3 id="分时操作系统">分时操作系统</h3><p>计算机以<font color=red>时间片</font>为单位轮流<font color=red>为各个用户/作业服务</font>，各个用户可以通过终端与计算机交互。时间片就是说，计算机给用户A50ms服务，用户B50ms服务，用户C 50ms服务</p><p>主要优点：用户请求可以被即时响应，<font color=red>解决了人机交互问题</font>。允许多个用户可以同时使用一台计算机，并且用户对计算机的操作相互独立，感受不到别人的存在。</p><p>主要缺点：<font color=red>不能优先处理一些紧急任务</font>。操作系统对各个用户/作业都是完全公平的，循环地为每个用户/作业服务一个时间片，不区分任务紧急性</p><h3 id="实时操作系统">实时操作系统</h3><p>主要优点：能优先响应一些紧急任务，某些紧急任务不需要时间片排队。</p><p>在实时操作系统的控制下，计算机系统接收到外部信号后，及时进行处理，并且<font color=red>要在严格的时限内处理完事件</font>。实时操作系统的主要特点是<font color=red>及时性和可靠性</font></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%AE%9E%E6%97%B6%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.png" alt="实时操作系统"></p><h3 id="其他操作系统">其他操作系统</h3><h4 id="网络操作系统">网络操作系统</h4><p>是随着计算机网络的发展而诞生的，能把网络中各个计算机有机地结合起来，实现数据传送等功能，<font color=red>实现网络中各资源的共享（如文件共享）和各台计算机之间的通信。</font>如Windows NT就是一种典型的网络操作系统，网站服务器就可以使用）</p><h4 id="分布式操作系统">分布式操作系统</h4><p>主要特点是<font color=red>分布性和并行性</font>。系统中的各台计算机地位相同，<font color=red>任何工作都可以分布在这些计算机上，由它们并行、协同完成这个任务</font></p><h4 id="个人计算机操作系统">个人计算机操作系统</h4><p>如Windows XP、MacOS。方便个人使用</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%8F%91%E5%B1%95%E4%B8%8E%E5%88%86%E7%B1%BB%E5%B0%8F%E7%BB%93.png" alt="操作系统的发展与分类小结"></p><h2 id="操作系统的运行机制">操作系统的运行机制</h2><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6.png" alt="操作系统的运行机制"></p><p>预备知识：程序是如何运行的</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%A8%8B%E5%BA%8F%E5%A6%82%E4%BD%95%E8%BF%90%E8%A1%8C.png" alt="程序如何运行"></p><h4 id="特权指令与非特权指令">特权指令与非特权指令</h4><p>程序执行过程就是CPU一条条执行指令</p><p>“指令” 就是处理器（CPU）能识别、执行的最基本命令</p><p>很多人习惯把Linux、Windows、MacOS的小黑框中使用的命令也称为“指令”，其实这是“交互式命令接口”，注意与本节的“指令”区别开。本节的“指令”指二进制机器指令</p><p>我们普通程序员写的程序就是&quot;<font color=red>应用程序</font>&quot;</p><p>微软、苹果有一些人实现操作系统，他们写的是&quot;<font color=red>内核程序</font>&quot;</p><p>很多内核程序组成&quot;<font color=red>操作系统内核</font>“，或简称”<font color=red>内核</font>&quot;</p><p><font color=red>内核</font>是操作系统最重要最核心的部分，也是<font color=red>最接近硬件的部分</font></p><p>操作系统对系统资源的管理工作就在内核部分完成</p><p>我们甚至可以说，一个操作系统只要内核就够了（例如：docker只要linux内核）</p><p>操作系统的功能未必都在内核中，如图形化用户界面GUI</p><p>操作系统内核作为管理者，有时会让CPU执行一些“特权指令”（影响其他程序运行），如：内存清零指令。这些指令影响重大，只允许“管理者”——即操作系统内核来使用</p><p>应用程序只能使用“非特权指令”，如：加法指令、减法指令等</p><p>在<font color=red>CPU设计和生产的时候就划分了特权指令和非特权指令</font>，因此CPU执行一条指令前就能判断出其类型</p><h4 id="内核态与用户态">内核态与用户态</h4><p>CPU是如何判断出内核程序or应用程序</p><p>CPU有两种状态“<font color=red>内核态</font>”和“<font color=red>用户态</font>”</p><p>处于<font color=red>内核态时</font>，说明此时正在运行的是内核程序，此时<font color=red>可以执行特权指令</font></p><p>处于<font color=red>用户态时</font>，说明此时正在运行的是<font color=red>应用程序</font>，此时<font color=red>只能执行非特权指令</font></p><p>CPU中有一个寄存器叫&quot;<font color=red>程序状态字寄存器（PSW）</font>&quot;，其中有个二进制位，1表示“内核态”，0表示“用户态”</p><p>内核态=核心态=<font color=red>管态</font>用户态=<font color=red>目态</font></p><h4 id="内核态、用户态的切换">内核态、用户态的切换</h4><ol><li><p>刚开机时，CPU为“<font color=red>内核态</font>”，操作系统内核程序先在CPU运行</p></li><li><p>开机完成后，用户可以启动某个应用程序</p></li><li><p>操作系统内核程序会在合适的时候让出CPU，让该应用程序上CPU运行</p><p>操作系统内核在让出CPU之前，会<font color=red>用一条特权指令把PSW的标志位设置为“用户态”</font></p></li><li><p>应用程序运行在“用户态”</p></li><li><p>此时，一位黑客在应用程序植入了一条特权指令，企图破坏系统</p></li><li><p>CPU发现接下来要执行这条指令是特权指令，但是自己又处于“用户态”，CPU知道自己运行的是应用程序，但应用程序居然想要特权指令，胆子太大了，于是直接干掉他</p></li><li><p>这个非法事件会引发“<font color=red>中断信号</font>”</p><p><font color=red>CPU检测到中断信号后</font>，会立即<font color=red>变为“核心态”</font>，并停止运行当前的应用程序，转而运行处理中断信号的内核程序</p></li><li><p>操作系统内核再次夺回CPU控制权</p></li><li><p>操作系统内核程序对中断的事件进行处理，处理完了再把CPU使用权交给别的应用程序</p></li></ol><p><font color=red>内核态变为用户态</font>：执行一条<font color=red>特权指令——修改PSW的标志位为“用户态”</font> 这个动作意味着操作系统主动让出CPU的使用权</p><p><font color=red>用户态变为内核态</font>：由<font color=red>“中断”</font>引发，<font color=red>硬件自动完成变态过程</font>，触发中断信号意味着操作系统将强行夺回CPU的使用权</p><p>除了非法使用特权指令之外，还有很多事件会触发中断信号。一个共性是：<font color=red>但凡需要操作系统介入的地方，都会触发中断信号</font></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6.png" alt="操作系统运行机制"></p><h2 id="中断与异常">中断与异常</h2><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%B8%AD%E6%96%AD%E4%B8%8E%E5%BC%82%E5%B8%B8%E9%A2%84%E8%A7%88.png" alt="中断与异常预览"></p><p>CPU上会运行两种程序，一种是<font color=red>操作系统内核程序</font>，一种是<font color=red>应用程序</font></p><p>在合适的情况下，操作系统内核会把CPU的使用权主动让给应用程序（第二章进程管理）</p><p><font color=red>中断</font> 是<font color=red>操作系统内核夺回CPU使用权</font>的唯一途径</p><p>如果没有“中断机制”，一旦应用程序上CPU运行，CPU就会一直运行这个应用程序，就不会有并发机制</p><h3 id="中断的类型">中断的类型</h3><h4 id="内中断">内中断</h4><p>与当前执行的指令<font color=red>有关</font>，中断信号来源于CPU<font color=red>内部</font></p><ol><li><p>CPU在用户态下执行了一条特权指令，这是在执行指令的过程中切换成了内核态</p></li><li><p>执行除法指令时发现除数为0</p></li><li><p>一个应用程序想请求操作系统的内核服务，应用程序会执行<font color=red>一条特殊的指令——陷入指令</font>，该指令会引发一个内部中断信号。</p><p>系统调用便是陷入指令完成的</p><p>陷入指令不是特权指令，他是在用户态下执行的指令</p></li></ol><p>执行的指令非法，或者执行指令的参数非法，就会产生一个内中断的信号</p><h4 id="外中断">外中断</h4><p>与当前执行的指令<font color=red>无关</font>，中断信号来源于CPU<font color=red>外部</font></p><p>​1. 时钟中断——由时钟部件发来的中断信号，通过该技术可以实现多道程序并发执行</p><p>​时钟部件每隔一段时间便会发送一个中断信号，接下来CPU就会转为内核态，来处理这个中断信号。假设一开始CPU是由应用程序A运行了50ms，中断信号来了后，CPU会切换为内核态处理时钟中断的内核信号，然后检测应用程序A已经运行了50ms，那么接下来就会切换成用户态，交给应用程序B运行。然后时钟再发送中断信号，CPU切换成内核态…然后检测到应用程序B运行了50ms，再切换成用户态让应用程序A运行</p><p><font color=red>每一条指令执行结束时</font>，CPU都会例行检查是否有中断信号</p><h3 id="中断的分类">中断的分类</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%B8%AD%E6%96%AD%E7%9A%84%E5%88%86%E7%B1%BB.png" alt="中断的分类"></p><p>大多数教材与试卷中，中断指狭义的中断，一般是指外中断，而内中断一般称之为异常</p><p>陷入：由陷入指令应发，是应用程序故意引发的，也是系统调用实现的原理</p><p>故障：由错误条件引起的，可能被内核程序修复。内核程序修复故障后会把CPU的使用权还给应用程序，让它继续执行下去。如：缺页故障（第三章）</p><p>终止：由致命错误引起，内核程序无法修复，因此一般不再将CPU使用权还给引发终止的应用程序，而是一般直接把这个程序直接干掉。如：整数除0，非法使用特权指令</p><h3 id="中断机制的基本原理">中断机制的基本原理</h3><p><font color=red>不同的中断信号，需要用不同的中断处理程序来处理</font>。当CPU检测到中断信号后，会根据中断信号查询&quot;<font color=red>中断向量表</font>&quot;，以此来找到相应的中断处理程序在内存中的存放位置</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%B8%AD%E6%96%AD%E5%90%91%E9%87%8F%E8%A1%A8.png" alt="中断向量表"></p><p>中断处理程序一定是内核程序，所以运行在内核态</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%B8%AD%E6%96%AD%E4%B8%8E%E5%BC%82%E5%B8%B8.png" alt="中断与异常"></p><h2 id="系统调用">系统调用</h2><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8.png" alt="系统调用"></p><h3 id="什么是系统调用">什么是系统调用</h3><p>操作系统作为用户和计算机硬件之间的接口，需要向上提供一些简单易用的服务。主要包括命令接口和程序接口。其中，程序接口由一组<font color=red>系统调用</font>组成</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%8F%90%E4%BE%9B%E7%9A%84%E6%8E%A5%E5%8F%A3.png" alt="操作系统提供的接口"></p><p>“系统调用” 是操作系统提供给应用程序(程序员/编程人员)使用的接口，可以理解为是一种可以供应用程序调用的特殊函数，<font color=red>应用程序可以通过系统调用来请求获得操作系统内核的服务</font></p><h3 id="系统调用与库函数的区别">系统调用与库函数的区别</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E4%B8%8E%E5%BA%93%E5%87%BD%E6%95%B0.png" alt="系统调用与库函数"></p><p>写程序的时候可以直接用汇编语言进行系统调用，但现在我们一般是直接使用高级语言的一些库函数</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E5%9B%9B%E5%B1%82.png" alt="系统调用四层"></p><p>裸机之上是操作系统，操作系统向上层提供的接口是系统调用，使得上层程序可以访问操作系统内核</p><p>高级编程语言会用库函数的方式封装系统调用，向程序员提供更好使用的接口</p><p>但不是所有的库函数都会有系统调用</p><p>不涉及系统调用的函数：如 绝对值 函数</p><p>涉及系统调用的函数：如 创建文件 函数</p><h3 id="为什么系统调用是必须的">为什么系统调用是必须的</h3><p>生活场景：去学校打印店打印论文，你按下了word的打印选项，打印机开始工作</p><p>你的论文打印到一半时，另一位同学按下了wps的打印选项，开始打印自己的论文</p><p>wps和word是两个应用程序，是并发地运行</p><p>如果两个进程可以随意地、并发地共享打印机资源，会发生什么？</p><p>两个进程并发运行，打印机设备交替的收到word和wps发来的打印请求，结果两篇论文的内容混杂在一起了</p><p>所以我们希望这些并发的进程共享资源实现互斥</p><p>由操作系统内核对共享资源进行统一的管理，并向上提供“系统调用”</p><p>用户进程想要使用打印机这种共享资源，只能通过系统调用向操作系统内核发出请求。内核会对各个请求进行协调处理，保证并发运行时不会出现奇怪的事情</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E7%9A%84%E5%88%86%E7%B1%BB.png" alt="系统调用的分类"></p><p>应用程序通过<font color=red>系统调用</font>请求操作系统的服务。而系统中的各种资源都由操作系统内核统一掌管，因此<font color=red>凡是与共享资源有关的操作（如存储分配、I/O操作、文件管理等)，都必须通过系统调用的方式向操作系统内核提出服务请求</font>，由操作系统内核代为完成。这样<font color=red>可以保证系统的稳定性和安全性</font>，防止用户进行非法操作</p><h3 id="系统调用的过程">系统调用的过程</h3><ol><li>一个应用程序在用户态下运行，他的指令被cpu依次执行。</li><li>当他想请求系统调用时，他需要用传参数的指令，给CPU的寄存器传入必要的参数(指明系统调用的类型：如&quot;fork&quot;),传入的参数指令可能有多条，主要看系统调用需要几个参数，操作系统通过传入的参数判断需要什么样的服务</li><li>参数放到寄存器后，应用程序就会执行<font color=red>陷入指令</font>，引发内中断，CPU就会暂停应用程序，切换为内核态，执行陷入指令处理程序，也就是系统调用入口程序</li><li>系统调用入口程序检查寄存器的参数，根据寄存器的参数判断用户需要哪种系统调用的程序，然后调用对应系统调用需要的服务程序（eg：寄存器中检测到了fork指令，就去调用fork系统调用处理程序）</li><li>系统调用处理完后，CPU转为用户态，继续处理其他的程序</li></ol><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E4%B8%8E%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8.png" alt="高级编程语言与系统调用"></p><p><font color=red>陷入指令</font>是在<font color=red>用户态</font>执行的，执行陷入指令后立即引发一个<font color=red>内中断</font>，使CPU进入<font color=red>核心态</font></p><p><font color=red>发出系统调用请求</font>是在<font color=red>用户态</font>，而<font color=red>对系统调用的相应处理</font>在<font color=red>核心态</font>下进行</p><p>别名：陷入指令=trap指令=访管指令</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8%E6%80%BB%E7%BB%93.png" alt="系统调用总结"></p><h2 id="操作系统体系结构">操作系统体系结构</h2><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%BC%80%E5%A7%8B.png" alt="操作系统体系结构开始"></p><h3 id="操作系统的内核">操作系统的内核</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84.png" alt=" "></p><p>原语的执行过程中，即使有外部中断信号来了，CPU还是会将原语执行完成后，才会执行系统调用</p><p>Ubuntu、Centos(Linux常见的两个发型版本)的开发团队，其主要功能是实现非内核功能，而内核都是用了Linux内核</p><p><font color=red>内核</font>是操作系统最基本、最核心的部分</p><p>实现操作系统内核功能的那些程序就是<font color=red>内核程序</font></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%86%85%E6%A0%B8%E7%9A%84%E5%88%86%E7%B1%BB.png" alt="内核的分类"></p><p>操作系统<font color=red>内核</font>需要运行在<font color=red>内核态</font></p><p>操作系统<font color=red>非内核功能</font>运行在用户态</p><p>又因为对系统资源进行管理的功能不会直接涉及硬件，所以就引出了二种内核的设计方法</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%A4%A7%E5%86%85%E6%A0%B8%E4%B8%8E%E5%BE%AE%E5%86%85%E6%A0%B8.png" alt="大内核与微内核"></p><p>大内核包含了系统资源进行管理，微内核不包含</p><p>又因为在内核中需要运行在内核态，非内核中运行在用户态，所以就会对性能造成影响</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%A4%A7%E5%86%85%E6%A0%B8%E5%BE%AE%E5%86%85%E6%A0%B8%E4%B8%8D%E5%90%8C%E7%9A%84%E8%BF%90%E8%A1%8C%E6%80%81.png" alt="大内核微内核不同的运行态"></p><p>故事：现在应用程序想请求操作系统的服务，这个服务的处理同时涉及到进程管理、存储管理、设备管理</p><p>如果是大内核，操作系统只需要先变成内核态，再变成用户态即可</p><p>如果是微内核，操作系统在做进程管理时要先变成内核态，再变成用户态，在做存储管理时要先变成内核态，再变成用户态…</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%86%85%E6%A0%B8%E5%8F%98%E6%80%81.png" alt="内核变态"></p><p>又因为&quot;<font color=red>变态</font>&quot;的过程是有成本的，要消耗不少时间，<font color=red>频繁地变态会降低系统性能</font></p><p>大内核消耗资源少，但代码冗余大，不好维护</p><p>微内核消耗资源少，框架清晰，便于维护</p><p><font color=red>变态只是为了方便的说法，考试的时候注意要写成CPU状态的转换</font></p><h2 id="第一章总结">第一章总结</h2><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AC%AC%E4%B8%80%E7%AB%A0%E6%80%BB%E7%BB%93.png" alt="第一章总结"></p><p>在考研408中，操作系统概述主要是选择题为主，自命题可能会考简答题，同时本章不会太难</p><p>CPU为管理者（操作系统）办事时，管理者会主动告诉CPU接下来要为哪个应用程序做事</p><p>CPU为应用程序做事时，可能会被管理者召回（中断），也有可能是CPU自己检测到一些特殊情况（异常），然后按照管理者的要求处理（重新回来为管理者办事）</p><h3 id="操作系统运行机制在古代的应用">操作系统运行机制在古代的应用</h3><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9C%A8%E5%8F%A4%E4%BB%A3%E7%9A%84%E5%BA%94%E7%94%A8.png" alt="操作系统在古代的应用"></p><p>为大臣服务就是普通状态（用户态），为皇帝服务就是舔狗状态（内核态）</p><h4 id="特权指令与非特权指令-2">特权指令与非特权指令</h4><p>当大臣和太监提出端茶倒水，太监是可以服务的</p><p>但当大臣提出拟一道圣旨的时候，太监就不能服务了，因为没有权限，不能执行特权指令</p><p>当皇帝提出让太监端茶，倒水，拟圣旨，太监是可以服务的，也就是内核态下既可以执行特权指令，也可以执行非特权指令</p><h4 id="内核态——-用户态">内核态——&gt;用户态</h4><p>在古代的时候，当皇帝不说太监可以走了，太监就要一直为皇帝服务</p><p>对应操作系统的时候，当cpu执行操作系统程序时，除非操作系统让CPU执行别的应用程序，否则CPU就会一直为操作系统服务</p><p>操作系统内核发生进程调度时，CPU就会转向执行应用程序，就等于皇帝让太监去为某一个大臣服务，CPU就会从内核态切换成用户态</p><h4 id="用户态——-内核态（异常）">用户态——&gt;内核态（异常）</h4><p>假设大臣提出拟圣旨，太监发现大臣想造反（CPU检测到特殊情况），CPU有一套自己的判断逻辑，就会切换为内核态，也就是向皇帝报告，皇帝就会根据异常的类型，决定怎么处理</p><h4 id="系统调用（一种特殊的异常）">系统调用（一种特殊的异常）</h4><p>大臣有时候需要向皇帝请求服务， 就是应用程序需要请求操作系统的服务，就会采取系统调用的方式</p><p>就比如大臣想向皇上申请100块地，就和太监说，申请土地就是系统调用的类型，100块就是参数，太监就会记住（寄存器）。请太监和皇上说就是陷入指令，让太监报告给皇上</p><p>现在切换内核态，操作系统调用入口程序，确认系统调用类型、参数、处理系统调用</p><h4 id="用户态——-内核态（中断）">用户态——&gt;内核态（中断）</h4><p>当太监向大臣端茶倒水的时候，皇上召太监回宫，就是来了个中断信号，然后太监听到中断信号，然后离开大臣，转化内核态。</p><p>接下来，操作系统告诉cpu中断信号如何处理，cpu就会在内核态下处理中断信号</p>]]></content>
    
    
    <summary type="html">操作系统(一):计算机系统概述</summary>
    
    
    
    <category term="考研" scheme="http://1804040636.github.io/categories/%E8%80%83%E7%A0%94/"/>
    
    
    <category term="考研" scheme="http://1804040636.github.io/tags/%E8%80%83%E7%A0%94/"/>
    
    <category term="操作系统" scheme="http://1804040636.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>闫学灿算法提高课</title>
    <link href="http://1804040636.github.io/2023/02/02/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98%E8%AF%BE/"/>
    <id>http://1804040636.github.io/2023/02/02/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98%E8%AF%BE/</id>
    <published>2023-02-02T00:54:01.000Z</published>
    <updated>2023-03-04T19:05:02.017Z</updated>
    
    <content type="html"><![CDATA[<h1>闫学灿算法提高课</h1><h4 id="快读">快读</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> rainweep</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/11/28 01:10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> class 快读 &#123;</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> FastReader in=<span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isPrime</span><span class="params">(<span class="type">long</span> N)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (N &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (N &lt;= <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (N % <span class="number">2</span> == <span class="number">0</span> || N % <span class="number">3</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">5</span>; i * i &lt;= N; i = i + <span class="number">6</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (N % i == <span class="number">0</span> || N % (i + <span class="number">2</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">    StringTokenizer st;</span><br><span class="line">    BufferedReader br;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FastReader</span><span class="params">()</span>&#123;</span><br><span class="line">        br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(br.readLine());</span><br><span class="line">            &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> st.nextToken();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">    &#125;</span><br><span class="line">    String <span class="title function_">nextLine</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            str = br.readLine();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="基础算法">基础算法</h2><h3 id="位运算">位运算</h3><h4 id="64位整数除法">64位整数除法</h4><img src="/img/闫学灿算法提高/1.png" alt="img" style="zoom:80%;" /><p>首先让我们来看下快速幂的模板</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="type">int</span> <span class="title function_">qmi</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> k,<span class="type">int</span> p)</span>&#123;</span><br><span class="line">    <span class="type">int</span> res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(k!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>((k&amp;<span class="number">1</span>)==<span class="number">1</span>) res=res*a%p;</span><br><span class="line">        a=a*a%p;</span><br><span class="line">        k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>快速幂，便是用乘法的形式得到乘方，我们可以发现：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mi>b</mi></msup><mo>∗</mo><msup><mi>a</mi><mi>c</mi></msup><mo>=</mo><msup><mi>a</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">a^b * a^c=a^{(b+c)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">c</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>，那么我们就可以把k转化成二进制的形式反复平方，这样就可以在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">log_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的复杂度内得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">a^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>次方，我们以求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mn>13</mn></msup></mrow><annotation encoding="application/x-tex">a^{13}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">13</span></span></span></span></span></span></span></span></span></span></span></span>来举例 13的二进制是1101</p><table><thead><tr><th>res</th><th>a</th><th>k</th><th>循环结束</th></tr></thead><tbody><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">a^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">a^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></td><td>110</td><td>第一轮</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">a^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">a^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></td><td>11</td><td>第二轮</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">a^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mn>8</mn></msup></mrow><annotation encoding="application/x-tex">a^8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span></td><td>1</td><td>第三轮</td></tr><tr><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mn>13</mn></msup></mrow><annotation encoding="application/x-tex">a^{13}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">13</span></span></span></span></span></span></span></span></span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mn>16</mn></msup></mrow><annotation encoding="application/x-tex">a^{16}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span></span></span></span></span></span></span></span></td><td>0</td><td>第四轮</td></tr></tbody></table><p>快速幂是用乘法实现乘方，龟速乘是用加法实现乘法，时间复杂度由o(1)变成o(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">log_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)，龟速乘的时候可以一般可以不用担心溢出</p><p>把b拆成2进制的形式去乘a，然后最后加一起就是a*b%p;我们可以发现 a*b+a*c=a*(b+c) 那么我们把b划分成二进制的形式，依次与每项二进制相乘那么也能得出结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="type">long</span> <span class="title function_">ksc</span><span class="params">(<span class="type">long</span> a,<span class="type">long</span> b,<span class="type">long</span> p)</span>&#123;</span><br><span class="line">    <span class="type">long</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (b!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>((b&amp;<span class="number">1</span>)==<span class="number">1</span>) res=(res+a)%p;</span><br><span class="line">        a=(a*<span class="number">2</span>)%p;</span><br><span class="line">b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这次以a*13举例</p><table><thead><tr><th>res</th><th>a</th><th>b</th><th>循环结束</th></tr></thead><tbody><tr><td>a</td><td>a*2</td><td>110</td><td>第一轮</td></tr><tr><td>a</td><td>a*4</td><td>11</td><td>第二轮</td></tr><tr><td>5a</td><td>a*8</td><td>1</td><td>第三轮</td></tr><tr><td>13a</td><td>a*16</td><td>0</td><td>第四轮</td></tr></tbody></table><h3 id="递归与递推">递归与递推</h3><p>最常见递推的一种形式便是斐波拉契数列f(n)=f(n-1)+f(n-2)</p><p>递推就是存在某种关系的一个推理</p><h4 id="费解的开关">费解的开关</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20211223220009105.png" alt="image-20211223220009105"></p><p>性质:每个灯只会按一次，按得顺序没有影响，每个灯的状态，只会取决于上下左右的四个灯被按了多少次</p><p>因此，可以从上往下递推，推导每个开关是否应该被按</p><table><thead><tr><th>0</th><th>0</th><th>1</th><th>1</th><th>1</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>0</td><td>1</td><td>1</td></tr><tr><td>1</td><td>0</td><td>0</td><td>0</td><td>1</td></tr><tr><td>1</td><td>1</td><td>0</td><td>1</td><td>0</td></tr><tr><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td></tr></tbody></table><table><thead><tr><th><strong>1</strong></th><th>0</th><th><strong>1</strong></th><th><strong>1</strong></th><th><strong>1</strong></th></tr></thead><tbody><tr><td><strong>1</strong></td><td><strong>0</strong></td><td>0</td><td>1</td><td>1</td></tr><tr><td><strong>0</strong></td><td>0</td><td>0</td><td>0</td><td>1</td></tr><tr><td>1</td><td>1</td><td>0</td><td>1</td><td>0</td></tr><tr><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td></tr></tbody></table><table><thead><tr><th>1</th><th><strong>1</strong></th><th>1</th><th>1</th><th>1</th></tr></thead><tbody><tr><td><strong>0</strong></td><td><strong>1</strong></td><td><strong>1</strong></td><td>1</td><td>1</td></tr><tr><td>0</td><td><strong>1</strong></td><td>0</td><td>0</td><td>1</td></tr><tr><td>1</td><td>1</td><td>0</td><td>1</td><td>0</td></tr><tr><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td></tr></tbody></table><p>我们的思路是从上往下，依次锁死每一行的开关</p><p>首先，锁住第一行的开关，那么要使得第一行全部为1，只能第二行的开关去操作,当我们按下第二行第一个开关时，将会改变上下左右</p><p>接下来，我们按下第二行第二个开关，那么第一行便完成了，我们锁死第二行，对第三行操作，然后直到操作到最后一行，前四行都完成了，只要再检查最后一行是否全部完成就可以了</p><p>那么第一行的操作方式，我们可以进行枚举，那么一共是五个数，复杂度便是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">2^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></p><p>每个开关会影响五个灯，我们需要递推25个开关，一共500组数据，所以时间复杂度便是32*25*5*500=2e6</p><p>因为我们之前的思路都是锁死第一行的，那我们第一行的按法不能是固定的，我们可以预先枚举第一行的按法，也就是32种按法，得到第一行的结果，然后把第一行锁死。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 费解的开关 &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> N=<span class="number">5</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> dx[]=&#123;-<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, -<span class="number">1</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">char</span>  g[][]=<span class="keyword">new</span> <span class="title class_">char</span>[N][N];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">char</span>  bg[][]=<span class="keyword">new</span> <span class="title class_">char</span>[N][N];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">turn</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">            <span class="type">int</span> a=x+dx[i],b=y+dy[i];</span><br><span class="line">            <span class="keyword">if</span>(a&lt;<span class="number">0</span>||a&gt;=<span class="number">5</span>||b&lt;<span class="number">0</span>||b&gt;=<span class="number">5</span>) <span class="keyword">continue</span>;</span><br><span class="line">            g[a][b]^=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">copyBToA</span><span class="params">(<span class="type">char</span> a[][],<span class="type">char</span> b[][])</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;a.length;i++)&#123;</span><br><span class="line">            System.arraycopy(b[i],<span class="number">0</span>,a[i],<span class="number">0</span>,a[i].length);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> T=in.nextInt();</span><br><span class="line">        <span class="keyword">while</span>(T--&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">                g[i]=in.next().toCharArray();<span class="comment">//存</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> res=<span class="number">10</span>;</span><br><span class="line">            copyBToA(bg,g);<span class="comment">//copy数组，把g数组备份到bg数组中</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)&#123;</span><br><span class="line">                <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">                <span class="comment">//操作第一行的开关</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>((i&gt;&gt;j&amp;<span class="number">1</span>)==<span class="number">1</span>)&#123;</span><br><span class="line">                        turn(<span class="number">0</span>,j);</span><br><span class="line">                        cnt++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//依次1~4行开关状态</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;<span class="number">5</span>;k++)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(g[j][k]==<span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                            turn(j+<span class="number">1</span>,k);</span><br><span class="line">                            cnt++;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//检查灯是否全亮</span></span><br><span class="line">                <span class="type">boolean</span> success=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(g[<span class="number">4</span>][j]!=<span class="string">&#x27;1&#x27;</span>)&#123;</span><br><span class="line">                        success=<span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(success)&#123;<span class="comment">//如果最后一行都是1</span></span><br><span class="line">                    res=Math.min(cnt,res);<span class="comment">//比对下最大值</span></span><br><span class="line">                &#125;</span><br><span class="line">                copyBToA(g,bg);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(res&gt;<span class="number">6</span>) res=-<span class="number">1</span>;</span><br><span class="line">            System.out.println(res);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>百度查了一下说System.copyof方法是最快的，这里使用该方法，拷二维数组的时候不能直接拷贝，直接拷贝复制的还是引用，其实是把b[i]复制给了a[i]，那么并没有拷贝元素，所以要写一个for循环转化一下，同时System.copy方法是目标数组在后面，也就是把第一个数组的值复制到第二个数组</p><h4 id="约数之和">约数之和</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20211223222002736.png" alt="image-20211223222002736"></p><h5 id="数论做法">数论做法</h5><p>分治本身就是递归，比如快排与归并排序，把一个问题分解成多个相同的子问题</p><p>解决此题首先要用到约数之和公式，每个正整数都可以表示成若干个质因子的乘积的形式</p><p>唯一分解定理的公式便是：<img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20211223222055959.png" alt="image-20211223222055959"></p><p>约数个数的公式便是：<img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20211223222115459.png" alt="image-20211223222115459"></p><p>约数之和的公式便是：<img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20211223222133105.png" alt="image-20211223222133105"></p><p>如果用循环求约数之和，复杂度会非常的高，我们求出该质因数的个数时,a是质因数,b是个数，假设数为8, 约数为1,2,4,8模拟一下</p><table><thead><tr><th>t</th><th>res</th><th>b</th><th>n轮结束</th></tr></thead><tbody><tr><td>1+2</td><td>1</td><td>2</td><td>1</td></tr><tr><td>(1+2)*2+1</td><td>1</td><td>1</td><td>2</td></tr><tr><td>(1+2+4)*2+1</td><td>15</td><td>0</td><td>3</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">long</span> t=<span class="number">1</span>,a=key,b=value;</span><br><span class="line"><span class="keyword">while</span>(b--&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    t=(t*a+<span class="number">1</span>)%mod;</span><br><span class="line">&#125;</span><br><span class="line">res=res*t%mod;</span><br></pre></td></tr></table></figure><table><thead><tr><th>数</th><th>唯一分解</th><th>约数个数</th><th>约数之和</th><th>实际约数</th></tr></thead><tbody><tr><td>12</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>2</mn></msup><mo>∗</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">2^2*3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span></td><td>(1+2)*(1+1)=6</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>3</mn><mo stretchy="false">)</mo><mo>=</mo><mn>28</mn></mrow><annotation encoding="application/x-tex">(1+2+2^2)(1+3)=28</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">28</span></span></span></span></td><td>1,2,3,4,6,12</td></tr><tr><td>36</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>2</mn></msup><mo>∗</mo><msup><mn>3</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">2^2*3^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></td><td>(1+2)*(1+2)=9</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>3</mn><mo>+</mo><msup><mn>3</mn><mn>3</mn></msup><mo stretchy="false">)</mo><mo>=</mo><mn>91</mn></mrow><annotation encoding="application/x-tex">(1+2+2^2)*(1+3+3^3)=91</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">91</span></span></span></span></td><td>1,2,3,4,6,9,12,18,36</td></tr><tr><td>45</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>3</mn><mn>2</mn></msup><mo>∗</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">3^2*5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">5</span></span></span></span></td><td>(1+2)*(1+1)=6</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>3</mn><mo>+</mo><msup><mn>3</mn><mn>3</mn></msup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>5</mn><mo stretchy="false">)</mo><mo>=</mo><mn>78</mn></mrow><annotation encoding="application/x-tex">(1+3+3^3)(1+5)=78</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">78</span></span></span></span></td><td>1,3,5,9,15,45</td></tr></tbody></table><p>一个数A的质因子会很少，5e7大概也就30个,但这30个还需要*B,所以30*5e7大约是1.5e9</p><p>一个个算过去肯定是会超时的 所以我们就需要快速计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msup><mi>p</mi><mn>1</mn></msup><mo>+</mo><msup><mi>p</mi><mn>2</mn></msup><mo>+</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><mo separator="true">⋅</mo><msup><mi>p</mi><mi>k</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1+p^1+p^2+···p^k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord">+</span><span class="mpunct">⋅⋅⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p><img src="/img/闫学灿算法提高/image-20211223222706824.png" alt="image-20211223222706824" style="zoom:80%;" /><img src="/img/闫学灿算法提高/image-20211223222931657.png" alt="image-20211223222931657" style="zoom:80%;" /></p><p>由第1张图的推导可知 约数之和公式为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>+</mo><mi>p</mi><mn>1</mn><mo>+</mo><mi>p</mi><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><mi>p</mi><msup><mn>1</mn><mi>k</mi></msup><mo>=</mo><mo stretchy="false">(</mo><mi>p</mi><msup><mn>1</mn><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1+p1+p1^2+p1^k=(p1^{(k+1)}-1)/(p-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0435em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p><p>上面可以用快速幂来求 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">a^{(k+1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>，因为取模运算中，除法会丢精度，所以可以乘a-1%p的逆元 ，逆元证明在第二张图</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> rainweep</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/11/16 20:14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> class 约数之和 &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> mod=<span class="number">9901</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> A,B;</span><br><span class="line">    <span class="keyword">static</span> Map&lt;Integer,Integer&gt; primes=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">putMap</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!primes.containsKey(n))&#123;</span><br><span class="line">            primes.put(n,<span class="number">1</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            primes.put(n,primes.get(n)+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">divide</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n/i;i++)&#123;</span><br><span class="line">            <span class="keyword">while</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">                putMap(i);</span><br><span class="line">                n/=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n&gt;<span class="number">1</span>) putMap(n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">long</span> <span class="title function_">qmi</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="type">long</span> res=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(b!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>((b&amp;<span class="number">1</span>)==<span class="number">1</span>) res=res*a%mod;</span><br><span class="line">            a= (<span class="type">int</span>) ((<span class="type">long</span>)a*a%mod);</span><br><span class="line">            b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        A=in.nextInt();</span><br><span class="line">        B=in.nextInt();</span><br><span class="line">        divide(A);</span><br><span class="line">        <span class="type">long</span> res=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> key:primes.keySet())&#123;</span><br><span class="line">            <span class="type">int</span> p=key,v=primes.get(key)*B;</span><br><span class="line">            <span class="keyword">if</span>((p-<span class="number">1</span>)%mod==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="comment">//若不存在逆元,那分母p-1是mod的倍数,那p%mod=1 费马小得 P^n%mod=1</span></span><br><span class="line">                <span class="comment">//那分子就是k+1个1 p^0+p^1+...P^k</span></span><br><span class="line">                res= res*(v+<span class="number">1</span>)%mod;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//p^(k+1)-1 * x %p</span></span><br><span class="line">                res=res*(qmi(p,v+<span class="number">1</span>)-<span class="number">1</span>)%mod*qmi(p-<span class="number">1</span>,mod-<span class="number">2</span>)%mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(A==<span class="number">0</span>) res=<span class="number">0</span>;</span><br><span class="line">        System.out.println((res%mod+mod)%mod);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>数论写法攻坚了一小时，踩了很多坑，</p><p>第一个是在分解质因数的时候，while循环里面应该是让key为i 而不是key 为n，结束后应该检测n是否&gt;1而不是n&gt;0，</p><p>第二个坑就是爆int中间结果，用long转化还是不太好用，不如直接全部用long，</p><p>第三个坑就是结果有负数，测试案例刚好是取模的数，所以最后要(res%mod+mod)%mod</p><h5 id="分治法">分治法</h5><p>但是如果不从数论角度，从算法角度上观察<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>+</mo><mi>p</mi><mn>1</mn><mo>+</mo><mi>p</mi><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><mi>p</mi><msup><mn>1</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">1+p1+p1^2+p1^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0435em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>(k代表质因数个数) 项数是k+1 令<strong>k+1=x</strong></p><p>令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><msup><mn>1</mn><mn>0</mn></msup><mo>+</mo><mi>p</mi><mn>1</mn><mo>+</mo><mi>p</mi><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>p</mi><msup><mn>1</mn><mi>k</mi></msup><mo>=</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p1^0+p1+p1^2+....p1^k=sum(0,k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0435em;vertical-align:-0.1944em;"></span><span class="mord">....</span><span class="mord mathnormal">p</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span> 如果进行递归的方式求解</p><ol><li>如果x是偶数 我们可以进行一个划分，把[0,x/2-1]划分成一部分，[x/2,k]也是一部分</li></ol><p>第一半是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>x</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi><msup><mn>1</mn><mn>0</mn></msup><mo>+</mo><mi>p</mi><mn>1</mn><mo>+</mo><mi>p</mi><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><mi>p</mi><msup><mn>1</mn><mrow><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">sum(0,x/2-1)=p1^0+p1+p1^2+...+p1^{(x/2-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mord">/2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0824em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mord mtight">/2</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></p><p>第二半是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi><msup><mn>1</mn><mo stretchy="false">(</mo></msup><mi>x</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><mi>p</mi><msup><mn>1</mn><mo stretchy="false">(</mo></msup><mi>x</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><mi>p</mi><msup><mn>1</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">sum(x/2,k)=p1^(x/2)+p1^(x/2+1)+....+p1^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">/2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mord">/2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mord">/2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">....</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0435em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></p><p>我们可以发现$ p1^{(x/2)} * (p1^0+p1+p1^2+…+p1^{(x/2-1)}) $</p><p>=&gt;<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><msup><mn>1</mn><mrow><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow></msup><mo>∗</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mi>x</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mo>=</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p1^{(x/2)} * sum(0,x/2-1)==sum(x/2,k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mord mtight">/2</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mord">/2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">==</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">/2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span> 也就是第二部分的第一个数*第一部分就是第二部分所有</p><p>所以 sum(0,k)=(1+p1^(x/2)^) * sum(0,x/2-1)==1 * sum(0,x/2-1)+sum(x/2,x-1)</p><table><thead><tr><th>k=3</th><th>x=4</th><th>x/2-1=1</th><th>0~1</th><th>2~3</th></tr></thead><tbody><tr><td>k=7</td><td>x=8</td><td>x/2-1=3</td><td>0~3</td><td>4~7</td></tr></tbody></table><p>这是k为3和7的模拟</p><p>​2.如果x是奇数 那k为偶数 那把sum(p,k)分成如下形式 变成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>p</mi><mn>0</mn></msup><mo>+</mo><mi>p</mi><mo>∗</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">p^0+p * x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6597em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>为偶数形式了</p><p>那么<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>p</mi><mn>0</mn></msup><mo>+</mo><msup><mi>p</mi><mn>1</mn></msup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msup><mi>p</mi><mi>k</mi></msup><mo>=</mo><mo>&gt;</mo><msup><mi>p</mi><mn>0</mn></msup><mo>+</mo><mi>p</mi><mo>∗</mo><mo stretchy="false">(</mo><msup><mi>p</mi><mn>0</mn></msup><mo>+</mo><msup><mi>p</mi><mn>1</mn></msup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msup><mi>p</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>+</mo><mi>p</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">sum(p,k)=p^0+p^1+...+p^k=&gt;p^0+p * (p^0+p^1+...+p^{(k-1)})=1+p * (sum(p,k-1))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0435em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6597em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6597em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">))</span></span></span></span></p><p>所以这题两个做法，第一个做法是用数论的方式快速求出每一段<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>（</mtext><msup><mi>p</mi><mi>k</mi></msup><mo>+</mo><mn>1</mn><mi mathvariant="normal">/</mi><mi>p</mi><mo>−</mo><mn>1</mn><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mtext>）</mtext></mrow><annotation encoding="application/x-tex">（p^k+1/p-1 mod p）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0435em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">（</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mord cjk_fallback">）</span></span></span></span>，第二个是用分治的方式求出每一段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> rainweep</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/11/19 16:46</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> class 约数之和分治法 &#123;</span><br><span class="line">    <span class="keyword">static</span> Map&lt;Integer,Integer&gt; primes=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> mod=<span class="number">9901</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> A,B;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">putMap</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!primes.containsKey(n))&#123;</span><br><span class="line">            primes.put(n,<span class="number">1</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            primes.put(n,primes.get(n)+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">divide</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n/i;i++)&#123;</span><br><span class="line">            <span class="keyword">while</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">                putMap(i);</span><br><span class="line">                n/=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n&gt;<span class="number">1</span>) putMap(n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">long</span> <span class="title function_">qmi</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="type">long</span> res=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (b!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>((b&amp;<span class="number">1</span>)==<span class="number">1</span>)res=res*a%mod;</span><br><span class="line">            a= (<span class="type">int</span>) ((<span class="type">long</span>)a*a%mod);</span><br><span class="line">            b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">long</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> x)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(x==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(x%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> (qmi(p,x/<span class="number">2</span>)+<span class="number">1</span>)*sum(p,x/<span class="number">2</span>)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (qmi(p,x-<span class="number">1</span>)+sum(p,x-<span class="number">1</span>))%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        A=in.nextInt();</span><br><span class="line">        B=in.nextInt();</span><br><span class="line">        divide(A);</span><br><span class="line">        <span class="type">long</span> res=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> p:primes.keySet())&#123;</span><br><span class="line">            <span class="type">int</span> x=primes.get(p)*B+<span class="number">1</span>;</span><br><span class="line">            res=res*sum(p,x)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(A==<span class="number">0</span>) res=<span class="number">0</span>;</span><br><span class="line">        System.out.println((res%mod+mod)%mod);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="分形之城">分形之城</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20211223225024204.png" alt="image-20211223225024204"></p><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/wps4.jpg" alt="img">找规律的过程</p><p>初步一眼从图像观看，每一部分都是由上一级的旋转构成</p><p>除第一级以外，每一级分成四部分 左上角是上一级顺时针旋转90° ；右上角是上一级本身；右下角还是上一级本身；左下角是上一级逆时针旋转90°</p><p>从大小上来看，右上角和右下角是由上一级平移过来；左上角是关于 反对角线 对称；左下角是关于 主对角线 轴对称</p><p>做法是给定一个等级，求两个点的直线距离 ，通过数据可知 一共是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>4</mn><mn>3</mn></msup><mn>1</mn></mrow><annotation encoding="application/x-tex">4^31</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mord">1</span></span></span></span>个点 会爆int 所以要用long</p><p>现在的问题是给定等级与编号，如何去求2个点的坐标</p><p>最初</p><table><thead><tr><th>最小</th><th>较小</th></tr></thead><tbody><tr><td>最大</td><td>次小</td></tr></tbody></table><p>左上角</p><table><thead><tr><th>最小</th><th>最大</th></tr></thead><tbody><tr><td>较小</td><td>次小</td></tr></tbody></table><p>左下角</p><table><thead><tr><th>次小</th><th>较小</th></tr></thead><tbody><tr><td>最大</td><td>最小</td></tr></tbody></table><p>通过看图可以发现，左上角是最小值，左下角是最大值</p><p>所以对于一个等级N，我们要求一个编号A 首先，我们要看A落到哪一个部分</p><p>对于一个N级，边长是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>N</mi></msup></mrow><annotation encoding="application/x-tex">2^N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span>次方 每一部分的边长是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">2^{(N-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>次方 那每一部分的个数就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>N</mi></msup></mrow><annotation encoding="application/x-tex">2^N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span>次方</p><p>如果我们要看 a是哪个部分，就用a去整除一下每一部分的点的个数 也就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>N</mi></msup></mrow><annotation encoding="application/x-tex">2^N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span>次方 得到的答案就是属于的部分</p><table><thead><tr><th>等级 N</th><th>边长 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>N</mi></msup></mrow><annotation encoding="application/x-tex">2^N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span></th><th>总个数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>4</mn><mi>N</mi></msup></mrow><annotation encoding="application/x-tex">4^N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span></th><th>部分边长 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">2^{(N-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></th><th>部分个数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><mn>2</mn><mo>∗</mo><mi>N</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">2^{(2*N-2)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></th></tr></thead><tbody><tr><td>2</td><td>4</td><td>16</td><td>2</td><td>4</td></tr><tr><td>3</td><td>8</td><td>64</td><td>4</td><td>16</td></tr><tr><td>4</td><td>16</td><td>216</td><td>8</td><td>64</td></tr></tbody></table><p>0在左上角；1在右上角；2在右下角；3在左下角</p><p>就可以变成子问题 get(N-1,A%block)</p><p>block求法便是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>4</mn><mrow><mi>N</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup></mrow><annotation encoding="application/x-tex">4^{N/4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mtight">/4</span></span></span></span></span></span></span></span></span></span></span></span> 总个数是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>4</mn><mi>N</mi></msup></mrow><annotation encoding="application/x-tex">4^N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span></p><p>对于每次递归，我们需要判断这个点在哪个位置，判断方式便是a/block，那在该位置的编号就是a%block 如果求到最后，得到了坐标，那就需要不断回溯平移 还有矩阵旋转</p><p>如果block 在这次的右上角，那么就要<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>+</mo><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">y+2^{(n-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></p><p>如果block在右下角 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>+</mo><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">y+2^{(n-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>+</mo><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">x+2^{(n-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></p><p>上面都是通过平移得到的，但左上角和左下角是旋转得到的</p><p>左上角其实是关于 x=y轴对称，那么只要把x,y颠倒就好了</p><p>左下角是关于y=-x+2^(N-1)对称的 所以先要计算出来点的坐标再平移</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> rainweep</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/11/19 21:10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> class 分形之城 &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Pair</span>&#123;</span><br><span class="line">        <span class="type">long</span> first;</span><br><span class="line">        <span class="type">long</span> second;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">Pair</span><span class="params">(<span class="type">long</span> first, <span class="type">long</span> second)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.first = first;</span><br><span class="line">            <span class="built_in">this</span>.second = second;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> Pair <span class="title function_">calc</span><span class="params">(<span class="type">long</span> N,<span class="type">long</span> m)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(N==<span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Pair</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="type">long</span> len=(<span class="type">long</span>)<span class="number">1</span>&lt;&lt;(N-<span class="number">1</span>),block=(<span class="type">long</span>)<span class="number">1</span>&lt;&lt;(<span class="number">2</span>*N-<span class="number">2</span>);<span class="comment">//cnt是每块个数,len是平移长度</span></span><br><span class="line">        Pair pos=calc(N-<span class="number">1</span>,m%block);<span class="comment">//结束了代表已经做完了上次递归</span></span><br><span class="line">        <span class="type">long</span> z=m/block;<span class="comment">//属于哪个分区 是由哪个分区移到最初分区的</span></span><br><span class="line">        <span class="type">long</span> x=pos.first,y=pos.second;</span><br><span class="line">        <span class="keyword">if</span>(z==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Pair</span>(y,x);<span class="comment">//左上角 //旋转矩阵</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(z==<span class="number">1</span>)&#123;<span class="comment">//右上角平移过来，那就回溯返回</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Pair</span>(x,y+len);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(z==<span class="number">2</span>)&#123;<span class="comment">//右下角</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Pair</span>(x+len,y+len);</span><br><span class="line">        &#125;<span class="comment">//左下角</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Pair</span>(len-<span class="number">1</span>-y+len,len-<span class="number">1</span>-x);<span class="comment">//关于y=-x+2^(N-1)对称</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> T=in.nextInt();</span><br><span class="line">        <span class="keyword">while</span>(T--&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">long</span> N=in.nextLong();</span><br><span class="line">            <span class="type">long</span> a=in.nextLong();</span><br><span class="line">            <span class="type">long</span> b=in.nextLong();</span><br><span class="line">            Pair x=calc(N,a-<span class="number">1</span>);</span><br><span class="line">            Pair y=calc(N,b-<span class="number">1</span>);</span><br><span class="line">            <span class="type">long</span> dx=x.first-y.first;</span><br><span class="line">            <span class="type">long</span> dy=x.second-y.second;</span><br><span class="line">            <span class="type">double</span> ans=Math.sqrt((<span class="type">double</span>)(dx*dx+dy*dy))*<span class="number">10</span>;</span><br><span class="line">            System.out.printf(<span class="string">&quot;%.0f\n&quot;</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题首先踩得坑就是1&lt;&lt;31的时候要把1转成long,不然会溢出</p><p>然后对于本次递归，由父问题到子问题是确定自己是当前部分的第多少个，然后基于第一级开始计算。由子问题到父问题是回溯的过程，在回溯的过程中，把父问题的相对坐标给返回，所以子问题求的就是当前父问题的相对坐标，<strong>这个相对指的是对当前部分的相对</strong></p><p>今天复习的时候发现这道题还是比较难，想了一会依旧没有完全想透，代码的递归是每次我降一个等级，偏居一隅，算出我在我这块位置的编号，这一步是在pos=calc(N-1,m%block)得到的。然后判断我是上一个等级的第几个分区； return的值是返回我在当前等级的编号是多少，</p><h3 id="前缀和与差分">前缀和与差分</h3><h4 id="激光炸弹">激光炸弹</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20211224064748994.png" alt="image-20211224064748994"></p><p>首先读题，本题的题意是求矩阵内最大的R x R的和，可以使用二维前缀和o(1) 求出R x R，然后最大的复杂度是n * n 也就是5000 * 5000</p><p>因为前缀和数组的下标要从1开始，但数据范围是0开始，所以我们把每个坐标x+1,y+1</p><p>首先要注意 R * R个位置的正方形代表的正方形大小是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>R</mi><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">(R-1)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p>所以我们要求3 * 3位置的和，其实是求(0,0)~(2,2)的前缀和;又因下标全部+1 其实求得前缀和是 (1,1)~(3,3)</p><p>二维前缀和的构造 a[i,j]表示的是[i,j] 其本身及左上角所有数的和</p><p>用容斥原理便是a[3,3]-a[3,0]-a[0,3]+a[0,0]</p><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20211224065041836.png" alt="image-20211224065041836"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> rainweep</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/11/21 16:10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> class 激光炸弹 &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">StreamTokenizer</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StreamTokenizer</span>(<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in),<span class="number">65535</span>));</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(<span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(System.out));</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span> <span class="keyword">throws</span> IOException&#123;</span><br><span class="line">        in.nextToken();</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">int</span>)in.nval;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> N,R;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> M= (<span class="type">int</span>) (<span class="number">5e3</span>+<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> a[][]=<span class="keyword">new</span> <span class="title class_">int</span>[M][M];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        N=nextInt();</span><br><span class="line">        R=nextInt();</span><br><span class="line">        R=Math.min(<span class="number">5002</span>,R);</span><br><span class="line">        <span class="type">int</span> nx=R,my=R;<span class="comment">//那从R,R开始遍历到最右下角的点</span></span><br><span class="line">        <span class="keyword">while</span>(N--&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">int</span> x=nextInt();</span><br><span class="line">            <span class="type">int</span> y=nextInt();</span><br><span class="line">            <span class="type">int</span> w=nextInt();</span><br><span class="line">            x++;</span><br><span class="line">            y++;</span><br><span class="line">            nx=Math.max(nx,x);</span><br><span class="line">            my=Math.max(my,y);</span><br><span class="line">            a[x][y]+=w;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=nx;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=my;j++)&#123;</span><br><span class="line">                a[i][j]=a[i-<span class="number">1</span>][j]+a[i][j-<span class="number">1</span>]-a[i-<span class="number">1</span>][j-<span class="number">1</span>]+a[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=R;i&lt;=nx;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=R;j&lt;=my;j++)&#123;</span><br><span class="line">                res=Math.max(res,a[i][j]+a[i-R][j-R]-a[i-R][j]-a[i][j-R]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        out.println(res);</span><br><span class="line">        out.flush();</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实30000多个输入，快读可用可不用；正常情况下求前缀和是给你两个点 x1,y1 x2,y2 让你求该范围内的前缀和 ；该题变成给你边长；x2,y2 求前缀和 减去边长得到是 x1-1,y1-1</p><p>同时这题有道陷阱，x y的范围其实很小，但给出的r是有1e9，所以把r&gt;5001变成5001即可,做这题的时候觉得数据有错误，于是补了一个工单</p><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20211224065356693.png" alt="image-20211224065356693"></p><p>因为一共有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>500</mn><msup><mn>1</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">5001^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">500</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>个点 可以把5001开大,但不能把5001开小,开大了多求的部分也都是0，不影响结果</p><h4 id="增减序列">增减序列</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20211224065902889.png" alt="image-20211224065902889"></p><p>可以把1 1 2 2=&gt;1 1 1 1 也可以 2 2 2 2，所以操作次数是一次，操作结果二种，<strong>选择一个区间[l,r]统一加一个数可以使用差分</strong></p><p>差分数组是前缀和的逆运算，对差分数组求前缀和得到的就是原数组</p><p>差分s[i]=a[i]-a[i-1] 所以我如果希望数组的值都一样，那么其差分数组除了第一项以外，那其他项应该均为0</p><ol><li><p>第一问变成至少操作多少次使得s[2]~s[n]均为0</p></li><li><p>第二问变成在最少操作次数前提下s[1]有多少种选择</p></li></ol><p>首先对差分数组的操作，如果我们要使得[l,r]区间的数增加1 那么就变成s[l]+=1,s[r+1]-=1;l~r 的范围为 1~n 那么差分的范围就是1~n+1 但我们对差分计算前缀和的时候，并不需要计算到n+1 只需要计算到n就可以了。</p><p>首先是我们对差分数组的操作是四种 s[1]~b[n+1]；</p><p>这里的l和r是指对原数组的区间操作，转化成差分数组就变成l和r+1  以下四种操作是对于原数组而言</p><ol><li><p>2&lt;=l&lt;=r&lt;=n-1 该操作是相当于改变l和r之间的数 b[l]+=1 b[r+1]-=1|| <strong>b[l]-=1 b[r+1]+=1</strong></p></li><li><p>l=1,r&lt;=n-1 该操作是改变前r个数 <strong>b[1]+=1 b[r+1]-=1</strong> || b[1]-=1 b[r+1]+=1</p></li><li><p>2&lt;=l , r=n 该操作是改变l后的数 <strong>b[l]+=1 b[n+1]-=1</strong> || b[l]-=1 b[n+1]+=1</p></li><li><p>l=1 r=n 该操作是相当于让整个区间全部+1 or -1 这个操作无意义</p></li></ol><p>那么横看1 ，2 ，3</p><p>第一个操作同时操作了差分数组2个数，第二个操作操作了差分数组的1个数，第三个操作也是操作了差分数组的1个数</p><p>我们的操作是这样的，第一个操作可以将任意一个<strong>正负对</strong>同时加减，第二个操作可以将b[<strong>1</strong>]和b[r+1]改变，第三个操作可以将b[l]和b[<strong>n+1</strong>]改变</p><p>所以我们最少需要操作多少次就是<strong>差分数组从2~n正数和与负数和的绝对值的最大值</strong></p><p>而在最少操作次数的前提下，有多少种方案，那么只有可供2与3操作的次数，比如整数是7 负数是 -5 那么操作1操作五次后,还剩下整数2，就只有2 方案 和 3 方案了。</p><p>我们可以发现，要不然是b[1]+=1,<strong>b[r]-=1</strong>&lt;&gt;b[1]-=1,b[r]+=1 或者是 <strong>b[r]-=1</strong>,b[n+1]+=1&lt;&gt;b[r]+=1,b[n+1]-=1; 就没有操作方式了，那么我们的任务便是将剩下的值变成0，<strong>可操作b[1]的方式便是可选择的数量</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> rainweep</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/12/14 17:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> class 增减序列 &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        StringTokenizer st;</span><br><span class="line">        BufferedReader br;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">FastReader</span><span class="params">()</span>&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">while</span> (st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(br.readLine());</span><br><span class="line">                &#125;<span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">nextLine</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                str = br.readLine();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> N= (<span class="type">int</span>) (<span class="number">1e5</span>+<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> b[]=<span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        n=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            a[i]=in.nextInt();</span><br><span class="line">            b[i]=a[i]-a[i-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> z=<span class="number">0</span>,f=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i]&gt;=<span class="number">0</span>) z+=b[i];</span><br><span class="line">            <span class="keyword">else</span> f+=b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> tmpMax=Math.max(z,-f);</span><br><span class="line">        <span class="type">long</span> tmpMin=Math.min(z,-f);</span><br><span class="line">        out.println(tmpMax);</span><br><span class="line">        out.println(tmpMax-tmpMin+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二分">二分</h3><h4 id="最佳牛围栏">最佳牛围栏</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20211224071038977.png" alt="image-20211224071038977"></p><p>类似于这种询问最大最小平均值的，一般是用二分，具有二段性，便可以二分</p><p>判断，是否存在一个方案，使得方案的平均值&gt;=avg  avg是二分的枚举值</p><p>如果我们让每个数减去枚举的avg，那么就变成是否存在某段的和，大于等于0</p><p>那就说明原来的数的均值大于等于avg</p><p>题目变成是否存在长度&gt;=F的一段和&gt;=0</p><p>那么我们判断数组是否存在某一段的和大于等于0，那么便是和最大子序列和问题，首先我们可以用前缀和来实现o（1）求和，假设有前缀和数组a;最大部分的和是i~j 那么便为a[j]-a[i-1] 那么我们只需要使得a[i] 最小 ，a[j]最大即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> rainweep</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/12/17 20:25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> class 最佳牛围栏 &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        StringTokenizer st;</span><br><span class="line">        BufferedReader br;</span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">FastReader</span><span class="params">()</span>&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">         String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">while</span> (st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(br.readLine());</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="title function_">nextLong</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Long.parseLong(next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> <span class="title function_">nextDouble</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Double.parseDouble(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> FastReader in=<span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> N,F;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        N=in.nextInt();</span><br><span class="line">        F=in.nextInt();</span><br><span class="line">        <span class="type">double</span> max=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=N;i++) &#123;</span><br><span class="line">            a[i]=in.nextDouble();</span><br><span class="line">            max=max&gt;a[i]?max:a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> l=<span class="number">0</span>,r=max;</span><br><span class="line">        <span class="keyword">while</span> (r-l&gt;eps)&#123;</span><br><span class="line">            <span class="type">double</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(check(mid))&#123;</span><br><span class="line">                l=mid;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                r=mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        out.println((<span class="type">int</span>)(r*<span class="number">1000</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">check</span><span class="params">(<span class="type">double</span> avg)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line">            b[i]=b[i-<span class="number">1</span>]+a[i]-avg;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>,j=F;j&lt;=N;i++,j++)&#123;</span><br><span class="line">            sum=Math.min(b[i],sum);</span><br><span class="line">            <span class="keyword">if</span>(b[j]-sum&gt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">double</span> eps=<span class="number">1e-5</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> max= (<span class="type">int</span>) (<span class="number">1e5</span>+<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">static</span> <span class="type">double</span> a[]=<span class="keyword">new</span> <span class="title class_">double</span>[max];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">double</span> b[]=<span class="keyword">new</span> <span class="title class_">double</span>[max];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码其实还是较为简单的，做的时候一开始是跟着yls思路走的，后来想，能否构造前缀和数组的时候不减去平均值，但是比较难做，因为所有的数都是正数，那么最大子段和就会一直上升，所以还是枚举均值比较好 二分的重点在于寻找二段性</p><p>二分是非常难的一个算法，要多加练习</p><h4 id="特殊排序">特殊排序*</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20211224071446089.png" alt="image-20211224071446089"></p><p>这道题使用的是LeetCode 核心代码模式的例题</p><p>反对称性是指a&lt;b可以推出b&gt;a  传递性是a&gt;b b&gt;c 可以推出 a&gt;c</p><p>算了、暂时还是看不懂这道题、改日再看</p><h3 id="排序">排序</h3><h4 id="七夕祭">七夕祭</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20211225232315339.png" alt="image-20211225232315339"></p><p>题意大体是说，给你一些坐标，这些坐标有一个喜欢标记，每次可以把该标记和相邻的上下左右的位置交换，最后使得<strong>每一行的标记一样多，每一列的标记一样多</strong>，如果不能满足，则输出impossible，如果都能满足则输出both和步骤数，满足其一输出row或col</p><table><thead><tr><th>1,1</th><th>1,2</th><th><strong>1,3</strong></th></tr></thead><tbody><tr><td><strong>2,1</strong></td><td><strong>2,2</strong></td><td><strong>2,3</strong></td></tr></tbody></table><p>这里对应的答案是row 1 只需把2,1 或者2,2向上或者向下移动就好</p><p>因为我们这里有四个糖果，<strong>列是除不尽的，所以列不可能</strong>行号是除的尽的，我们考虑行号</p><p>我们通过上面的条件，可以判定行和列是否能满足；</p><p>第二个条件便是，我们<strong>横向移动一个点，只会改变对应的列的位置点的数量</strong>，而不会改变对应行上的数量</p><p>那么换句话说我们<strong>使得列数量改变时，并不会影响行的数量，我们使得行数量改变时，不会影响列的数量</strong></p><p>所以两个部分操作是独立的，我们可以先操作行的部分，再操作列的部分</p><p>所以该问题便是<strong>环形均分纸牌问题</strong></p><p>便是变成了给定一个环序列，每个值存放的是每一行的摊点数量，每次只能操作该位置的数与相邻位置的数，且只能+1 或 -1</p><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220111200937270.png" alt="image-20220111200937270"></p><p>那么答案便是|x1|+|x2|+…+|x6|的最小值，我们每个点的数量应该是一样的</p><p>a=a1-x2+x1</p><p>a=a2-x3+x2…</p><p>a=an-x(n+1)+xn=&gt;a=a6-x1+x6</p><p>把n个式子全部加起来，最后只剩下n * a = a1+a2…+an</p><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98618LC7U%5DBDY$%5BW%5DB%602WG5P.png" alt="img"></p><p>公式推导 线性代数里的知识 把x1当成因变量，那么放到<strong>线段上看</strong>问题转化成x到6个点的和的最近距离，那么x便是所有点的均值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2021/12/25 23:21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> N=<span class="number">100005</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> row[]=<span class="keyword">new</span> <span class="title class_">int</span>[N],col[]=<span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> s[]=<span class="keyword">new</span> <span class="title class_">int</span>[N],c[]=<span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">long</span> <span class="title function_">work</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> a[])</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            s[i]=s[i-<span class="number">1</span>]+a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(s[n]%n!=<span class="number">0</span>) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> avg=s[n]/n;<span class="comment">//每一行所需多少个</span></span><br><span class="line">        c[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++) c[i]=s[i-<span class="number">1</span>]-avg*(i-<span class="number">1</span>);<span class="comment">//推导出来的常数项公式</span></span><br><span class="line">        Arrays.sort(c,<span class="number">1</span>,n+<span class="number">1</span>);</span><br><span class="line">        <span class="type">long</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) res=res+Math.abs(c[i] - c[(n +<span class="number">1</span>)/<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n,m,t;</span><br><span class="line">        n=in.nextInt();</span><br><span class="line">        m=in.nextInt();</span><br><span class="line">        t=in.nextInt();</span><br><span class="line">        <span class="keyword">while</span> (t--&gt;<span class="number">0</span>)&#123;<span class="comment">//用行数组和列数组操作 对行数组操作，就说明列在移动</span></span><br><span class="line">            <span class="type">int</span> x=in.nextInt();</span><br><span class="line">            <span class="type">int</span> y=in.nextInt();</span><br><span class="line">            row[x]++;</span><br><span class="line">            col[y]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> r=work(n,row);</span><br><span class="line">        <span class="type">long</span> c=work(m,col);</span><br><span class="line">        <span class="keyword">if</span>(r!=-<span class="number">1</span>&amp;&amp;c!=-<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;both &quot;</span>+(r+c));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(r!=-<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;row &quot;</span>+r);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(c!=-<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;column &quot;</span>+c);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;impossible&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        solve();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一道推公式的环形均摊纸牌问题 ，自己的数学底子还是有待提高，线代和高数很多知识自己还不了解</p><h4 id="动态中位数">动态中位数</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220112173534092.png" alt="image-20220112173534092"></p><p>首先，我们只需要知道中间的数就好了，比他小的数我们无需排序，比他大的数我们也无需排序</p><p>可以使用两个堆，对顶堆，上面一个小根堆，下面一个大根堆</p><p>大根堆：降序排序的优先队列</p><p>小根堆：升序排序的优先队列</p><p>我们用小根堆去存大于中位数的数，大根堆去存小于中位数的数</p><p>当序列数为偶数的时候，确保两个堆中间的东西一样多，当序列为奇数的时候，确保下面的大根堆的个数比小根堆多一个，这样大根堆顶就是中位数</p><p>下面的大根堆里的最大元素，至少要比上面小根堆里的元素要小，且下面大根堆的元素数量，最多比小根堆的元素多一个</p><p>1.大根堆的所有元素都要比小根堆小=&gt;大根堆堆顶比小根堆堆顶小</p><p>2.大根堆的元素数量最多要比小根堆多1，最少要和小根堆相等</p><p>在多1的情况下，便是奇数次，那么大根堆顶便是答案</p><p>1.首先对于输入的数，我们判定其是否比大根堆的堆顶大，如果大则插入小根堆中，否则则插入大根堆中</p><p>2.插入后，如果大根堆的元素数量比小根堆少，那么就把小根堆的堆顶加到大根堆</p><p>3.插入后，若大根堆的元素数量比小根堆多了两个，那么便把大根堆的堆顶加到小根堆</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/12 17:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> Queue&lt;Integer&gt; smallRootHeap=<span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">static</span> Queue&lt;Integer&gt; bigRootHeap=<span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;&gt;((x,y)-&gt;&#123;<span class="keyword">return</span> y-x;&#125;);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> No=in.nextInt();</span><br><span class="line">        <span class="type">int</span> m=in.nextInt();</span><br><span class="line">        <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        out.println(No+<span class="string">&quot; &quot;</span>+(m+<span class="number">1</span>)/<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</span><br><span class="line">            <span class="type">int</span> x=in.nextInt();</span><br><span class="line">            <span class="keyword">if</span>(bigRootHeap.isEmpty()||bigRootHeap.peek()&gt;=x)&#123;</span><br><span class="line">                bigRootHeap.offer(x);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                smallRootHeap.offer(x);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (bigRootHeap.size()&lt;smallRootHeap.size())&#123;</span><br><span class="line">                bigRootHeap.offer(smallRootHeap.poll());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (bigRootHeap.size()-smallRootHeap.size()&gt;=<span class="number">2</span>)&#123;</span><br><span class="line">                smallRootHeap.offer(bigRootHeap.poll());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(cnt==<span class="number">10</span>)&#123;out.println();cnt=<span class="number">0</span>;&#125;</span><br><span class="line">            <span class="keyword">if</span>((i&amp;<span class="number">1</span>)==<span class="number">1</span>) &#123;</span><br><span class="line">                out.print(bigRootHeap.peek()+<span class="string">&quot; &quot;</span>);cnt++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        out.println();</span><br><span class="line">        smallRootHeap.clear();</span><br><span class="line">        bigRootHeap.clear();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> p=in.nextInt();</span><br><span class="line">        <span class="keyword">while</span> (p--&gt;<span class="number">0</span>)</span><br><span class="line">        solve();</span><br><span class="line">        out.flush();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> PrintWriter out=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(System.out);</span><br><span class="line">    <span class="keyword">static</span> <span class="type">FastReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastReader</span>();</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">FastReader</span>&#123;</span><br><span class="line">        StringTokenizer st;</span><br><span class="line">        BufferedReader br;</span><br><span class="line">        FastReader()&#123;</span><br><span class="line">            br=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        &#125;</span><br><span class="line">        String <span class="title function_">next</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">while</span> (st==<span class="literal">null</span>||!st.hasMoreElements())&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    st=<span class="keyword">new</span> <span class="title class_">StringTokenizer</span>(br.readLine());</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> st.nextToken();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="title function_">nextInt</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.parseInt(next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对顶堆是一个神奇的算法，第一次学，希望能记住该思想</p><p>该思想便是不断的维护中位数，<strong>确保大根堆所有的数都比小根堆小</strong>，且数量最多多一个，最少相等，那么大根堆的堆顶在奇数情况下，便是中位数，同时代码的实现也是一个点，<strong>我们始终将其当成一个维护好的对顶堆去操作</strong>，因为我们的插入方式一定可以满足第一种，小根堆的所有数大于大根堆里的所有数，那么只需我们完成第二种：大根堆的数-小根堆的数&gt;=1</p><h4 id="超快速排序">超快速排序</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220113194402857.png" alt="image-20220113194402857"></p><p>首先该题目的思想便是，使用交换排序的方式，将未排序的数字依次移动，和冒泡排序的方式是一样的，但是冒泡排序的操作过于冗余，比较次数过多</p><p>但是这道题和逆序对的数量也是有关系的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/13 19:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> temp[]=<span class="keyword">new</span> <span class="title class_">int</span>[(<span class="type">int</span>) (<span class="number">5e5</span>+<span class="number">5</span>)];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">long</span> <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span> q[],<span class="type">int</span> l,<span class="type">int</span> r)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(l&gt;=r) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="type">long</span> res=merge_sort(q,l,mid)+merge_sort(q,mid+<span class="number">1</span>,r);</span><br><span class="line">        <span class="type">int</span> k=<span class="number">0</span>,i=l,j=mid+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;=mid&amp;&amp;j&lt;=r)&#123;</span><br><span class="line">            <span class="keyword">if</span>(q[i]&lt;=q[j])&#123;</span><br><span class="line">                temp[k++]=q[i++];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                temp[k++]=q[j++];</span><br><span class="line">                res=res+mid-i+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;=mid) temp[k++]=q[i++];</span><br><span class="line">        <span class="keyword">while</span> (j&lt;=r) temp[k++]=q[j++];</span><br><span class="line">        <span class="keyword">for</span>(i=l,j=<span class="number">0</span>;i&lt;=r;i++,j++)q[i]=temp[j];</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[op];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;op;i++) a[i]=in.nextInt();</span><br><span class="line">        System.out.println(merge_sort(a,<span class="number">0</span>,op-<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> op;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> ((op=in.nextInt())!=<span class="number">0</span>)&#123;</span><br><span class="line">            solve();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在冒泡排序中，每做一次交换，那么就说明这两个数构成了一个逆序对，那么在将他们交换的同时，并不影响他们和别的数形成的逆序对</p><p>换个方式去想，一个数组如果没有逆序对就是升序</p><p><strong>感觉是逆序对用的归并排序，并不能证明是相邻两个数的交换；但冒泡排序的交换是相邻的数，然后每次交换的时候应该就是这两个数构成的逆序对</strong></p><h3 id="RMQ">RMQ</h3><h4 id="天才的记忆">天才的记忆</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220113213650414.png" alt="image-20220113213650414"></p><p>快速查询区间最值问题，1e4组查询，2e5个数，那么时间复杂度应是nlogn以内</p><p>RMQ被又称作st表，本质上动态规划</p><p>预处理f(i,j):从i开始长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>j</mi></msup></mrow><annotation encoding="application/x-tex">2^j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8247em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8247em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span></span></span></span></span></span></span>，最大值是多少</p><p>f(i,j)=max{f(i,j-1),f(i+<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^{j-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8247em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8247em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>,j-1)};</p><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220113220201772.png" alt="image-20220113220201772"></p><p>对于每一个l~r区间的查询，首先该区间的长度为len=r-l+1 那么<strong>首先找到&lt;=len 的 2 的 最 大 次 幂k</strong></p><p>那么2 * <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>严格大于 len，那么便可以分成两段来求最大值</p><p>第一段为f(l,k) ，第二段就要变成<strong>以r为终点，长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>的区间</strong> 那么该区间便是f(r-<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>+1,k) ,这两段的并集是完全包括l~r区间的 ，<strong>便是第二段的起点，要小于等于第一段的终点+1</strong></p><p>f(l,k) 这个区间查的是**[l  ~  l+<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>-1]**区间的值 f(r-<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>+1  ,  k)是 **[r-<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>+1 ,  r]**的值，</p><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98E26DDF00A66F156EB576E1523A6B60CC.jpg" alt="img"></p><p>因为该式子理论上只要第二段的的右端点比第一段的左端点要<strong>小于等于</strong>即可并集出一个完整的区间，实际上在此证明得出 第二段的左端点严格小于第一端的右端点，所以成立</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/13 22:15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> class 天才的记忆 &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> N= (<span class="type">int</span>) (<span class="number">2e5</span>+<span class="number">10</span>),M=<span class="number">18</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> w[]=<span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> f[][]=<span class="keyword">new</span> <span class="title class_">int</span>[N][M];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n,m;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;M;j++)&#123;<span class="comment">//f(i,j)以i为起点 长度为2^j的最大值</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i+(<span class="number">1</span>&lt;&lt;j)-<span class="number">1</span>&lt;=n;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(j==<span class="number">0</span>) f[i][j]=w[i];</span><br><span class="line">                <span class="keyword">else</span> f[i][j]= Math.max(f[i][j-<span class="number">1</span>],f[i+(<span class="number">1</span>&lt;&lt;j-<span class="number">1</span>)][j-<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">query</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span>&#123;</span><br><span class="line">        <span class="type">int</span> len=r-l+<span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.log(len) / Math.log(<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">return</span> Math.max(f[l][k],f[r-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        n=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) w[i]=in.nextInt();</span><br><span class="line">        init();</span><br><span class="line">        m=in.nextInt();</span><br><span class="line">        <span class="keyword">while</span> (m--&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">int</span> l=in.nextInt(),r=in.nextInt();</span><br><span class="line">            System.out.println(query(l,r));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>核心便是跳表的知识，还有有待加强的数学</p><h2 id="动态规划">动态规划</h2><h3 id="数字三角形模型">数字三角形模型</h3><h4 id="摘花生">摘花生</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220117154604881.png" alt="image-20220117154604881"></p><p>首先题目的意思便是从左往右，从上往下的方式读入数据，hello Kitty从左上角走到右下角所经过的最大价值，那么很明显这是一个数字三角形模型，每一点的状态可以从该点的上面或者左边转移而来，存放的是走到<strong>第i行第j列的位置</strong>的最大值，</p><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220117170056108.png" alt="image-20220117170056108"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/15 19:50</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> class 摘花生 &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> r=in.nextInt(),c=in.nextInt();</span><br><span class="line">        <span class="type">int</span> a[][]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=r;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=c;j++)&#123;</span><br><span class="line">                a[i][j]=in.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=r;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=c;j++)&#123;</span><br><span class="line">                a[i][j]=Math.max(a[i-<span class="number">1</span>][j],a[i][j-<span class="number">1</span>])+a[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(a[r][c]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> t=in.nextInt();</span><br><span class="line">        <span class="keyword">while</span> (t--&gt;<span class="number">0</span>) solve();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="最低通行费用">最低通行费用</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220117172753419.png" alt="image-20220117172753419"></p><p>1.首先这题是询问数字三角形的最小值</p><p>2.该题虽说可以上下左右四个方向走，但只能走2n-1步，代表只能向下走或向右走</p><p>3.该题说不能走出网格外，代表在计算第一行和第一列的最小状态时候，要特判一下，只能从上方来或者只能从左边来</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/17 17:28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> w[][]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">                w[i][j]=in.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i==<span class="number">1</span>)&#123;</span><br><span class="line">                    w[i][j]+=w[i][j-<span class="number">1</span>];</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(j==<span class="number">1</span>)&#123;</span><br><span class="line">                    w[i][j]+=w[i-<span class="number">1</span>][j];</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    w[i][j]=Math.min(w[i][j-<span class="number">1</span>],w[i-<span class="number">1</span>][j])+w[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(w[n][n]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        solve();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="方格取数">方格取数</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220117205136205.png" alt="image-20220117205136205"></p><p>该题是走同时走两次数字三角形，在这之前走一次数字三角形的思路便是f[i,j]为从(1,1)走到(i,j)的最大的路径和</p><p>在该题便是同时走两次数字三角形 ，状态为f[i1,j1,i2,j2] 代表从(1,1),(1,1)走到(i1,j1),(i2,j2)的最大路径和</p><p>曼哈顿距离定义为 两点间东西距离+南北距离</p><p>欧氏距离定义为 两点间的直线距离</p><p>1.我们可以发现，若同时走的话，两条路径的曼哈顿距离始终一样，便是i1+j1== i2+j2 ，那么我们的状态便可以改成f[k,i1,i2] 通过<strong>枚举曼哈顿距离</strong>来计算 j1与j2  k == i1+j1 == i2+j2</p><p>2.当曼哈顿距离一样的时候，那么仅有i1==i2，两点才重合，当两点重合时，该距离只能走一点</p><p>那么状态可以划分成四种</p><p>1.第1条路径从<strong>上方</strong>到达了最后一个点，第2条路径从<strong>上方</strong>到达了最后一个点f(i1-1,j1,i2-1,j2)=&gt;f(k-1,i1-1,i2-1)</p><p>2.第1条路径从<strong>上方</strong>到达了最后一个点，第2条路径从<strong>左方</strong>到达了最后一个点f(i1-1,j1,i2,j2-1)=&gt;f(k-1,i1-1,i2)</p><p>3.第1条路径从<strong>左方</strong>到达了最后一个点，第2条路径从<strong>上方</strong>到达了最后一个点f(i1,j1-1,i2-1,j2)=&gt;f(k-1,i1,i2-1)</p><p>4.第1条路径从<strong>左方</strong>到达了最后一个点，第2条路径从<strong>左方</strong>到达了最后一个点f(i1,j1-1,i2,j2-1)=&gt;f(k-1,i1,i2)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/17 20:20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> N=<span class="number">15</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> w[][]=<span class="keyword">new</span> <span class="title class_">int</span>[N][N];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> f[][][]=<span class="keyword">new</span> <span class="title class_">int</span>[N*<span class="number">2</span>][N][N];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">2</span>;k&lt;=n*<span class="number">2</span>;k++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i1=<span class="number">1</span>;i1&lt;=n;i1++)&#123;</span><br><span class="line">                <span class="type">int</span> j1=k-i1;</span><br><span class="line">                <span class="keyword">if</span>(j1&lt;<span class="number">1</span>||j1&gt;n) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> i2=<span class="number">1</span>;i2&lt;=n;i2++)&#123;</span><br><span class="line">                    <span class="type">int</span> j2=k-i2;</span><br><span class="line">                    <span class="keyword">if</span>(j2&lt;<span class="number">1</span>||j2&gt;n) <span class="keyword">continue</span>;</span><br><span class="line">                    <span class="type">int</span> x=f[k-<span class="number">1</span>][i1-<span class="number">1</span>][i2-<span class="number">1</span>];</span><br><span class="line">                    x=Math.max(f[k-<span class="number">1</span>][i1-<span class="number">1</span>][i2],x);</span><br><span class="line">                    x=Math.max(f[k-<span class="number">1</span>][i1][i2-<span class="number">1</span>],x);</span><br><span class="line">                    x=Math.max(f[k-<span class="number">1</span>][i1][i2],x);</span><br><span class="line">                    f[k][i1][i2]=x+w[i1][j1];</span><br><span class="line">                    <span class="keyword">if</span>(i1==i2) <span class="keyword">continue</span>;</span><br><span class="line">                    f[k][i1][i2]+=w[i2][j2];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(f[n+n][n][n]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        n=in.nextInt();</span><br><span class="line">        <span class="type">int</span> r,c,s;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            r=in.nextInt();c=in.nextInt();s=in.nextInt();</span><br><span class="line">            w[r][c]+=s;</span><br><span class="line">        &#125;<span class="keyword">while</span> (r!=<span class="number">0</span>);</span><br><span class="line">        solve();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第一次写这种三维dp的题目，感觉状态的表示与状态的转换要想好，此时对于dp的感觉就是用数组存下从头到尾所有会出现的状态，然后遍历数组的同时把状态全部递推出来，一般状态转移公式都是看最后一步如何得到的</p><h4 id="传纸条">传纸条</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220117205309778.png" alt="image-20220117205309778"></p><p>首先分析题目，好心程度代表价值，来回路径代表走二次数字三角形，那么该题便还是一道同时走两次的数字三角形</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/17 20:56</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> N=<span class="number">55</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> w[][]=<span class="keyword">new</span> <span class="title class_">int</span>[N][N];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> f[][][]=<span class="keyword">new</span> <span class="title class_">int</span>[N&lt;&lt;<span class="number">1</span>][N][N];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n,m;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">                w[i][j]=in.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">2</span>;k&lt;=n+m;k++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i1=<span class="number">1</span>;i1&lt;=n;i1++)&#123;</span><br><span class="line">                <span class="type">int</span> j1=k-i1;</span><br><span class="line">                <span class="keyword">if</span>(j1&gt;m||j1&lt;<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> i2=<span class="number">1</span>;i2&lt;=n;i2++)&#123;</span><br><span class="line">                    <span class="type">int</span> j2=k-i2;</span><br><span class="line">                    <span class="keyword">if</span>(j2&gt;m||j2&lt;<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">                    <span class="type">int</span> x=f[k-<span class="number">1</span>][i1][i2];</span><br><span class="line">                    x=Math.max(x,f[k-<span class="number">1</span>][i1-<span class="number">1</span>][i2]);</span><br><span class="line">                    x=Math.max(x,f[k-<span class="number">1</span>][i1][i2-<span class="number">1</span>]);</span><br><span class="line">                    x=Math.max(x,f[k-<span class="number">1</span>][i1-<span class="number">1</span>][i2-<span class="number">1</span>]);</span><br><span class="line">                    f[k][i1][i2]=x+w[i1][j1];</span><br><span class="line">                    <span class="keyword">if</span>(i1==i2) <span class="keyword">continue</span>;</span><br><span class="line">                    f[k][i1][i2]+=w[i2][j2];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(f[n+m][n][n]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        n=in.nextInt();</span><br><span class="line">        m=in.nextInt();</span><br><span class="line">        solve();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>那么首先要注意的是我们i1，i2是行号，那么枚举范围便是&lt;=行号，状态是 f [ k] [i1] [i2] 因为i1+j1==i2+j2 == k</p><p>压缩了空间,k便是曼哈顿长度</p><h3 id="最长上升子序列模型-LIS">最长上升子序列模型 LIS</h3><h4 id="最长上升子序列问题">最长上升子序列问题</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220118183809314.png" alt="image-20220118183809314"></p><p>状态表示：<strong>f[i]:表示为以a[i]结尾的最长上升子序列的个数</strong></p><p>状态转移：所有**在a[i]前面的数且小于a[i]**构成的最长上升子序列f[i]的个数的最大值+1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/18 19:06</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> f[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) a[i]=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            f[i]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;i;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]&gt;a[j]) f[i]= Math.max(f[i],f[j]+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) res= Math.max(res,f[i]);</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="怪盗基德的滑翔翼">怪盗基德的滑翔翼</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220118183151378.png" alt="image-20220118183151378"></p><p>首先看这题，题意便是求最长下降子序列，那么状态f[i]便是以 a[i]结尾最长的下降子序列的个数</p><p>状态转移便是 <strong>在a[i]前面所有比a[i]大的数的最长的下降子序列的最大值+1</strong></p><p>但是这道题还有一点便是，基德可以<strong>在任意一个楼的位置起跳</strong>，那么该题还需要同时统计最长上升子序列的数量，这样才能求出基德最多跳多少次，</p><p>因为LDS从左边往右，跳的时候覆盖了所有点往右跳的情况</p><p>LIS便是相当于从右往左跳，覆盖了所有点往左跳的情况</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/18 16:23</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">static</span>  <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> k,n;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span>&#123;</span><br><span class="line">        n=in.nextInt();</span><br><span class="line">        <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">105</span>];</span><br><span class="line">        <span class="type">int</span> f[][]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">105</span>][<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) a[i]=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            f[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">            f[i][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;i;j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[j]&gt;a[i])</span><br><span class="line">                f[i][<span class="number">0</span>]=Math.max(f[i][<span class="number">0</span>],f[j][<span class="number">0</span>]+<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span>(a[i]&gt;a[j]) f[i][<span class="number">1</span>]=Math.max(f[i][<span class="number">1</span>],f[j][<span class="number">1</span>]+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> res=-<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) res=Math.max(res,Math.max(f[i][<span class="number">0</span>],f[i][<span class="number">1</span>]));</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">       k=in.nextInt();</span><br><span class="line">       <span class="keyword">while</span> (k--&gt;<span class="number">0</span>) solve();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="登山">登山</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220118212528022.png" alt="image-20220118212528022"></p><p>看登山这道题，从第一个景点开始到最后一个景点，且下山后便不能再次上山，那么该问题便是最大的以i为终点的最长上升子序列，和<strong>以i为起点，n为终点的最长下降子序列问题</strong>，那么<strong>以i为起点的最长下降子序列问题可以变成以n为起点，i为终点的最长上升子序列问题</strong>，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/18 21:27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> class 登山 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>];</span><br><span class="line">        <span class="type">int</span> f[][]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>][<span class="number">2</span>];</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            a[i]=in.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;<span class="comment">//以i为终点的lis + 以i为起点的lds</span></span><br><span class="line">            f[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;i;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]&gt;a[j])&#123;</span><br><span class="line">                    f[i][<span class="number">0</span>]=Math.max(f[i][<span class="number">0</span>],f[j][<span class="number">0</span>]+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//以i为起点的lds==以n为起点，i为终点的lis</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">            f[i][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=n;j&gt;i;j--)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]&gt;a[j])&#123;</span><br><span class="line">                    f[i][<span class="number">1</span>]=Math.max(f[i][<span class="number">1</span>],f[j][<span class="number">1</span>]+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            res=Math.max(res,f[i][<span class="number">0</span>]+f[i][<span class="number">1</span>]-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="合唱队形">合唱队形</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220118213520901.png" alt="image-20220118213520901"></p><p>这道题和上面一题很像，题目意思便是，使得选择的同学最多，便是出列的同学最少，那么需要构成最大的以i为终点的lis和<strong>以n为起点的 lis</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/18 22:14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> class 合唱队形 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>];</span><br><span class="line">        <span class="type">int</span> f[][]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>][<span class="number">2</span>];</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            a[i]=in.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;<span class="comment">//以i为终点的lis + 以i为起点的lds</span></span><br><span class="line">            f[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;i;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]&gt;a[j])&#123;</span><br><span class="line">                    f[i][<span class="number">0</span>]=Math.max(f[i][<span class="number">0</span>],f[j][<span class="number">0</span>]+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(a[i]&lt;a[j])&#123;</span><br><span class="line">                    f[i][<span class="number">1</span>]=Math.max(f[i][<span class="number">1</span>],f[j][<span class="number">1</span>]+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//以i为起点的lds==以n为起点，i为终点的lis</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">            f[i][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=n;j&gt;i;j--)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]&gt;a[j])&#123;</span><br><span class="line">                    f[i][<span class="number">1</span>]=Math.max(f[i][<span class="number">1</span>],f[j][<span class="number">1</span>]+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            res=Math.max(res,f[i][<span class="number">0</span>]+f[i][<span class="number">1</span>]-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(n-res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="友好城市">友好城市</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220118224840841.png" alt="image-20220118224840841"></p><p>这道题也是比较简单的一题，通过对案例的画图可以发现，如果对南岸城市排序好，那么对于其对应的北方城市，就构成了一个最长上升子序列的问题，当两组友好城市，一方南岸坐标和北岸坐标均大于时另一方，两城市的桥梁才不会相交，那么在一岸坐标确定的情况下，那么另一岸便是最长上升子序列问题，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/18 22:39</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Pair</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">Pair</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.x = x;</span><br><span class="line">            <span class="built_in">this</span>.y = y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> Pair[] pairs=<span class="keyword">new</span> <span class="title class_">Pair</span>[<span class="number">5010</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> f[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5010</span>];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="type">int</span> x=in.nextInt();</span><br><span class="line">            <span class="type">int</span> y=in.nextInt();</span><br><span class="line">            pairs[i]=<span class="keyword">new</span> <span class="title class_">Pair</span>(x,y);</span><br><span class="line">        &#125;</span><br><span class="line">        Arrays.sort(pairs,<span class="number">1</span>,n+<span class="number">1</span>,(x,y)-&gt;&#123;<span class="keyword">return</span> x.x-y.x;&#125;);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            f[i]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;i;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(pairs[i].y&gt;pairs[j].y)&#123;</span><br><span class="line">                    f[i]=Math.max(f[i],f[j]+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            res=Math.max(f[i],res);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="最大上升子序列的和">最大上升子序列的和</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220118225523553.png" alt="image-20220118225523553"></p><p>那么在之前，我们f[i]表示的是<strong>以a[i]结尾的最长上升子序列的数量</strong> 状态转移是找出a[i]左边比a[i]小的最大的数量，</p><p>这题f[i]表示为以a[i]结尾的最长上升子序列的值 状态转移是找出a[i]左边比a[i]小的最大的值，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/18 23:13</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>];</span><br><span class="line">        <span class="type">int</span> f[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            a[i]=in.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            f[i]=a[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;i;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[j]&lt;a[i])&#123;</span><br><span class="line">                    f[i]=Math.max(f[i],f[j]+a[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            res=Math.max(res,f[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="拦截导弹">拦截导弹</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220119001946289.png" alt="image-20220119001946289"></p><p>那么该题有两问，第一问便是最长不上升序列的长度，第二问便是划分最少的不上升子序列的个数</p><p><strong>dilworth定理</strong></p><p>1.划分最少的不上升子序列个数 == 最长上升子序列长度<br>2.划分最少的不下降子序列个数 == 最长下降子序列长度<br>3.划分最少的下降子序列长度 == 最长不下降子序列长度<br>4.划分最少的上升子序列长度 == 最长不上升子序列长度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/19 00:23</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> lds[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>];</span><br><span class="line">        <span class="type">int</span> lis[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>];</span><br><span class="line">        <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>];</span><br><span class="line">        String line=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in)).readLine();</span><br><span class="line">        String values[]=line.split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=values.length;i++) a[i]=Integer.parseInt(values[i-<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=values.length;i++)&#123;</span><br><span class="line">            lds[i]=<span class="number">1</span>;</span><br><span class="line">            lis[i]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;i;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]&lt;=a[j])&#123;</span><br><span class="line">                    lds[i]=Math.max(lds[i],lds[j]+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(a[i]&gt;a[j])&#123;</span><br><span class="line">                    lis[i]=Math.max(lis[i],lis[j]+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> res1=<span class="number">0</span>,res2=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=values.length;i++)&#123;</span><br><span class="line">            res1=Math.max(res1,lds[i]);</span><br><span class="line">            res2=Math.max(res2,lis[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(res1);</span><br><span class="line">        System.out.println(res2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>很有用的定理，要记下来，同时注意bufferedReader读数据的时候注意下标</p><h4 id="导弹防御系统">导弹防御系统*</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220119045901004.png" alt="image-20220119045901004"></p><h4 id="最长公共子序列">最长公共子序列</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220121224232015.png" alt="image-20220121224232015"></p><p>首先本题的状态划分为f[i,j]  表示为由长度 1~i 的a串和1~j的b串构成的最长公共子序列的长度 ，那么状态转移方程的推导就直接看最后一步 f [i] [j]</p><p>首先f[i] [j] 可以由 f[i-1] [j] 和 f[i] [j-1] 推导得来 ，当从这两个状态转移而来的时候便相当于分别把a串最后一个字符加入和b串最后一个字符加入，那么我们只需要考虑加入的情况即可</p><p>如果ab串最后1个字符相同，那么答案肯定就是f[i-1] [j-1] +1,</p><p><strong>如果ab串最后1个字符不同</strong>，在b串已经全部填完的情况下，<strong>我们把a串最后一个字符加入，可能会对lcs的结果产生影响</strong>，因为 last_a和last_b不同，那我们就看f[i-1] [j] 的数量</p><p>同时，<strong>在a串已经全部填完的情况下 ，把b串最后一个字符插入，也可能会对lcs的结果产生影响，因为两个串最后1个字符不同，我们就看b的全部和a-1的情况就好了，这个情况就是b加入影响的结果</strong></p><p>然后取这两个结果的最大值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/21 22:56</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> class 最长公共子序列 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> lena=in.nextInt();</span><br><span class="line">        <span class="type">int</span> lenb=in.nextInt();</span><br><span class="line">        <span class="type">int</span> f[][]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>][<span class="number">1005</span>];</span><br><span class="line">        <span class="type">char</span> a[]=<span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">1004</span>];</span><br><span class="line">        <span class="type">char</span> b[]=<span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">1005</span>];</span><br><span class="line">        String sa=in.next();</span><br><span class="line">        String sb=in.next();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;sa.length();i++)&#123;</span><br><span class="line">            a[i+<span class="number">1</span>]=sa.charAt(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;sb.length();i++)&#123;</span><br><span class="line">            b[i+<span class="number">1</span>]=sb.charAt(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=lena;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=lenb;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i]==b[j])&#123;</span><br><span class="line">                    f[i][j]=f[i-<span class="number">1</span>][j-<span class="number">1</span>]+<span class="number">1</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    f[i][j]=Math.max(f[i-<span class="number">1</span>][j],f[i][j-<span class="number">1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(f[lena][lenb]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>状态转移方程还是要看最后一步怎么来的</p><h4 id="最长公共上升子序列">最长公共上升子序列*</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220121224057501.png" alt="image-20220121224057501"></p><h3 id="背包模型">背包模型</h3><h4 id="01背包问题">01背包问题</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220122085246846.png" alt="image-20220122085246846"></p><p>01背包问题是所有背包问题的基础，对于每个物品他有选和不选两种方式，那么如果暴力去搜，复杂度便是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></p><p>那么这里采用动态规划的方式：状态f[i,j]代表前i个物品，体积为j的最大价值</p><p>状态转移便是：对于每个物品v[i]，遍历所有的体积，在这个区间（m~v[i]）内的体积都可以拥有这个物品（<strong>加上该物品才等于j</strong>），不在这个区间的便是大小不允许选该物品，如果不选该物品，那么状态便是f[i-1] [j]。</p><p><strong>换句话而言：当选择这个物品的时候，那么剩余背包的体积便是j-v[i]</strong></p><p><strong>此时这些体积是没有确定是否选择该物品的</strong>，如果选择该物品，<strong>便是j-v[i]的价值，加上v[i]的价值大于现在的价值</strong>，状态便是由f[i-1] [j-v[i]] 转移而来</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/22 08:53</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> m;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> v[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> w[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> f[][]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>][<span class="number">1005</span>];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        n=in.nextInt();</span><br><span class="line">        m=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            v[i]=in.nextInt();</span><br><span class="line">            w[i]=in.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">           <span class="keyword">for</span>(<span class="type">int</span> j=m;j&gt;=<span class="number">1</span>;j--)&#123;</span><br><span class="line">               f[i][j]=f[i-<span class="number">1</span>][j];</span><br><span class="line">               <span class="keyword">if</span>(j&gt;=v[i]) f[i][j]=Math.max(f[i][j],f[i-<span class="number">1</span>][j-v[i]]+w[i]);</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(f[n][m]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么我们可以发现，更新的时候只用到了两层，分别是<strong>f[i]和f[i-1]这一层</strong>，那我们便可以压缩空间成一维，这样我们原地更新的时候，<strong>在自己的基础上更新就相当于在f[i-1]层更新，然后把结果保存到了f[i]层，就像滚动数组</strong>，没更新的地方就相当于原本就是f[i-1] [j]的值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/22 08:53</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> class 背包问题_01 &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> m;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> v[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> w[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> f[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>];</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        n=in.nextInt();</span><br><span class="line">        m=in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            v[i]=in.nextInt();</span><br><span class="line">            w[i]=in.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=m;j-v[i]&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">                f[j]=Math.max(f[j],f[j-v[i]]+w[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(f[m]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>二维01背包是无需考虑顺序逆序的，只需要特判选择该物品剩余背包的体积是否合法(＞0)，因为每一次都是从上一个状态转移而来</p><p>而一维背包是从逆序更新而来，如果顺序的话，转移的时候不一定是从f[i-1]时刻转移而来的，有可能会从f[i]状态转移而来，也就是选择了v[i]的情况</p><h4 id="完全背包问题">完全背包问题</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220122123141072.png" alt="image-20220122123141072"></p><p>完全背包和01背包很像，01背包是一维逆序遍历区间，对于每个结果的更新不会影响到后面，而且完全背包是一维二维都要正序遍历区间，对每个结果的更新会影响后面</p><p>这是因为要保证第i次循环中的状态f[i] [v]是由状态f[i-1] [v-c[i]]递推而来。换句话说，这正是为了保证每件物品只选一次，保证在考虑“选入第i件物品”这件策略时，依据的是一个绝无已经选入第i件物品的子结果f[i-1] [v-c[i]]。而现在完全背包的特点恰是每种物品可选无限件，所以在考虑“加选一件第i种物品”这种策略时，却正需要一个可能已选入第i种物品的子结果f[i] [v-c[i]]，所以就可以并且必须采用v= 0…V的顺序循环。这就是这个简单的程序为何成立的道理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/22 12:26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> m;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> v[] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> w[] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> f[] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        n = in.nextInt();</span><br><span class="line">        m = in.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            v[i] = in.nextInt();</span><br><span class="line">            w[i] = in.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> v[i];j&lt;=m; j++) &#123;</span><br><span class="line">                f[j] = Math.max(f[j], f[j - v[i]] + w[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(f[m]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="采药">采药</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220122123522774.png" alt="image-20220122123522774"></p><p>那么这道题便是裸的01背包问题，时间便是背包容量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/22 12:36</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> t=in.nextInt();</span><br><span class="line">        <span class="type">int</span> m=in.nextInt();</span><br><span class="line">        <span class="type">int</span> f[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1005</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">            <span class="type">int</span> v=in.nextInt();</span><br><span class="line">            <span class="type">int</span> w=in.nextInt();</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=t;j-v&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">                f[j]=Math.max(f[j],f[j-v]+w);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(f[t]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="装箱问题">装箱问题</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220122124135736.png" alt="image-20220122124135736"></p><p>那么该题也是裸的01背包问题，体积同时也是价值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 邶风</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@data</span> 2022/1/22 12:43</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> class 装箱问题 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> v=in.nextInt();</span><br><span class="line">        <span class="type">int</span> n=in.nextInt();</span><br><span class="line">        <span class="type">int</span> f[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">20005</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="type">int</span> c=in.nextInt();</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=v;j&gt;=c;j--)&#123;</span><br><span class="line">                f[j]=Math.max(f[j],f[j-c]+c);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(v-f[v]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="宠物小精灵之收服">宠物小精灵之收服</h4><p><img src="/img/%E9%97%AB%E5%AD%A6%E7%81%BF%E7%AE%97%E6%B3%95%E6%8F%90%E9%AB%98/image-20220126215337804.png" alt="image-20220126215337804"></p><h3 id="高级数据结构">高级数据结构</h3><h4 id="树状数组">树状数组</h4><h3 id="图论">图论</h3><h3 id="搜索">搜索</h3><h3 id="数学">数学</h3>]]></content>
    
    
    <summary type="html">闫学灿选法提高课</summary>
    
    
    
    <category term="ACM" scheme="http://1804040636.github.io/categories/ACM/"/>
    
    <category term="Java" scheme="http://1804040636.github.io/categories/ACM/Java/"/>
    
    
    <category term="Java" scheme="http://1804040636.github.io/tags/Java/"/>
    
    <category term="ACM" scheme="http://1804040636.github.io/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>数据结构二叉树遍历</title>
    <link href="http://1804040636.github.io/2023/01/31/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86/"/>
    <id>http://1804040636.github.io/2023/01/31/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86/</id>
    <published>2023-01-31T05:03:09.000Z</published>
    <updated>2023-03-04T19:11:57.428Z</updated>
    
    <content type="html"><![CDATA[<h3 id="代码">代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> leafFormat=<span class="number">0</span>;<span class="comment">//控制二叉树叶子节点输出格式 </span></span><br><span class="line"><span class="type">int</span> maxHeight=<span class="number">0</span>;<span class="comment">//计算二叉树高度 </span></span><br><span class="line"><span class="comment">//定义二叉树结构体 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BTreeNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">char</span> data[<span class="number">10</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BTreeNode</span>* <span class="title">left</span>;</span> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BTreeNode</span>* <span class="title">right</span>;</span> </span><br><span class="line"> &#125; BTreeNode;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//建立二叉树 </span></span><br><span class="line">BTreeNode *<span class="title function_">CreateTree</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">BTreeNode *t;</span><br><span class="line"><span class="type">char</span> x[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,x);</span><br><span class="line">getchar();</span><br><span class="line"><span class="keyword">if</span>(x[<span class="number">0</span>]==<span class="string">&#x27;0&#x27;</span>)<span class="comment">//如果输入的为字符0,则退出 </span></span><br><span class="line">    t=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">t=(BTreeNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(BTreeNode));<span class="comment">//动态申请空间 </span></span><br><span class="line"><span class="built_in">strcpy</span>(t-&gt;data,x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t请输入%s结点的左子节点:&quot;</span>,t-&gt;data);</span><br><span class="line">t-&gt;left=CreateTree();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t请输入%s结点的右子节点:&quot;</span>,t-&gt;data);</span><br><span class="line">t-&gt;right=CreateTree();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//先序遍历</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PreOrder</span><span class="params">(BTreeNode *T)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!T) <span class="keyword">return</span> ;<span class="comment">//当前结点为空，直接退出函数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%3s&quot;</span>,T-&gt;data);<span class="comment">//输出当前根结点 </span></span><br><span class="line">PreOrder(T-&gt;left);<span class="comment">//递归左子树 </span></span><br><span class="line">PreOrder(T-&gt;right);<span class="comment">//递归右子树 </span></span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//中序遍历</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InOrder</span><span class="params">(BTreeNode *T)</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">if</span>(!T) <span class="keyword">return</span> ;<span class="comment">//当前结点为空，直接退出函数</span></span><br><span class="line"> </span><br><span class="line">InOrder(T-&gt;left);<span class="comment">//递归左子树 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%3s&quot;</span>,T-&gt;data);<span class="comment">//输出当前根结点 </span></span><br><span class="line">InOrder(T-&gt;right);<span class="comment">//递归右子树 </span></span><br><span class="line"> </span><br><span class="line">&#125; </span><br><span class="line">  </span><br><span class="line">  <span class="comment">//后序遍历</span></span><br><span class="line">  <span class="type">void</span> <span class="title function_">PostOrder</span><span class="params">(BTreeNode *T)</span></span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">if</span>(!T) <span class="keyword">return</span> ;<span class="comment">//当前结点为空，直接退出函数</span></span><br><span class="line">  </span><br><span class="line">PostOrder(T-&gt;left);<span class="comment">//递归左子树 </span></span><br><span class="line">PostOrder(T-&gt;right);<span class="comment">//递归右子树 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%3s&quot;</span>,T-&gt;data);<span class="comment">//输出当前根结点 </span></span><br><span class="line">  </span><br><span class="line">   &#125; </span><br><span class="line">   </span><br><span class="line">  <span class="comment">//输出二叉树叶子节点 </span></span><br><span class="line">  <span class="type">void</span> <span class="title function_">printLeaf</span><span class="params">(BTreeNode *T)</span>&#123;<span class="comment">//n记录是第一个叶子节点，如果是第一个，保证输出格式 </span></span><br><span class="line">  <span class="keyword">if</span>(!T) <span class="keyword">return</span> ;<span class="comment">//当前结点为空，直接退出函数</span></span><br><span class="line"><span class="keyword">if</span>(T-&gt;left==<span class="literal">NULL</span> &amp;&amp; T-&gt;right==<span class="literal">NULL</span>)&#123;<span class="comment">//如果为叶子节点 </span></span><br><span class="line"><span class="keyword">if</span>(leafFormat==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t叶子节点为:%s&quot;</span>,T-&gt;data);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t%s&quot;</span>,T-&gt;data);</span><br><span class="line">&#125;</span><br><span class="line">leafFormat++;</span><br><span class="line">&#125;</span><br><span class="line">printLeaf(T-&gt;left);</span><br><span class="line">printLeaf(T-&gt;right); </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//输出二叉树的叶子结点数</span></span><br><span class="line">  <span class="type">void</span> <span class="title function_">Leafnum</span><span class="params">(BTreeNode *T,<span class="type">int</span> *count)</span></span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">if</span>(!T) <span class="keyword">return</span> ;<span class="comment">//当前结点为空，直接退出函数</span></span><br><span class="line">  <span class="keyword">if</span>(T-&gt;left==<span class="literal">NULL</span> &amp;&amp; T-&gt;right==<span class="literal">NULL</span>)<span class="comment">//且左右结点都是空，说明是叶子节点 </span></span><br><span class="line">  *count=*count+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  Leafnum(T-&gt;left,count);</span><br><span class="line">  Leafnum(T-&gt;right,count);</span><br><span class="line">   </span><br><span class="line">   &#125; </span><br><span class="line">   </span><br><span class="line">   <span class="comment">//输出二叉树高度 </span></span><br><span class="line">   <span class="type">void</span> <span class="title function_">binaryHeight</span><span class="params">(BTreeNode *T,<span class="type">int</span> h)</span>&#123;<span class="comment">//求高度，一颗子树递归几次，高度就是多少，取最大值 </span></span><br><span class="line">   <span class="keyword">if</span>(!T) <span class="keyword">return</span> ;<span class="comment">//当前结点为空，直接退出函数</span></span><br><span class="line">  <span class="keyword">if</span>(T-&gt;left==<span class="literal">NULL</span> &amp;&amp; T-&gt;right==<span class="literal">NULL</span>)&#123;<span class="comment">//且左右结点都是空，说明是叶子节点 </span></span><br><span class="line">  maxHeight=maxHeight&gt;h?maxHeight:h;</span><br><span class="line">&#125;</span><br><span class="line">binaryHeight(T-&gt;left,h+<span class="number">1</span>);</span><br><span class="line">binaryHeight(T-&gt;right,h+<span class="number">1</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//打印二叉树</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">printBinaryTree</span><span class="params">(BTreeNode *T,<span class="type">int</span> level)</span> &#123; <span class="comment">//层数 </span></span><br><span class="line"><span class="keyword">if</span> (!T) &#123;<span class="comment">//如果为空节点 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;level;i++) &#123; <span class="comment">//打印空格 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NULL\n&quot;</span>);<span class="comment">//输出空节点 </span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">printBinaryTree(T-&gt;right,level+<span class="number">1</span>);<span class="comment">//右结点 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;level;i++) &#123; <span class="comment">//打印空格 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,T-&gt;data);<span class="comment">//输出当前结点 </span></span><br><span class="line">printBinaryTree(T-&gt;left,level+<span class="number">1</span>);<span class="comment">//递归左结点 </span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">BTreeNode *T=<span class="literal">NULL</span>;</span><br><span class="line"><span class="type">char</span> ch1,ch2,a;</span><br><span class="line">ch1=<span class="string">&#x27;y&#x27;</span>;</span><br><span class="line"><span class="keyword">while</span>(ch1==<span class="string">&#x27;y&#x27;</span>||ch1==<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t二叉树子系统&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t********************&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t*   1--建立二叉树   &quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t*   2--先序遍历     &quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t*   3--中序遍历     &quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t*   4--后序遍历     &quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t*   5--输出二叉树的叶子结点   &quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t*   6--输出叶子结点数         &quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t*   7--输出二叉树的高度       &quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t*   8--将创建的二叉树以树状形式输出 &quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t*   0--退出系统     &quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t********************&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t  请输入菜单号(0-7):&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot; %c&quot;</span>,&amp;ch2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">switch</span>(ch2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t请按先序序列输入二叉树的结点：\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t请输入根节点:&quot;</span>);</span><br><span class="line">T=CreateTree();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t二叉树成功建立\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t该二叉树的先序遍历序列为:&quot;</span>);</span><br><span class="line">            PreOrder(T);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n\t\t该二叉树的中序遍历序列为:&quot;</span>);</span><br><span class="line">            InOrder(T);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n\t\t该二叉树的后序遍历序列为:&quot;</span>);</span><br><span class="line">            PostOrder(T);</span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:&#123;</span><br><span class="line">            leafFormat=<span class="number">0</span>; </span><br><span class="line">            printLeaf(T);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125; </span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>:&#123;</span><br><span class="line">            <span class="type">int</span> count=<span class="number">0</span>,*p=&amp;count;</span><br><span class="line">Leafnum(T,p);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t该二叉树叶子节点个数为%d&quot;</span>,count);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;7&#x27;</span>:&#123;</span><br><span class="line">maxHeight=<span class="number">0</span>; </span><br><span class="line">binaryHeight(T,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t该二叉树高度为%d&quot;</span>,maxHeight);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;8&#x27;</span>:&#123;</span><br><span class="line">printBinaryTree(T,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>:&#123;</span><br><span class="line">            ch1=<span class="string">&#x27;n&#x27;</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">            <span class="keyword">default</span>:<span class="built_in">printf</span>(<span class="string">&quot;\n\t\t输入有误&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码详解">代码详解</h3><h4 id="前置工作">前置工作</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BTreeNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">char</span> data[<span class="number">10</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BTreeNode</span>* <span class="title">left</span>;</span> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BTreeNode</span>* <span class="title">right</span>;</span> </span><br><span class="line"> &#125; BTreeNode;</span><br></pre></td></tr></table></figure><p>创建结点，每个结点有一个字符数组存数据，同时还有指向左儿子和右儿子的指针</p><h4 id="创建二叉树">创建二叉树</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">BTreeNode *<span class="title function_">CreateTree</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">BTreeNode *t;</span><br><span class="line"><span class="type">char</span> x[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,x);</span><br><span class="line">getchar();</span><br><span class="line"><span class="keyword">if</span>(x[<span class="number">0</span>]==<span class="string">&#x27;0&#x27;</span>)<span class="comment">//如果输入的为字符0,则退出 </span></span><br><span class="line">    t=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">t=(BTreeNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(BTreeNode));<span class="comment">//动态申请空间 </span></span><br><span class="line"><span class="built_in">strcpy</span>(t-&gt;data,x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t请输入%s结点的左子节点:&quot;</span>,t-&gt;data);</span><br><span class="line">t-&gt;left=CreateTree();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t请输入%s结点的右子节点:&quot;</span>,t-&gt;data);</span><br><span class="line">t-&gt;right=CreateTree();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每次创建结点时候，如果输入0代表是NULL结点，否则便递归去创建当前结点的左儿子和右儿子，最终以先序遍历的方式去创建整颗二叉树</p><h4 id="先序遍历">先序遍历</h4><p>根左右遍历</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//先序遍历</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PreOrder</span><span class="params">(BTreeNode *T)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!T) <span class="keyword">return</span> ;<span class="comment">//当前结点为空，直接退出函数</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%3s&quot;</span>,T-&gt;data);<span class="comment">//输出当前根结点 </span></span><br><span class="line">PreOrder(T-&gt;left);<span class="comment">//递归左子树 </span></span><br><span class="line">PreOrder(T-&gt;right);<span class="comment">//递归右子树 </span></span><br><span class="line"></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>到达当前结点后，先输出当前结点的值，如果当前结点有左子树，那么就递归左子树，直到到达null结点开始回溯，然后递归右子树。</p><p>对于递归的每一个结点，都是输出当前结点，然后先递归左子树，再递归右子树</p><h4 id="中序遍历">中序遍历</h4><p>左根右遍历</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//中序遍历</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InOrder</span><span class="params">(BTreeNode *T)</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">if</span>(!T) <span class="keyword">return</span> ;<span class="comment">//当前结点为空，直接退出函数</span></span><br><span class="line"> </span><br><span class="line">InOrder(T-&gt;left);<span class="comment">//递归左子树 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%3s&quot;</span>,T-&gt;data);<span class="comment">//输出当前根结点 </span></span><br><span class="line">InOrder(T-&gt;right);<span class="comment">//递归右子树 </span></span><br><span class="line"> </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>到达当前结点后，先递归左子树，直到到达null结点开始回溯，输出当前结点的值，然后递归右子树。</p><p>对于递归的每一个结点，都是先递归左子树，输出当前结点的值，再递归右子树</p><h4 id="后序遍历">后序遍历</h4><p>左右根</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//后序遍历</span></span><br><span class="line">  <span class="type">void</span> <span class="title function_">PostOrder</span><span class="params">(BTreeNode *T)</span></span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">if</span>(!T) <span class="keyword">return</span> ;<span class="comment">//当前结点为空，直接退出函数</span></span><br><span class="line">  </span><br><span class="line">PostOrder(T-&gt;left);<span class="comment">//递归左子树 </span></span><br><span class="line">PostOrder(T-&gt;right);<span class="comment">//递归右子树 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%3s&quot;</span>,T-&gt;data);<span class="comment">//输出当前根结点 </span></span><br><span class="line">  </span><br><span class="line">   &#125; </span><br></pre></td></tr></table></figure><p>到达当前结点后，先递归左子树，直到到达null结点开始回溯，然后递归右子树，最后输出当前结点的值。</p><p>对于递归的每一个结点，都是先递归左子树，再递归右子树，最后输出当前结点的值。</p><h4 id="输出叶子节点的值">输出叶子节点的值</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输出二叉树叶子节点 </span></span><br><span class="line">  <span class="type">void</span> <span class="title function_">printLeaf</span><span class="params">(BTreeNode *T)</span>&#123;<span class="comment">//n记录是第一个叶子节点，如果是第一个，保证输出格式 </span></span><br><span class="line">  <span class="keyword">if</span>(!T) <span class="keyword">return</span> ;<span class="comment">//当前结点为空，直接退出函数</span></span><br><span class="line"><span class="keyword">if</span>(T-&gt;left==<span class="literal">NULL</span> &amp;&amp; T-&gt;right==<span class="literal">NULL</span>)&#123;<span class="comment">//如果为叶子节点 </span></span><br><span class="line"><span class="keyword">if</span>(leafFormat==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t叶子节点为:%s&quot;</span>,T-&gt;data);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t%s&quot;</span>,T-&gt;data);</span><br><span class="line">&#125;</span><br><span class="line">leafFormat++;</span><br><span class="line">&#125;</span><br><span class="line">printLeaf(T-&gt;left);</span><br><span class="line">printLeaf(T-&gt;right); </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>如果到达的一个节点同时没有左子树和右子树，那么便是叶子节点，那么先序遍历的同时判断一下到达的结点是否有左子树和右子树，有的话将其输出，leafFormat是为了判断第一个输出的叶子节点，保持输出格式好看一些</p><h4 id="输出叶子节点的个数">输出叶子节点的个数</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//输出二叉树的叶子结点数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Leafnum</span><span class="params">(BTreeNode *T,<span class="type">int</span> *count)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!T) <span class="keyword">return</span> ;<span class="comment">//当前结点为空，直接退出函数</span></span><br><span class="line"><span class="keyword">if</span>(T-&gt;left==<span class="literal">NULL</span> &amp;&amp; T-&gt;right==<span class="literal">NULL</span>)<span class="comment">//且左右结点都是空，说明是叶子节点 </span></span><br><span class="line">*count=*count+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">Leafnum(T-&gt;left,count);</span><br><span class="line">Leafnum(T-&gt;right,count);</span><br><span class="line">  </span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><p>如果到达的一个节点同时没有左子树和右子树，那么便是叶子节点</p><h4 id="二叉树高度">二叉树高度</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="comment">//输出二叉树高度 </span></span><br><span class="line"> <span class="type">void</span> <span class="title function_">binaryHeight</span><span class="params">(BTreeNode *T,<span class="type">int</span> h)</span>&#123;<span class="comment">//求高度，一颗子树递归几次，高度就是多少，取最大值 </span></span><br><span class="line"> <span class="keyword">if</span>(!T) <span class="keyword">return</span> ;<span class="comment">//当前结点为空，直接退出函数</span></span><br><span class="line"><span class="keyword">if</span>(T-&gt;left==<span class="literal">NULL</span> &amp;&amp; T-&gt;right==<span class="literal">NULL</span>)&#123;<span class="comment">//且左右结点都是空，说明是叶子节点 </span></span><br><span class="line">maxHeight=maxHeight&gt;h?maxHeight:h;</span><br><span class="line">&#125;</span><br><span class="line">binaryHeight(T-&gt;left,h+<span class="number">1</span>);</span><br><span class="line">binaryHeight(T-&gt;right,h+<span class="number">1</span>);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>判断一个节点是第多少层，是由上一层递归下来的，于是先序遍历的时候带一个层号，表示当前是第几层，递归的时候层号+1，叶子节点一定是最后一层，对所有的叶子节点的层号判个最大值就是答案。</p><h4 id="打印二叉树">打印二叉树</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打印二叉树</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">printBinaryTree</span><span class="params">(BTreeNode *T,<span class="type">int</span> level)</span> &#123; <span class="comment">//层数 </span></span><br><span class="line"><span class="keyword">if</span> (!T) &#123;<span class="comment">//如果为空节点 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;level;i++) &#123; <span class="comment">//打印空格 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NULL\n&quot;</span>);<span class="comment">//输出空节点 </span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">printBinaryTree(T-&gt;right,level+<span class="number">1</span>);<span class="comment">//右结点 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;level;i++) &#123; <span class="comment">//打印空格 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,T-&gt;data);<span class="comment">//输出当前结点 </span></span><br><span class="line">printBinaryTree(T-&gt;left,level+<span class="number">1</span>);<span class="comment">//递归左结点 </span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>竖着打印二叉树，右结点在上面，根在中间，左结点在下面，对于每个结点，先递归去右结点，如果为空便打印层号数量的空格，然后输出NULL，回溯到上一层，然后打印上一层，层数数量的空格，再输出结点值再去递归左子树</p>]]></content>
    
    
    <summary type="html">课程设计二叉树遍历</summary>
    
    
    
    <category term="大学作业" scheme="http://1804040636.github.io/categories/%E5%A4%A7%E5%AD%A6%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="数据结构" scheme="http://1804040636.github.io/categories/%E5%A4%A7%E5%AD%A6%E4%BD%9C%E4%B8%9A/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="C" scheme="http://1804040636.github.io/tags/C/"/>
    
    <category term="数据结构" scheme="http://1804040636.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="课程设计" scheme="http://1804040636.github.io/tags/%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>操作系统作业:早期磁道算法</title>
    <link href="http://1804040636.github.io/2023/01/31/%E6%97%A9%E6%9C%9F%E7%A3%81%E9%81%93%E7%AE%97%E6%B3%95/"/>
    <id>http://1804040636.github.io/2023/01/31/%E6%97%A9%E6%9C%9F%E7%A3%81%E9%81%93%E7%AE%97%E6%B3%95/</id>
    <published>2023-01-30T20:15:25.000Z</published>
    <updated>2023-03-04T19:12:24.110Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">38</span>,<span class="number">6</span>,<span class="number">37</span>,<span class="number">100</span>,<span class="number">14</span>,<span class="number">124</span>,<span class="number">65</span>,<span class="number">67</span>&#125;;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">boolean</span> st[]=<span class="keyword">new</span> <span class="title class_">boolean</span>[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> pos=<span class="number">30</span>,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        FCFS();</span><br><span class="line">        SSTF();</span><br><span class="line">        SCAN();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">FCFS</span><span class="params">()</span>&#123;</span><br><span class="line">        pos=<span class="number">30</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;FCFS算法:&quot;</span>);</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        List&lt;Integer&gt; list=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        System.out.printf(<span class="string">&quot;磁头移动顺序为:%d &quot;</span>,pos);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;a.length;i++)&#123;</span><br><span class="line">            System.out.print(a[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">            list.add(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        calc(list);</span><br><span class="line">        System.out.println(<span class="string">&quot;=&quot;</span>+ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">calc</span><span class="params">(List&lt;Integer&gt; list)</span>&#123;</span><br><span class="line">        pos=<span class="number">30</span>;</span><br><span class="line">        System.out.print(<span class="string">&quot;磁道移动数为:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;list.size();i++)&#123;</span><br><span class="line">            System.out.print(Math.abs(list.get(i)-pos));</span><br><span class="line">            <span class="keyword">if</span>(i!=list.size()-<span class="number">1</span>) System.out.print(<span class="string">&quot;+&quot;</span>);</span><br><span class="line">            ans=ans+Math.abs(list.get(i)-pos);</span><br><span class="line">            pos=list.get(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">SSTF</span><span class="params">()</span>&#123;</span><br><span class="line">        pos=<span class="number">30</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;SSTF算法:&quot;</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;磁头移动顺序为:%d &quot;</span>,pos);</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        List&lt;Integer&gt; list=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;a.length;i++)&#123;</span><br><span class="line">            <span class="type">int</span> idx=-<span class="number">1</span>,ma=<span class="number">1</span>&lt;&lt;<span class="number">30</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;a.length;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(!st[j]&amp;&amp;Math.abs(a[j]-pos)&lt;ma) &#123;</span><br><span class="line">                      ma=Math.abs(a[j]-pos);</span><br><span class="line">                      idx=j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            st[idx]=<span class="literal">true</span>;</span><br><span class="line">            list.add(a[idx]);</span><br><span class="line">            pos=a[idx];</span><br><span class="line">            System.out.print(a[idx]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        calc(list);</span><br><span class="line">        System.out.println(<span class="string">&quot;=&quot;</span>+ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">SCAN</span><span class="params">()</span>&#123;</span><br><span class="line">        pos=<span class="number">30</span>;</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;SCAN算法:&quot;</span>);</span><br><span class="line">        <span class="type">int</span> b[]=<span class="keyword">new</span> <span class="title class_">int</span>[a.length];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;a.length;i++) b[i]=a[i];</span><br><span class="line">        Arrays.sort(b);</span><br><span class="line">        System.out.printf(<span class="string">&quot;磁头移动顺序为:%d &quot;</span>,pos);</span><br><span class="line">        List&lt;Integer&gt; list=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(;i&lt;b.length;i++) <span class="keyword">if</span>(b[i]&gt;=pos) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;b.length;j++)&#123;</span><br><span class="line">            System.out.print(b[j]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">            pos=b[j];</span><br><span class="line">            list.add(b[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i-<span class="number">1</span>;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">            System.out.print(b[j]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">            pos=b[j];</span><br><span class="line">            list.add(b[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        calc(list);</span><br><span class="line">        System.out.println(<span class="string">&quot;=&quot;</span>+ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>FCFS算法:<br>磁头移动顺序为:30 38 6 37 100 14 124 65 67<br>磁道移动数为:8+32+31+63+86+110+59+2=391<br>SSTF算法:<br>磁头移动顺序为:30 37 38 14 6 65 67 100 124<br>磁道移动数为:7+1+24+8+59+2+33+24=158<br>SCAN算法:<br>磁头移动顺序为:30 37 38 65 67 100 124 14 6<br>磁道移动数为:7+1+27+2+33+24+110+8=212</p>]]></content>
    
    
    <summary type="html">早期磁道算法</summary>
    
    
    
    <category term="大学作业" scheme="http://1804040636.github.io/categories/%E5%A4%A7%E5%AD%A6%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="操作系统" scheme="http://1804040636.github.io/categories/%E5%A4%A7%E5%AD%A6%E4%BD%9C%E4%B8%9A/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="Java" scheme="http://1804040636.github.io/tags/Java/"/>
    
    <category term="操作系统" scheme="http://1804040636.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="大学作业" scheme="http://1804040636.github.io/tags/%E5%A4%A7%E5%AD%A6%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>银行家算法课程设计</title>
    <link href="http://1804040636.github.io/2023/01/31/%E9%93%B6%E8%A1%8C%E5%AE%B6%E7%AE%97%E6%B3%95%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
    <id>http://1804040636.github.io/2023/01/31/%E9%93%B6%E8%A1%8C%E5%AE%B6%E7%AE%97%E6%B3%95%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/</id>
    <published>2023-01-30T20:15:25.000Z</published>
    <updated>2023-03-04T19:12:14.049Z</updated>
    
    <content type="html"><![CDATA[<p>银行家算法代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 操作系统;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 课程设计银行家算法 &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">6</span>, M = <span class="number">6</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> Max[][] = <span class="keyword">new</span> <span class="title class_">int</span>[N][M];<span class="comment">//进程最大所需资源矩阵</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> Allocation[][] = <span class="keyword">new</span> <span class="title class_">int</span>[N][M];<span class="comment">//已分配资源矩阵</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> Need[][] = <span class="keyword">new</span> <span class="title class_">int</span>[N][M];<span class="comment">//进程还需要到资源分配矩阵</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> Available[] = <span class="keyword">new</span> <span class="title class_">int</span>[M];<span class="comment">//当前所拥有资源矩阵</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> safePath[] = <span class="keyword">new</span> <span class="title class_">int</span>[N];<span class="comment">//保存安全序列</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> Request[] = <span class="keyword">new</span> <span class="title class_">int</span>[M];<span class="comment">//请求资源向量</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">boolean</span> st[] = <span class="keyword">new</span> <span class="title class_">boolean</span>[<span class="number">5</span>];<span class="comment">//标记各个输入是否已经输入,nm,Max,Allocation,Need,Available</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n, m;<span class="comment">//记录进程数和每个进程需要的资源数量</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">myInformation</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.printf(<span class="string">&quot;姓名:%s       班级:%s        学号:%s\n&quot;</span>, <span class="string">&quot;朱浩然&quot;</span>, <span class="string">&quot;20计科8班&quot;</span>, <span class="string">&quot;20220310835&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">menu</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;1.输入进程数量与每个资源所需的资源&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;2.输入Max矩阵&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;3.输入Allocation矩阵&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;4.输出Max矩阵&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;5.输出Allocation矩阵&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;6.用Max矩阵和Allocation构造Need矩阵&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;7.输出Need矩阵&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;8.输入Available&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;9.输出Available&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;10.判断系统是否安全&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;11.执行银行家算法，申请资源&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;12.重置所有内容&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;13.打印进程状态表&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;14.打印安全序列&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;15.重新打印选项菜单&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;16.退出&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">inputMatrix</span><span class="params">(<span class="type">int</span> a[][], <span class="type">int</span> n, <span class="type">int</span> m)</span> &#123;<span class="comment">//输入矩阵</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">                a[i][j] = in.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">outputMatrix</span><span class="params">(<span class="type">int</span> a[][], <span class="type">int</span> n, <span class="type">int</span> m)</span> &#123;<span class="comment">//输出矩阵</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">                System.out.print(a[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">inputVector</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> m)</span> &#123;<span class="comment">//输入向量</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            a[i] = in.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">outputVector</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> m)</span> &#123;<span class="comment">//输出向量</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            System.out.print(a[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">initNeed</span><span class="params">(<span class="type">int</span> Max[][], <span class="type">int</span> Allocation[][], <span class="type">int</span> n, <span class="type">int</span> m)</span> &#123;<span class="comment">//初始化Need数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">                Need[i][j] = Max[i][j] - Allocation[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">check</span><span class="params">(<span class="type">int</span> work[], <span class="type">int</span> i)</span> &#123;<span class="comment">//判断该进程是否可以被完全分配资源</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (work[j] &lt; Need[i][j]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">is_OK</span><span class="params">()</span> &#123;<span class="comment">//寻找安全序列，验证安全性算法</span></span><br><span class="line">        <span class="type">int</span> work[] = <span class="keyword">new</span> <span class="title class_">int</span>[M];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; M; i++) work[i] = Available[i];<span class="comment">//将可使用数组赋值给work</span></span><br><span class="line">        <span class="type">boolean</span> vis[] = <span class="keyword">new</span> <span class="title class_">boolean</span>[N];<span class="comment">//判断哪个进程被使用</span></span><br><span class="line">        Arrays.fill(vis, <span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!vis[j] &amp;&amp; check(work, j)) &#123;<span class="comment">//如果该进程未被使用，且可以满足</span></span><br><span class="line">                    t = j;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (t == -<span class="number">1</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;系统不安全！&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            vis[t] = <span class="literal">true</span>;</span><br><span class="line">            safePath[i] = t;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">                work[j] += Allocation[t][j];<span class="comment">//加上该进程已分配的资源</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">solve</span><span class="params">()</span> &#123;<span class="comment">//银行家算法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入你要请求资源的进程&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">processId</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入你想要请求的资源&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            Request[i] = in.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> processId;</span><br><span class="line">        System.out.println(<span class="string">&quot;进程&quot;</span> + t + <span class="string">&quot;执行中&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (Request[j] &gt; Need[t][j]) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;申请资源大于进程所需资源&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (Available[j] &lt; Request[j]) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;申请资源大于系统所需资源&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">            Available[j] = Available[j] - Request[j];<span class="comment">//</span></span><br><span class="line">            Allocation[t][j] = Allocation[t][j] + Request[j];<span class="comment">//已分配资源+新分配资源</span></span><br><span class="line">            Need[t][j] = Need[t][j] - Request[j];<span class="comment">//进程得到了一部分资源，所需资源减少</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> is_OK();</span><br><span class="line">        <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;分配资源失败，退出本次分配&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; m; j++) &#123;<span class="comment">//撤销已分配</span></span><br><span class="line">                Available[j] = Available[j] + Request[j];</span><br><span class="line">                Allocation[t][j] = Allocation[t][j] - Request[j];</span><br><span class="line">                Need[t][j] = Need[t][j] + Request[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;进程&quot;</span> + t + <span class="string">&quot;执行完毕&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (; i &lt; m; i++) &#123;<span class="comment">//如果一个进程所有请求被满足，释放其所有资源</span></span><br><span class="line">            <span class="keyword">if</span> (Need[t][i] != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i == m) &#123;<span class="comment">//进程执行完毕</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">                Available[j] += Allocation[t][j];<span class="comment">//进程执行完成，释放其资源</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">display</span><span class="params">()</span> &#123;<span class="comment">//打印进程需求表</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        System.out.printf(<span class="string">&quot;|—————————————————————————————————————————-|\n&quot;</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;%-5s%-19s%-19s%-19s%-20s&quot;</span>, <span class="string">&quot;|进\\资源&quot;</span>, <span class="string">&quot;|       Max        &quot;</span>, <span class="string">&quot;|    Allocation    &quot;</span>, <span class="string">&quot;|       Need       &quot;</span>, <span class="string">&quot;|     Available    |\n&quot;</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;|   \\情 |—————————|—————————|—————————|—————————|\n&quot;</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;|程  \\况&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;|&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">                System.out.printf(<span class="string">&quot; %s &quot;</span>, (<span class="type">char</span>) (<span class="string">&#x27;A&#x27;</span> + j));</span><br><span class="line">            &#125;</span><br><span class="line">            tmp = (M - m) * <span class="number">3</span>;</span><br><span class="line">            printVoid(tmp, <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.printf(<span class="string">&quot;|\n&quot;</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;|-------|—————————|—————————|—————————|—————————|\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;|  P%-3d |&quot;</span>, i);</span><br><span class="line">            printProcessTableMatrix(Max, i);</span><br><span class="line">            printProcessTableMatrix(Allocation, i);</span><br><span class="line">            printProcessTableMatrix(Need, i);</span><br><span class="line">            printProcessTableVector(Available);</span><br><span class="line"></span><br><span class="line">            System.out.printf(<span class="string">&quot;|\n&quot;</span>);</span><br><span class="line">            System.out.printf(<span class="string">&quot;|-------|—————————|—————————|—————————|—————————|\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printProcessTableMatrix</span><span class="params">(<span class="type">int</span> a[][], <span class="type">int</span> i)</span> &#123;<span class="comment">//打印表格中的矩阵数据</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; m; k++) &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot; %d &quot;</span>, a[i][k]);</span><br><span class="line">        &#125;</span><br><span class="line">        printVoid((M - m) * <span class="number">3</span>, <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;|&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printProcessTableVector</span><span class="params">(<span class="type">int</span> a[])</span> &#123;<span class="comment">//打印Available数据</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot; %d &quot;</span>, Available[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        printVoid((M - m) * <span class="number">3</span>, <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printVoid</span><span class="params">(<span class="type">int</span> s, <span class="type">char</span> ch)</span> &#123;<span class="comment">//用来循环打印空格</span></span><br><span class="line">        <span class="keyword">while</span> (s-- &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;%s&quot;</span>, ch);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">clear</span><span class="params">()</span> &#123;<span class="comment">//重置</span></span><br><span class="line">        n = <span class="number">0</span>;</span><br><span class="line">        m = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            Arrays.fill(Max[i], <span class="number">0</span>);</span><br><span class="line">            Arrays.fill(Allocation[i], <span class="number">0</span>);</span><br><span class="line">            Arrays.fill(Need[i], <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Arrays.fill(Available, <span class="number">0</span>);</span><br><span class="line">        Arrays.fill(st, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        myInformation();</span><br><span class="line">        menu();</span><br><span class="line">        <span class="type">int</span> <span class="variable">op</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请选择:&quot;</span>);</span><br><span class="line">            op = in.nextInt();</span><br><span class="line">            <span class="keyword">if</span> (op == <span class="number">1</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入进程数n和每个进程所需要的资源种类m&quot;</span>);</span><br><span class="line">                n = in.nextInt();</span><br><span class="line">                m = in.nextInt();</span><br><span class="line">                System.out.println(<span class="string">&quot;输入成功&quot;</span>);</span><br><span class="line">                st[<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!st[<span class="number">0</span>]) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;进程数n和每个进程所需要的资源种类m未输入&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.printf(<span class="string">&quot;请输入%d行%d列的Max矩阵\n&quot;</span>, n, m);</span><br><span class="line">                inputMatrix(Max, n, m);<span class="comment">//输入</span></span><br><span class="line">                st[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">                System.out.println(<span class="string">&quot;输入成功&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">3</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!st[<span class="number">1</span>]) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;Max矩阵未被初始化&quot;</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.printf(<span class="string">&quot;请输入%d行%d列的Allocation矩阵\n&quot;</span>, n, m);</span><br><span class="line">                inputMatrix(Allocation, n, m);<span class="comment">//输入</span></span><br><span class="line">                st[<span class="number">2</span>] = <span class="literal">true</span>;</span><br><span class="line">                System.out.println(<span class="string">&quot;输入成功&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">4</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!st[<span class="number">1</span>]) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;Max矩阵未被初始化&quot;</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(<span class="string">&quot;输出Max矩阵&quot;</span>);</span><br><span class="line">                outputMatrix(Max, n, m);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">5</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!st[<span class="number">2</span>]) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;Allocation矩阵未被初始化&quot;</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(<span class="string">&quot;输出Allocation矩阵&quot;</span>);</span><br><span class="line">                outputMatrix(Allocation, n, m);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">6</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!st[<span class="number">1</span>] || !st[<span class="number">2</span>]) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;Max矩阵或Allocation矩阵还未初始化&quot;</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                initNeed(Max, Allocation, n, m);<span class="comment">//初始化Need矩阵</span></span><br><span class="line">                st[<span class="number">3</span>] = <span class="literal">true</span>;</span><br><span class="line">                System.out.println(<span class="string">&quot;Need矩阵初始化成功&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">7</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!st[<span class="number">3</span>]) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;Need矩阵未初始化&quot;</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(<span class="string">&quot;输出Need矩阵&quot;</span>);</span><br><span class="line">                outputMatrix(Need, n, m);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">8</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;输入Available序列&quot;</span>);</span><br><span class="line">                inputVector(Available, m);</span><br><span class="line">                st[<span class="number">4</span>] = <span class="literal">true</span>;</span><br><span class="line">                System.out.println(<span class="string">&quot;输入成功&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">9</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!st[<span class="number">4</span>]) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;Available未被初始化&quot;</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(<span class="string">&quot;输出Available矩阵&quot;</span>);</span><br><span class="line">                outputVector(Available, m);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">10</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!(st[<span class="number">0</span>] &amp;&amp; st[<span class="number">1</span>] &amp;&amp; st[<span class="number">2</span>] &amp;&amp; st[<span class="number">3</span>] &amp;&amp; st[<span class="number">4</span>])) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;前置资源未初始化完毕&quot;</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> is_OK();</span><br><span class="line">                <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;系统安全&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">11</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!(st[<span class="number">0</span>] &amp;&amp; st[<span class="number">1</span>] &amp;&amp; st[<span class="number">2</span>] &amp;&amp; st[<span class="number">3</span>] &amp;&amp; st[<span class="number">4</span>])) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;前置资源未初始化完毕&quot;</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                solve();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">12</span>) &#123;</span><br><span class="line">                clear();</span><br><span class="line">                System.out.println(<span class="string">&quot;重置成功&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">13</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!(st[<span class="number">0</span>] &amp;&amp; st[<span class="number">1</span>] &amp;&amp; st[<span class="number">2</span>] &amp;&amp; st[<span class="number">3</span>] &amp;&amp; st[<span class="number">4</span>])) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;前置资源未初始化完毕&quot;</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                display();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">14</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;打印安全序列&quot;</span>);</span><br><span class="line">                <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> is_OK();</span><br><span class="line">                <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;安全序列为:&quot;</span>);</span><br><span class="line">                    outputVector(safePath, n);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">15</span>) &#123;</span><br><span class="line">                menu();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">16</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;退出成功&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;请选择合法操作&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">课程设计银行家算法的代码</summary>
    
    
    
    <category term="大学作业" scheme="http://1804040636.github.io/categories/%E5%A4%A7%E5%AD%A6%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="课程设计" scheme="http://1804040636.github.io/categories/%E5%A4%A7%E5%AD%A6%E4%BD%9C%E4%B8%9A/%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="Java" scheme="http://1804040636.github.io/tags/Java/"/>
    
    <category term="操作系统" scheme="http://1804040636.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="课程设计" scheme="http://1804040636.github.io/tags/%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
</feed>
